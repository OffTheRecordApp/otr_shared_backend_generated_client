/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as models from '../model/models';

/* tslint:disable:no-unused-variable member-ordering */

export class CountyControllerApi {
    protected basePath = 'http://otr-backend-service-us-devo.offtherecord.com:443';
    public defaultHeaders : any = {};

    static $inject: string[] = ['$http', '$httpParamSerializer', 'basePath'];

    constructor(protected $http: ng.IHttpService, protected $httpParamSerializer?: (d: any) => any, basePath?: string) {
        if (basePath !== undefined) {
            this.basePath = basePath;
        }
    }

    /**
     * 
     * @summary getCounties
     * @param state state
     */
    public getCountiesUsingGET (state: 'USState.AL(name=Alabama, abbreviation=AL, successRate=95, timezone=America/Chicago)' | 'USState.AK(name=Alaska, abbreviation=AK, successRate=95, timezone=America/Anchorage)' | 'USState.AZ(name=Arizona, abbreviation=AZ, successRate=85, timezone=America/Denver)' | 'USState.AR(name=Arkansas, abbreviation=AR, successRate=95, timezone=America/Chicago)' | 'USState.CA(name=California, abbreviation=CA, successRate=93, timezone=America/Los_Angeles)' | 'USState.CO(name=Colorado, abbreviation=CO, successRate=90, timezone=America/Denver)' | 'USState.CT(name=Connecticut, abbreviation=CT, successRate=95, timezone=America/New_York)' | 'USState.DE(name=Delaware, abbreviation=DE, successRate=95, timezone=America/New_York)' | 'USState.DC(name=District of Columbia, abbreviation=DC, successRate=95, timezone=America/New_York)' | 'USState.FL(name=Florida, abbreviation=FL, successRate=90, timezone=America/New_York)' | 'USState.GA(name=Georgia, abbreviation=GA, successRate=85, timezone=America/New_York)' | 'USState.HI(name=Hawaii, abbreviation=HI, successRate=90, timezone=Pacific/Honolulu)' | 'USState.ID(name=Idaho, abbreviation=ID, successRate=85, timezone=America/Denver)' | 'USState.IL(name=Illinois, abbreviation=IL, successRate=85, timezone=America/Chicago)' | 'USState.IN(name=Indiana, abbreviation=IN, successRate=95, timezone=America/Chicago)' | 'USState.IA(name=Iowa, abbreviation=IA, successRate=95, timezone=America/Chicago)' | 'USState.KS(name=Kansas, abbreviation=KS, successRate=95, timezone=America/Chicago)' | 'USState.KY(name=Kentucky, abbreviation=KY, successRate=95, timezone=America/New_York)' | 'USState.LA(name=Louisiana, abbreviation=LA, successRate=95, timezone=America/Chicago)' | 'USState.ME(name=Maine, abbreviation=ME, successRate=95, timezone=America/Chicago)' | 'USState.MD(name=Maryland, abbreviation=MD, successRate=95, timezone=America/New_York)' | 'USState.MA(name=Massachusetts, abbreviation=MA, successRate=95, timezone=America/New_York)' | 'USState.MI(name=Michigan, abbreviation=MI, successRate=95, timezone=America/New_York)' | 'USState.MN(name=Minnesota, abbreviation=MN, successRate=95, timezone=America/Chicago)' | 'USState.MS(name=Mississippi, abbreviation=MS, successRate=95, timezone=America/Chicago)' | 'USState.MO(name=Missouri, abbreviation=MO, successRate=90, timezone=America/Chicago)' | 'USState.MT(name=Montana, abbreviation=MT, successRate=95, timezone=America/Denver)' | 'USState.NE(name=Nebraska, abbreviation=NE, successRate=95, timezone=America/Chicago)' | 'USState.NV(name=Nevada, abbreviation=NV, successRate=95, timezone=America/Los_Angeles)' | 'USState.NH(name=New Hampshire, abbreviation=NH, successRate=95, timezone=America/New_York)' | 'USState.NJ(name=New Jersey, abbreviation=NJ, successRate=90, timezone=America/New_York)' | 'USState.NM(name=New Mexico, abbreviation=NM, successRate=95, timezone=America/Denver)' | 'USState.NY(name=New York, abbreviation=NY, successRate=95, timezone=America/New_York)' | 'USState.NC(name=North Carolina, abbreviation=NC, successRate=95, timezone=America/New_York)' | 'USState.ND(name=North Dakota, abbreviation=ND, successRate=95, timezone=America/Chicago)' | 'USState.OH(name=Ohio, abbreviation=OH, successRate=80, timezone=America/New_York)' | 'USState.OK(name=Oklahoma, abbreviation=OK, successRate=96, timezone=America/Chicago)' | 'USState.OR(name=Oregon, abbreviation=OR, successRate=88, timezone=America/Los_Angeles)' | 'USState.PA(name=Pennsylvania, abbreviation=PA, successRate=90, timezone=America/New_York)' | 'USState.RI(name=Rhode Island, abbreviation=RI, successRate=95, timezone=America/New_York)' | 'USState.SC(name=South Carolina, abbreviation=SC, successRate=95, timezone=America/New_York)' | 'USState.SD(name=South Dakota, abbreviation=SD, successRate=95, timezone=America/Chicago)' | 'USState.TN(name=Tennessee, abbreviation=TN, successRate=95, timezone=America/Chicago)' | 'USState.TX(name=Texas, abbreviation=TX, successRate=85, timezone=America/Chicago)' | 'USState.UT(name=Utah, abbreviation=UT, successRate=90, timezone=America/Denver)' | 'USState.VT(name=Vermont, abbreviation=VT, successRate=89, timezone=America/New_York)' | 'USState.VA(name=Virginia, abbreviation=VA, successRate=90, timezone=America/New_York)' | 'USState.WA(name=Washington, abbreviation=WA, successRate=97, timezone=America/Los_Angeles)' | 'USState.WV(name=West Virginia, abbreviation=WV, successRate=93, timezone=America/New_York)' | 'USState.WI(name=Wisconsin, abbreviation=WI, successRate=95, timezone=America/Chicago)' | 'USState.WY(name=Wyoming, abbreviation=WY, successRate=95, timezone=America/Denver)', extraHttpRequestParams?: any ) : ng.IHttpPromise<models.GetCountiesResponse> {
        const localVarPath = this.basePath + '/api/v1/counties';

        let queryParameters: any = {};
        let headerParams: any = (<any>Object).assign({}, this.defaultHeaders);
        // verify required parameter 'state' is not null or undefined
        if (state === null || state === undefined) {
            throw new Error('Required parameter state was null or undefined when calling getCountiesUsingGET.');
        }

        if (state !== undefined) {
            queryParameters['state'] = state;
        }

        let httpRequestParams: ng.IRequestConfig = {
            method: 'GET',
            url: localVarPath,
            params: queryParameters,
            headers: headerParams
        };

        if (extraHttpRequestParams) {
            httpRequestParams = (<any>Object).assign(httpRequestParams, extraHttpRequestParams);
        }

        return this.$http(httpRequestParams);
    }
}
