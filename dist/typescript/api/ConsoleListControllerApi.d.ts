/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="angular" />
import * as models from '../model/models';
export declare class ConsoleListControllerApi {
    protected $http: ng.IHttpService;
    protected $httpParamSerializer?: (d: any) => any;
    protected basePath: string;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, $httpParamSerializer?: (d: any) => any, basePath?: string);
    /**
     *
     * @summary findDisputes
     * @param request request
     */
    findDisputesUsingPOST(request: models.FindDisputesRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.FindChargeDisputesResponse>;
    /**
     *
     * @summary getCasesWithCoverageObtained
     * @param request request
     */
    getCasesWithCoverageObtainedUsingPOST(request: models.GenericAdminListRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCasesWithCoverageObtainedResponse>;
    /**
     *
     * @summary getCasesWithMissingLawfirmPayouts
     * @param request request
     */
    getCasesWithMissingLawfirmPayoutsUsingPOST(request: object, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCasesWithMissingLawfirmPayoutsResponse>;
    /**
     *
     * @summary getCasesWithOverduePayments
     * @param request request
     */
    getCasesWithOverduePaymentsUsingPOST(request: models.GetCasesWithUncapturedChargesRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCasesWithOverduePaymentsResponse>;
    /**
     *
     * @summary getCitationPhoneLeads
     * @param request request
     */
    getCitationPhoneLeadsUsingPOST(request: models.GetCitationPhoneLeadsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCitationPhoneLeadsResponse>;
    /**
     *
     * @summary getCitationsWithMissingFields
     * @param request request
     */
    getCitationsWithMissingFieldsUsingPOST(request: models.GetCitationsWithMissingFieldsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCitationsWithMissingFieldsResponse>;
    /**
     *
     * @summary getCitationsWithMissingFieldsV2
     * @param request request
     */
    getCitationsWithMissingFieldsV2UsingPOST(request: models.GetCitationsWithMissingFieldsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCitationsWithMissingFieldsResponse>;
    /**
     *
     * @summary getClientConfirmedUnpaidCases
     * @param request request
     */
    getClientConfirmedUnpaidCasesUsingPOST(request: object, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetClientConfirmedUnpaidCasesResponse>;
    /**
     *
     * @summary getDeclinedCases
     * @param request request
     */
    getDeclinedCasesUsingPOST(request: models.GetDeclinedCasesRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetDeclinedCasesResponse>;
    /**
     *
     * @summary getInvalidCasesWithStripeCharge
     * @param request request
     */
    getInvalidCasesWithStripeChargeUsingPOST(request: object, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetInvalidCasesWithStripeChargeResponse>;
    /**
     *
     * @summary getLostCasesWithTransferNotReversed
     * @param request request
     */
    getLostCasesWithTransferNotReversedUsingPOST(request: models.GetLostCasesWithTransferNotReversedRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLostCasesWithTransferNotReversedResponse>;
    /**
     *
     * @summary getPendingCases
     * @param request request
     */
    getPendingCasesUsingPOST(request: object, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetPendingCasesResponse>;
    /**
     *
     * @summary getPendingTicketReviews
     * @param request request
     */
    getPendingTicketReviewsUsingPOST(request: models.GetPendingTicketReviewsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetPendingTicketReviewsResponse>;
    /**
     *
     * @summary listBillingSubscribers
     * @param length length
     * @param page page
     * @param start start
     * @param statuses statuses
     * @param request request
     */
    listBillingSubscribersUsingPOST(length?: number, page?: number, start?: string, statuses?: 'ACTIVE' | 'CANCELED' | 'INCOMPLETE' | 'INCOMPLETE_EXPIRED' | 'IN_TRIAL_PERIOD' | 'PAST_DUE' | 'UNKNOWN' | 'UNPAID', request?: models.ListBillingSubscribersRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.ListBillingSubscribersResponse>;
    /**
     *
     * @summary listLawfirmLeads
     * @param request request
     */
    listLawfirmLeadsUsingPOST(request: models.GetLawfirmLeadsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmLeadsResponse>;
    /**
     *
     * @summary listPotentialCustomers
     * @param request request
     */
    listPotentialCustomersUsingPOST(request: models.GetPotentialCustomersRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetPotentialCustomersResponse>;
}
