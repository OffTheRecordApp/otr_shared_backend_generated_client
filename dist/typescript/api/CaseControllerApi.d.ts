/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="angular" />
import * as models from '../model/models';
export declare class CaseControllerApi {
    protected $http: ng.IHttpService;
    protected $httpParamSerializer?: (d: any) => any;
    protected basePath: string;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, $httpParamSerializer?: (d: any) => any, basePath?: string);
    /**
     *
     * @summary addViolationsToCitation
     * @param caseId caseId
     * @param request request
     */
    addViolationsToCitationUsingPOST(caseId: string, request: models.AddViolationsToCitationRequest, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary assignCaseToUser
     * @param caseId caseId
     * @param userId userId
     */
    assignCaseToUserUsingPOST(caseId: string, userId: number, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary assignOwner
     * @param caseId caseId
     */
    assignOwnerUsingPOST(caseId: string, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary findChargeDisputesByCaseId
     * @param caseId caseId
     */
    findChargeDisputesByCaseIdUsingGET(caseId: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.FindChargeDisputesResponse>;
    /**
     *
     * @summary getAppearanceAttorneysForCase
     * @param caseId caseId
     */
    getAppearanceAttorneysForCaseUsingGET(caseId: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetAppearanceAttorneysResponse>;
    /**
     *
     * @summary getSupportTicketsForCase
     * @param caseId caseId
     */
    getSupportTicketsForCaseUsingGET(caseId: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetSupportTicketsResponse>;
    /**
     *
     * @summary initiateCaseAndChargeCustomer
     * @param caseId caseId
     * @param request request
     */
    initiateCaseAndChargeCustomerUsingPOST(caseId: string, request: models.InitiateCaseAndChargeCustomerRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.InitiateCaseAndChargeCustomerResponse>;
    /**
     *
     * @summary initiateCase
     * @param caseId caseId
     * @param request request
     */
    initiateCaseUsingPOST(caseId: string, request?: object, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary markCaseAsResolved
     * @param caseId caseId
     * @param request request
     */
    markCaseAsResolvedUsingPOST(caseId: string, request: models.MarkCaseAsResolvedRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.MarkCaseAsResolvedResponse>;
    /**
     *
     * @summary removeViolationsFromCitation
     * @param caseId caseId
     * @param violationTypes violationTypes
     */
    removeViolationsFromCitationUsingDELETE(caseId: string, violationTypes: string, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary reopenCase
     * @param caseId caseId
     */
    reopenCaseUsingPUT(caseId: string, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary setArchiveOnCases
     * @param request request
     */
    setArchiveOnCasesUsingPUT(request: models.SetArchiveOnCasesRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary setCourtDateForCase
     * @param caseId caseId
     * @param request request
     */
    setCourtDateForCaseUsingPOST(caseId: string, request: models.SetCourtDateForCaseRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary submitRequestForPriceMatch
     * @param caseId caseId
     * @param priceMatchRequest priceMatchRequest
     */
    submitRequestForPriceMatchUsingPOST(caseId: string, priceMatchRequest: models.PriceMatchRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.PriceMatchResponse>;
    /**
     *
     * @summary updateCase
     * @param caseId caseId
     * @param caseFromRequest caseFromRequest
     */
    updateCaseUsingPUT(caseId: string, caseFromRequest: models.CaseDomainReq, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCaseResponse>;
    /**
     *
     * @summary updateDeclineTickets
     * @param caseId caseId
     * @param request request
     */
    updateDeclineTicketsUsingPUT(caseId: string, request: models.UpdateCaseDeclineTicketsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
}
