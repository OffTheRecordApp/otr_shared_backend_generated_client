/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="angular" />
import * as models from '../model/models';
export declare class RecurringBillingControllerApi {
    protected $http: ng.IHttpService;
    protected $httpParamSerializer?: (d: any) => any;
    protected basePath: string;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, $httpParamSerializer?: (d: any) => any, basePath?: string);
    /**
     *
     * @summary cancelBillingSubscription
     * @param id id
     * @param userId userId
     * @param isProrated isProrated
     */
    cancelBillingSubscriptionUsingDELETE(id: string, userId: string, isProrated?: boolean, extraHttpRequestParams?: any): ng.IHttpPromise<models.CancelBillingSubscriptionResponse>;
    /**
     *
     * @summary createBillingSubscription
     * @param userId userId
     * @param request request
     */
    createBillingSubscriptionUsingPOST(userId: number, request: models.CreateBillingSubscriptionRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.CreateBillingSubscriptionResponse>;
    /**
     *
     * @summary listBillingProducts
     * @param active active
     * @param audience audience
     * @param limit limit
     */
    listBillingProductsUsingGET(active?: boolean, audience?: string, limit?: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.ListBillingProductsResponse>;
    /**
     *
     * @summary listBillingSubscriptions
     * @param userId userId
     * @param includeInactive includeInactive
     */
    listBillingSubscriptionsUsingGET(userId: number, includeInactive?: boolean, extraHttpRequestParams?: any): ng.IHttpPromise<models.ListBillingSubscriptionsResponse>;
    /**
     *
     * @summary listSubscriptionInvoices
     * @param id id
     * @param userId userId
     * @param limit limit
     */
    listSubscriptionInvoicesUsingGET(id: string, userId: number, limit?: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.ListSubscriptionInvoicesResponse>;
}
