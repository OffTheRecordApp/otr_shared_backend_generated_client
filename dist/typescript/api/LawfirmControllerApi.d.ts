/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as models from '../model/models';
export declare class LawfirmControllerApi {
    protected $http: ng.IHttpService;
    protected $httpParamSerializer?: (d: any) => any;
    protected basePath: string;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, $httpParamSerializer?: (d: any) => any, basePath?: string);
    /**
     *
     * @summary addLawfirmAddress
     * @param lawfirmId lawfirmId
     * @param request request
     */
    addLawfirmAddressUsingPOST(lawfirmId: number, request: models.UpsertAddressRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary createLawfirm
     * @param request request
     */
    createLawfirmUsingPOST(request: models.CreateNewLawfirmRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmResponse>;
    /**
     *
     * @summary deleteLawfirmConnectedAccount
     * @param lawfirmId lawfirmId
     * @param stripeAccountId stripeAccountId
     */
    deleteLawfirmConnectedAccountUsingDELETE(lawfirmId: number, stripeAccountId: string, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary deleteLawfirmCoverPhoto
     * @param lawfirmId lawfirmId
     */
    deleteLawfirmCoverPhotoUsingDELETE(lawfirmId: string, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary getInboxMessages
     * @param lawfirmId lawfirmId
     * @param caseStatuses caseStatuses
     * @param courtDateFilter courtDateFilter
     * @param filter filter
     * @param latestMessageBy latestMessageBy
     * @param length length
     * @param page page
     * @param query query
     * @param statusCategories statusCategories
     */
    getInboxMessagesUsingGET(lawfirmId: number, caseStatuses?: 'AMENDED_DOWN_WITHIN_CLASS' | 'AMENDED_FULL_FINE' | 'AMENDED_INCREASED_FINE' | 'AMENDED_NO_FINE' | 'AMENDED_REDUCED_FINE' | 'AMENDED_TO_INFRACTION' | 'AMENDED_TO_NMV' | 'CANCELLED_ATTORNEY_AT_FAULT' | 'CANCELLED_BY_LAWFIRM' | 'CANCELLED_BY_USER' | 'CANCELLED_DUPLICATE' | 'CANCELLED_NMV' | 'CANCELLED_NON_PAYMENT' | 'CANCELLED_NO_LAWFIRM' | 'CANCELLED_OVERDUE' | 'CANCELLED_TOO_SHORT_NOTICE' | 'CASE_IN_PROGRESS' | 'CLIENT_CONFIRMED' | 'CLIENT_CONFIRMED_UNPAID' | 'CLIENT_FIRED_LAWFIRM' | 'CLIENT_FORCED_LOSS' | 'CLIENT_PAID_FINE' | 'CLIENT_UNRESPONSIVE' | 'DEFERRED' | 'DISMISSED' | 'DIVERSION' | 'FEES_DISPUTED' | 'FINE_REDUCTION_ONLY' | 'LAWFIRM_WITHDRAWN' | 'LOST' | 'NO_LAWFIRM_AVAILABLE' | 'POINT_REDUCTION' | 'REFUSED_BY_LAWFIRM' | 'RESOLVED_NON_PAYMENT' | 'STALE' | 'TRAFFIC_SCHOOL' | 'UNCONFIRMED', courtDateFilter?: 'NO_COURT_DATE' | 'PAST_DUE' | 'PAST_DUE_AND_NO_COURT_DATE' | 'UPCOMING', filter?: 'ARCHIVE' | 'DEFAULT' | 'FLAG_ONLY' | 'STAR_ONLY', latestMessageBy?: 'ADMIN' | 'CLIENT' | 'LAWYER', length?: number, page?: number, query?: string, statusCategories?: 'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED', extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmInboxMessagesResponse>;
    /**
     *
     * @summary getLawfirmAddresses
     * @param lawfirmId lawfirmId
     */
    getLawfirmAddressesUsingGET(lawfirmId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmAddressesResponse>;
    /**
     *
     * @summary getLawfirmByPrimaryEmail
     * @param primaryLawfirmEmail primaryLawfirmEmail
     */
    getLawfirmByPrimaryEmailUsingGET(primaryLawfirmEmail: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmResponse>;
    /**
     *
     * @summary getLawfirmByUrl
     * @param seoUrl seoUrl
     */
    getLawfirmByUrlUsingGET(seoUrl: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmResponse>;
    /**
     *
     * @summary getLawfirmCaseStats
     * @param lawfirmId lawfirmId
     */
    getLawfirmCaseStatsUsingGET(lawfirmId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmCaseStatsResponse>;
    /**
     *
     * @summary getLawfirmJobTitles
     */
    getLawfirmJobTitlesUsingGET(extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmJobTitleResponse>;
    /**
     *
     * @summary getLawfirmLawyers
     * @param lawfirmId lawfirmId
     * @param settingName settingName
     */
    getLawfirmLawyersUsingGET(lawfirmId: number, settingName?: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmLawyersResponse>;
    /**
     *
     * @summary getLawfirmStatuses
     */
    getLawfirmStatusesUsingGET(extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary getLawfirmSupportTickets
     * @param lawfirmId lawfirmId
     * @param limit limit
     */
    getLawfirmSupportTicketsUsingGET(lawfirmId: number, limit?: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.IntercomSearchTicketsResponse>;
    /**
     *
     * @summary getLawfirm
     * @param lawfirmIdString lawfirmIdString
     */
    getLawfirmUsingGET(lawfirmIdString: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmResponse>;
    /**
     *
     * @summary getLawfirms
     * @param acceptsAccidentTickets acceptsAccidentTickets
     * @param acceptsPastDueTickets acceptsPastDueTickets
     * @param includeTestLawfirms includeTestLawfirms
     * @param includeVacationMode includeVacationMode
     * @param q q
     * @param states states
     * @param statusCategories statusCategories
     * @param statuses statuses
     */
    getLawfirmsUsingGET(acceptsAccidentTickets?: boolean, acceptsPastDueTickets?: boolean, includeTestLawfirms?: boolean, includeVacationMode?: boolean, q?: string, states?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', statusCategories?: 'ACTIVE' | 'INACTIVE' | 'LEAD' | 'NOT_INTERESTED' | 'REJECTED' | 'TERMINATED', statuses?: 'ACCOUNT_CLOSED' | 'ACTIVE' | 'BLACKLISTED' | 'DEMO_COMPLETED' | 'DUPLICATE' | 'FUTURE_LEAD' | 'LEAD' | 'NEW_PARTNER' | 'NOT_A_GOOD_FIT' | 'NOT_INTERESTED_DO_NOT_CONTACT' | 'NOT_INTERESTED_FEE_SPLITTING' | 'NOT_INTERESTED_MARKETING_FEE' | 'NOT_INTERESTED_MONEY_BACK_GUARANTEE' | 'NOT_INTERESTED_PLATFORM_RESISTANCE' | 'PAST_INTEREST' | 'SUPERVISED' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_GENERIC' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS', extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmsResponse>;
    /**
     *
     * @summary getOtrLawfirmNotes
     * @param lawfirmId lawfirmId
     */
    getOtrLawfirmNotesUsingGET(lawfirmId: string, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary getStripeConnectedAccounts
     * @param lawfirmId lawfirmId
     */
    getStripeConnectedAccountsUsingGET(lawfirmId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetStripeConnectedAccountsResponse>;
    /**
     *
     * @summary getSupportedStatesForLawfirm
     * @param lawfirmId lawfirmId
     */
    getSupportedStatesForLawfirmUsingGET(lawfirmId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmSupportedStatesResponse>;
    /**
     *
     * @summary setVacationMode
     * @param lawfirmId lawfirmId
     * @param request request
     */
    setVacationModeUsingPOST(lawfirmId: number, request: models.LawfirmVacationRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetLawfirmResponse>;
    /**
     *
     * @summary updateLawfirmAddress
     * @param addressId addressId
     * @param lawfirmId lawfirmId
     * @param request request
     */
    updateLawfirmAddressUsingPUT(addressId: number, lawfirmId: number, request: models.UpsertAddressRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary updateLawfirm
     * @param lawfirmIdString lawfirmIdString
     * @param request request
     */
    updateLawfirmUsingPUT(lawfirmIdString: string, request: models.UpdateLawfirmRequest, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary updateLawfirmWithPicture
     * @param lawfirmId lawfirmId
     * @param request request
     */
    updateLawfirmWithPictureUsingPUT(lawfirmId: string, request: models.LawfirmPictureRequest, extraHttpRequestParams?: any): ng.IHttpPromise<object>;
    /**
     *
     * @summary updateLawyerRole
     * @param lawfirmId lawfirmId
     * @param userId userId
     * @param request request
     */
    updateLawyerRoleUsingPUT(lawfirmId: number, userId: number, request: models.UpdateLawyerRoleRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary updatePaymentModel
     * @param lawfirmId lawfirmId
     * @param request request
     */
    updatePaymentModelUsingPUT(lawfirmId: number, request: models.UpdateLawfirmPaymentModelRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary uploadLawfirms
     * @param request request
     */
    uploadLawfirmsUsingPOST(request: models.UploadLawfirmsRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.UploadLawfirmsResponse>;
}
