"use strict";
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SingleSignOnControllerApi = void 0;
/* tslint:disable:no-unused-variable member-ordering */
var SingleSignOnControllerApi = /** @class */ (function () {
    function SingleSignOnControllerApi($http, $httpParamSerializer, basePath) {
        this.$http = $http;
        this.$httpParamSerializer = $httpParamSerializer;
        this.basePath = 'http://otr-backend-service-us-devo.offtherecord.com';
        this.defaultHeaders = {};
        if (basePath !== undefined) {
            this.basePath = basePath;
        }
    }
    /**
     *
     * @summary loginWithSSO
     * @param brandId brandId
     * @param email email
     * @param isAdmin isAdmin
     * @param password password
     */
    SingleSignOnControllerApi.prototype.loginWithSSOUsingPOST = function (brandId, email, isAdmin, password, extraHttpRequestParams) {
        var localVarPath = this.basePath + '/api/v1/authentication/sso/login';
        var queryParameters = {};
        var headerParams = Object.assign({}, this.defaultHeaders);
        // verify required parameter 'brandId' is not null or undefined
        if (brandId === null || brandId === undefined) {
            throw new Error('Required parameter brandId was null or undefined when calling loginWithSSOUsingPOST.');
        }
        // verify required parameter 'email' is not null or undefined
        if (email === null || email === undefined) {
            throw new Error('Required parameter email was null or undefined when calling loginWithSSOUsingPOST.');
        }
        // verify required parameter 'isAdmin' is not null or undefined
        if (isAdmin === null || isAdmin === undefined) {
            throw new Error('Required parameter isAdmin was null or undefined when calling loginWithSSOUsingPOST.');
        }
        // verify required parameter 'password' is not null or undefined
        if (password === null || password === undefined) {
            throw new Error('Required parameter password was null or undefined when calling loginWithSSOUsingPOST.');
        }
        if (brandId !== undefined) {
            queryParameters['brandId'] = brandId;
        }
        if (email !== undefined) {
            queryParameters['email'] = email;
        }
        if (isAdmin !== undefined) {
            queryParameters['isAdmin'] = isAdmin;
        }
        if (password !== undefined) {
            queryParameters['password'] = password;
        }
        var httpRequestParams = {
            method: 'POST',
            url: localVarPath,
            params: queryParameters,
            headers: headerParams
        };
        if (extraHttpRequestParams) {
            httpRequestParams = Object.assign(httpRequestParams, extraHttpRequestParams);
        }
        return this.$http(httpRequestParams);
    };
    SingleSignOnControllerApi.$inject = ['$http', '$httpParamSerializer', 'basePath'];
    return SingleSignOnControllerApi;
}());
exports.SingleSignOnControllerApi = SingleSignOnControllerApi;
