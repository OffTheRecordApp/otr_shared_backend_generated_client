/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="angular" />
import * as models from '../model/models';
export declare class TrafficViolationControllerApi {
    protected $http: ng.IHttpService;
    protected $httpParamSerializer?: (d: any) => any;
    protected basePath: string;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, $httpParamSerializer?: (d: any) => any, basePath?: string);
    /**
     *
     * @summary addViolation
     * @param isLive isLive
     * @param request request
     */
    addViolationUsingPOST(isLive: boolean, request: models.AddViolationRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.AddViolationResponse>;
    /**
     *
     * @summary deleteViolation
     * @param violationId violationId
     */
    deleteViolationUsingDELETE(violationId: number, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary getRegionsWithViolations
     */
    getRegionsWithViolationsUsingGET(extraHttpRequestParams?: any): ng.IHttpPromise<models.GetRegionsWithViolationsResponse>;
    /**
     *
     * @summary getTrafficViolationTypes
     * @param audience audience
     * @param flavor flavor
     * @param includePenalties includePenalties
     * @param state state
     */
    getTrafficViolationTypesUsingGET(audience?: string, flavor?: string, includePenalties?: boolean, state?: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetTrafficViolationTypesResponse>;
    /**
     *
     * @summary listViolationClassifications
     * @param regionCode regionCode
     */
    listViolationClassificationsUsingGET(regionCode: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.ListViolationClassificationResponse>;
    /**
     *
     * @summary updateViolation
     * @param violationId violationId
     * @param request request
     */
    updateViolationUsingPUT(violationId: number, request: models.UpdateViolationRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
}
