"use strict";
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlogWebhookControllerApi = void 0;
/* tslint:disable:no-unused-variable member-ordering */
var BlogWebhookControllerApi = /** @class */ (function () {
    function BlogWebhookControllerApi($http, $httpParamSerializer, basePath) {
        this.$http = $http;
        this.$httpParamSerializer = $httpParamSerializer;
        this.basePath = 'http://otr-backend-service-us-devo.offtherecord.com';
        this.defaultHeaders = {};
        if (basePath !== undefined) {
            this.basePath = basePath;
        }
    }
    /**
     *
     * @summary handleEvent
     * @param event event
     */
    BlogWebhookControllerApi.prototype.handleEventUsingPOST = function (event, extraHttpRequestParams) {
        var localVarPath = this.basePath + '/api/v1/webhooks/prismic';
        var queryParameters = {};
        var headerParams = Object.assign({}, this.defaultHeaders);
        // verify required parameter 'event' is not null or undefined
        if (event === null || event === undefined) {
            throw new Error('Required parameter event was null or undefined when calling handleEventUsingPOST.');
        }
        var httpRequestParams = {
            method: 'POST',
            url: localVarPath,
            data: event,
            params: queryParameters,
            headers: headerParams
        };
        if (extraHttpRequestParams) {
            httpRequestParams = Object.assign(httpRequestParams, extraHttpRequestParams);
        }
        return this.$http(httpRequestParams);
    };
    BlogWebhookControllerApi.$inject = ['$http', '$httpParamSerializer', 'basePath'];
    return BlogWebhookControllerApi;
}());
exports.BlogWebhookControllerApi = BlogWebhookControllerApi;
