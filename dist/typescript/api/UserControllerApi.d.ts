/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="angular" />
import * as models from '../model/models';
export declare class UserControllerApi {
    protected $http: ng.IHttpService;
    protected $httpParamSerializer?: (d: any) => any;
    protected basePath: string;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, $httpParamSerializer?: (d: any) => any, basePath?: string);
    /**
     *
     * @summary findChargeDisputesByUserId
     * @param userId userId
     */
    findChargeDisputesByUserIdUsingGET(userId: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.FindChargeDisputesResponse>;
    /**
     *
     * @summary getCurrentUserInfo
     * @param isAdmin isAdmin
     * @param serviceProviderId serviceProviderId
     */
    getCurrentUserInfoUsingGET(isAdmin?: boolean, serviceProviderId?: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetCurrentUserResponse>;
    /**
     *
     * @summary getOverduePayments
     * @param userId userId
     */
    getOverduePaymentsUsingGET(userId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetOverduePaymentsResponse>;
    /**
     *
     * @summary getSupportTicketsForUser
     * @param email email
     * @param limit limit
     */
    getSupportTicketsForUserUsingGET(email: string, limit?: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetSupportTicketsResponse>;
    /**
     *
     * @summary getUserDetails
     * @param userIdString userIdString
     */
    getUserDetailsUsingGET(userIdString: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetUserDetailsResponse>;
    /**
     *
     * @summary getUserStripeAccount
     * @param userId userId
     */
    getUserStripeAccountUsingGET(userId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.GetUserStripeAccountResponse>;
    /**
     *
     * @summary isUserLoggedIn
     */
    isUserLoggedInUsingGET(extraHttpRequestParams?: any): ng.IHttpPromise<models.IsUserLoggedInResponse>;
    /**
     *
     * @summary logoutUser
     * @param userId userId
     */
    logoutUserUsingDELETE(userId: number, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary updateUserProfile
     * @param userId userId
     * @param request request
     */
    updateUserProfileUsingPUT(userId: number, request: models.UpdateUserProfileRequest, extraHttpRequestParams?: any): ng.IHttpPromise<models.UpdateUserDetailsResponse>;
    /**
     *
     * @summary updateUserRoles
     * @param request request
     */
    updateUserRolesUsingPOST(request: models.UpdateUserRolesRequest, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    /**
     *
     * @summary validateUserByEmail
     * @param email email
     */
    validateUserByEmailUsingGET(email: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.ValidateUserEmailResponse>;
}
