/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface AccountLevelFee
 */
export interface AccountLevelFee {
    /**
     *
     * @type {string}
     * @memberof AccountLevelFee
     */
    classification?: AccountLevelFeeClassificationEnum;
    /**
     *
     * @type {number}
     * @memberof AccountLevelFee
     */
    classificationId?: number;
    /**
     *
     * @type {boolean}
     * @memberof AccountLevelFee
     */
    isEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AccountLevelFee
     */
    isPermitted?: boolean;
    /**
     *
     * @type {number}
     * @memberof AccountLevelFee
     */
    lawfirmFee?: number;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFee
     */
    lawyerfriendlyClassName?: string;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFee
     */
    refundEligibility?: AccountLevelFeeRefundEligibilityEnum;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFee
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFee
     */
    violationCodes?: string;
    /**
     *
     * @type {number}
     * @memberof AccountLevelFee
     */
    violationId?: number;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFee
     */
    violationName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AccountLevelFeeClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AccountLevelFeeRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface AccountLevelFeeRequest
 */
export interface AccountLevelFeeRequest {
    /**
     *
     * @type {Array<AccountLevelFeeToSave>}
     * @memberof AccountLevelFeeRequest
     */
    fees?: Array<AccountLevelFeeToSave>;
}
/**
 *
 * @export
 * @interface AccountLevelFeeResponse
 */
export interface AccountLevelFeeResponse {
    /**
     *
     * @type {Array<DefaultClassModel>}
     * @memberof AccountLevelFeeResponse
     */
    defaultClassByRegions?: Array<DefaultClassModel>;
    /**
     *
     * @type {Array<AccountLevelFee>}
     * @memberof AccountLevelFeeResponse
     */
    fees?: Array<AccountLevelFee>;
}
/**
 *
 * @export
 * @interface AccountLevelFeeToSave
 */
export interface AccountLevelFeeToSave {
    /**
     *
     * @type {string}
     * @memberof AccountLevelFeeToSave
     */
    classification?: AccountLevelFeeToSaveClassificationEnum;
    /**
     *
     * @type {boolean}
     * @memberof AccountLevelFeeToSave
     */
    isPermitted?: boolean;
    /**
     *
     * @type {number}
     * @memberof AccountLevelFeeToSave
     */
    lawfirmFee?: number;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFeeToSave
     */
    refundEligibility?: AccountLevelFeeToSaveRefundEligibilityEnum;
    /**
     *
     * @type {string}
     * @memberof AccountLevelFeeToSave
     */
    regionCode?: string;
    /**
     *
     * @type {number}
     * @memberof AccountLevelFeeToSave
     */
    violationId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AccountLevelFeeToSaveClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AccountLevelFeeToSaveRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface ActivityFeedModel
 */
export interface ActivityFeedModel {
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    activityDate?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    activityDescription?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    activityDescriptionInHtml?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    activityType?: ActivityFeedModelActivityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    ownerName?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    privacyMode?: ActivityFeedModelPrivacyModeEnum;
    /**
     *
     * @type {string}
     * @memberof ActivityFeedModel
     */
    profilePicUrl?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ActivityFeedModelActivityTypeEnum {
    PURCHASE = "PURCHASE",
    REFERRAL = "REFERRAL",
    REFUND = "REFUND",
    RESOLUTION = "RESOLUTION",
    TICKETREVIEW = "TICKET_REVIEW"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ActivityFeedModelPrivacyModeEnum {
    FRIENDS = "FRIENDS",
    PRIVATE = "PRIVATE",
    PUBLIC = "PUBLIC",
    SEMIPUBLIC = "SEMI_PUBLIC"
}
/**
 *
 * @export
 * @interface AddACHToStripeAccountRequest
 */
export interface AddACHToStripeAccountRequest {
    /**
     *
     * @type {boolean}
     * @memberof AddACHToStripeAccountRequest
     */
    makeDefault?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddACHToStripeAccountRequest
     */
    plaidBankAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof AddACHToStripeAccountRequest
     */
    plaidPublicToken?: string;
}
/**
 *
 * @export
 * @interface AddActionToCaseRequest
 */
export interface AddActionToCaseRequest {
    /**
     *
     * @type {CaseActionDomainReq}
     * @memberof AddActionToCaseRequest
     */
    caseAction?: CaseActionDomainReq;
}
/**
 *
 * @export
 * @interface AddActionToCaseResponse
 */
export interface AddActionToCaseResponse {
    /**
     *
     * @type {CaseDomain}
     * @memberof AddActionToCaseResponse
     */
    theCase?: CaseDomain;
}
/**
 *
 * @export
 * @interface AddCardToStripeAccountRequest
 */
export interface AddCardToStripeAccountRequest {
    /**
     *
     * @type {string}
     * @memberof AddCardToStripeAccountRequest
     */
    caseId?: string;
    /**
     *
     * @type {boolean}
     * @memberof AddCardToStripeAccountRequest
     */
    makeDefault?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddCardToStripeAccountRequest
     */
    sourceToken?: string;
    /**
     *
     * @type {string}
     * @memberof AddCardToStripeAccountRequest
     */
    userId?: string;
}
/**
 *
 * @export
 * @interface AddCardToStripeAccountResponse
 */
export interface AddCardToStripeAccountResponse {
    /**
     *
     * @type {string}
     * @memberof AddCardToStripeAccountResponse
     */
    cardId?: string;
    /**
     *
     * @type {boolean}
     * @memberof AddCardToStripeAccountResponse
     */
    _default?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddCardToStripeAccountResponse
     */
    id?: string;
}
/**
 *
 * @export
 * @interface AddCaseMessageResponse
 */
export interface AddCaseMessageResponse {
    /**
     *
     * @type {CaseMessageDomain}
     * @memberof AddCaseMessageResponse
     */
    messageAdded?: CaseMessageDomain;
}
/**
 *
 * @export
 * @interface AddCourtCoverageRequest
 */
export interface AddCourtCoverageRequest {
    /**
     *
     * @type {number}
     * @memberof AddCourtCoverageRequest
     */
    courtId?: number;
    /**
     *
     * @type {number}
     * @memberof AddCourtCoverageRequest
     */
    lawfirmFee?: number;
    /**
     *
     * @type {string}
     * @memberof AddCourtCoverageRequest
     */
    refundEligibility?: AddCourtCoverageRequestRefundEligibilityEnum;
    /**
     *
     * @type {number}
     * @memberof AddCourtCoverageRequest
     */
    violationId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddCourtCoverageRequestRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface AddCourtRequest
 */
export interface AddCourtRequest {
    /**
     *
     * @type {AddInnerCourtAddress}
     * @memberof AddCourtRequest
     */
    address?: AddInnerCourtAddress;
    /**
     *
     * @type {AddInnerCourt}
     * @memberof AddCourtRequest
     */
    court?: AddInnerCourt;
    /**
     *
     * @type {boolean}
     * @memberof AddCourtRequest
     */
    forceAdd?: boolean;
}
/**
 *
 * @export
 * @interface AddCustomerLeadRequest
 */
export interface AddCustomerLeadRequest {
    /**
     *
     * @type {CustomerLead}
     * @memberof AddCustomerLeadRequest
     */
    lead?: CustomerLead;
}
/**
 *
 * @export
 * @interface AddExtraAccountRequest
 */
export interface AddExtraAccountRequest {
    /**
     *
     * @type {boolean}
     * @memberof AddExtraAccountRequest
     */
    isPrimaryAccount?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddExtraAccountRequest
     */
    newEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof AddExtraAccountRequest
     */
    password?: string;
}
/**
 *
 * @export
 * @interface AddInnerCourt
 */
export interface AddInnerCourt {
    /**
     *
     * @type {CountyDomain}
     * @memberof AddInnerCourt
     */
    countyObj?: CountyDomain;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourt
     */
    courtCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourt
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourt
     */
    courtNameAdditional?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourt
     */
    courtType?: AddInnerCourtCourtTypeEnum;
    /**
     *
     * @type {number}
     * @memberof AddInnerCourt
     */
    otrTargetFee?: number;
    /**
     *
     * @type {number}
     * @memberof AddInnerCourt
     */
    unserviceableRequests?: number;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourt
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddInnerCourtCourtTypeEnum {
    CIRCUIT = "CIRCUIT",
    COUNTYCLERK = "COUNTY_CLERK",
    DISTRICT = "DISTRICT",
    JUVENILE = "JUVENILE",
    MUNICIPAL = "MUNICIPAL",
    PROBATION = "PROBATION",
    SUPERIOR = "SUPERIOR",
    VIOLATIONSBUREAU = "VIOLATIONS_BUREAU"
}
/**
 *
 * @export
 * @interface AddInnerCourtAddress
 */
export interface AddInnerCourtAddress {
    /**
     *
     * @type {string}
     * @memberof AddInnerCourtAddress
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourtAddress
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourtAddress
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourtAddress
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourtAddress
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof AddInnerCourtAddress
     */
    postalCode?: string;
    /**
     *
     * @type {CountryRegion}
     * @memberof AddInnerCourtAddress
     */
    region?: CountryRegion;
}
/**
 *
 * @export
 * @interface AddNewCaseMessageRequest
 */
export interface AddNewCaseMessageRequest {
    /**
     *
     * @type {MessageInputModel}
     * @memberof AddNewCaseMessageRequest
     */
    messageDomain?: MessageInputModel;
}
/**
 *
 * @export
 * @interface AddNoteToPhoneLeadRequest
 */
export interface AddNoteToPhoneLeadRequest {
    /**
     *
     * @type {string}
     * @memberof AddNoteToPhoneLeadRequest
     */
    entityType?: AddNoteToPhoneLeadRequestEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AddNoteToPhoneLeadRequest
     */
    note?: string;
    /**
     *
     * @type {string}
     * @memberof AddNoteToPhoneLeadRequest
     */
    referenceId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddNoteToPhoneLeadRequestEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
 *
 * @export
 * @interface AddPenaltyRequest
 */
export interface AddPenaltyRequest {
    /**
     *
     * @type {Array<PenaltyRequest>}
     * @memberof AddPenaltyRequest
     */
    penaltiesToAdd?: Array<PenaltyRequest>;
}
/**
 *
 * @export
 * @interface AddRedirectUrlRequest
 */
export interface AddRedirectUrlRequest {
    /**
     *
     * @type {string}
     * @memberof AddRedirectUrlRequest
     */
    landingPageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof AddRedirectUrlRequest
     */
    pageType?: AddRedirectUrlRequestPageTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AddRedirectUrlRequest
     */
    redirectType?: AddRedirectUrlRequestRedirectTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AddRedirectUrlRequest
     */
    redirectUrl?: string;
    /**
     *
     * @type {string}
     * @memberof AddRedirectUrlRequest
     */
    startDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddRedirectUrlRequestPageTypeEnum {
    DEBUG = "DEBUG",
    SEO = "SEO",
    VANITY = "VANITY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddRedirectUrlRequestRedirectTypeEnum {
    PERMANENT = "PERMANENT",
    TEMPORARY = "TEMPORARY"
}
/**
 *
 * @export
 * @interface AddReviewRequest
 */
export interface AddReviewRequest {
    /**
     *
     * @type {string}
     * @memberof AddReviewRequest
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof AddReviewRequest
     */
    copy?: string;
    /**
     *
     * @type {boolean}
     * @memberof AddReviewRequest
     */
    isRecommended?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddReviewRequest
     */
    privacyMode?: AddReviewRequestPrivacyModeEnum;
    /**
     *
     * @type {ReviewRatingModel}
     * @memberof AddReviewRequest
     */
    ratingModel?: ReviewRatingModel;
    /**
     *
     * @type {string}
     * @memberof AddReviewRequest
     */
    source?: AddReviewRequestSourceEnum;
    /**
     *
     * @type {number}
     * @memberof AddReviewRequest
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddReviewRequestPrivacyModeEnum {
    FRIENDS = "FRIENDS",
    PRIVATE = "PRIVATE",
    PUBLIC = "PUBLIC",
    SEMIPUBLIC = "SEMI_PUBLIC"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddReviewRequestSourceEnum {
    ANDROID = "ANDROID",
    APPLE = "APPLE",
    FACEBOOK = "FACEBOOK",
    GOOGLEBUSINESS = "GOOGLE_BUSINESS",
    OTR = "OTR",
    REVIEWSIO = "REVIEWS_IO"
}
/**
 *
 * @export
 * @interface AddViolationRequest
 */
export interface AddViolationRequest {
    /**
     *
     * @type {string}
     * @memberof AddViolationRequest
     */
    stateAbbreviation?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationRequest
     */
    userFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationRequest
     */
    userFriendlyShortForm?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationRequest
     */
    violationClassification?: AddViolationRequestViolationClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof AddViolationRequest
     */
    violationCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationRequest
     */
    violationDescription?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddViolationRequestViolationClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface AddViolationResponse
 */
export interface AddViolationResponse {
    /**
     *
     * @type {number}
     * @memberof AddViolationResponse
     */
    otrViolationId?: number;
    /**
     *
     * @type {string}
     * @memberof AddViolationResponse
     */
    stateAbbreviation?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationResponse
     */
    userFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationResponse
     */
    userFriendlyShortForm?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationResponse
     */
    violationClassification?: AddViolationResponseViolationClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof AddViolationResponse
     */
    violationCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddViolationResponse
     */
    violationDescription?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddViolationResponseViolationClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface AddViolationsToCitationRequest
 */
export interface AddViolationsToCitationRequest {
    /**
     *
     * @type {Array<number>}
     * @memberof AddViolationsToCitationRequest
     */
    violationTypes?: Array<number>;
}
/**
 *
 * @export
 * @interface AddressDomain
 */
export interface AddressDomain {
    /**
     *
     * @type {number}
     * @memberof AddressDomain
     */
    addressId?: number;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    addressedTo?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    entityType?: AddressDomainEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    fullAddress?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    postalCode?: string;
    /**
     *
     * @type {number}
     * @memberof AddressDomain
     */
    referenceId?: number;
    /**
     *
     * @type {CountryRegion}
     * @memberof AddressDomain
     */
    region?: CountryRegion;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    state?: AddressDomainStateEnum;
    /**
     *
     * @type {string}
     * @memberof AddressDomain
     */
    timeZoneName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddressDomainEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddressDomainStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface AddressDomainReq
 */
export interface AddressDomainReq {
    /**
     *
     * @type {number}
     * @memberof AddressDomainReq
     */
    addressId?: number;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    addressedTo?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    entityType?: AddressDomainReqEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    postalCode?: string;
    /**
     *
     * @type {number}
     * @memberof AddressDomainReq
     */
    referenceId?: number;
    /**
     *
     * @type {CountryRegion}
     * @memberof AddressDomainReq
     */
    region?: CountryRegion;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    state?: AddressDomainReqStateEnum;
    /**
     *
     * @type {string}
     * @memberof AddressDomainReq
     */
    timeZoneName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddressDomainReqEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddressDomainReqStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface AddressDomainRes
 */
export interface AddressDomainRes {
    /**
     *
     * @type {number}
     * @memberof AddressDomainRes
     */
    addressId?: number;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    addressedTo?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    entityType?: AddressDomainResEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    fullAddress?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    postalCode?: string;
    /**
     *
     * @type {number}
     * @memberof AddressDomainRes
     */
    referenceId?: number;
    /**
     *
     * @type {CountryRegion}
     * @memberof AddressDomainRes
     */
    region?: CountryRegion;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    state?: AddressDomainResStateEnum;
    /**
     *
     * @type {string}
     * @memberof AddressDomainRes
     */
    timeZoneName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddressDomainResEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AddressDomainResStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface AggregateBySource
 */
export interface AggregateBySource {
    /**
     *
     * @type {number}
     * @memberof AggregateBySource
     */
    overallRating?: number;
    /**
     *
     * @type {string}
     * @memberof AggregateBySource
     */
    reviewSource?: AggregateBySourceReviewSourceEnum;
    /**
     *
     * @type {number}
     * @memberof AggregateBySource
     */
    totalRatingCount?: number;
    /**
     *
     * @type {number}
     * @memberof AggregateBySource
     */
    totalReviewCount?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AggregateBySourceReviewSourceEnum {
    ANDROID = "ANDROID",
    APPLE = "APPLE",
    FACEBOOK = "FACEBOOK",
    GOOGLEBUSINESS = "GOOGLE_BUSINESS",
    OTR = "OTR",
    REVIEWSIO = "REVIEWS_IO"
}
/**
 *
 * @export
 * @interface AggregateRatingMetrics
 */
export interface AggregateRatingMetrics {
    /**
     *
     * @type {Array<AggregateBySource>}
     * @memberof AggregateRatingMetrics
     */
    aggregatesBySource?: Array<AggregateBySource>;
    /**
     *
     * @type {number}
     * @memberof AggregateRatingMetrics
     */
    overallRating?: number;
    /**
     *
     * @type {number}
     * @memberof AggregateRatingMetrics
     */
    totalRatingCount?: number;
    /**
     *
     * @type {number}
     * @memberof AggregateRatingMetrics
     */
    totalReviewCount?: number;
}
/**
 *
 * @export
 * @interface AggregateReferralCredit
 */
export interface AggregateReferralCredit {
    /**
     *
     * @type {number}
     * @memberof AggregateReferralCredit
     */
    availableCreditValue?: number;
    /**
     *
     * @type {number}
     * @memberof AggregateReferralCredit
     */
    earnedCreditValue?: number;
    /**
     *
     * @type {number}
     * @memberof AggregateReferralCredit
     */
    redeemedCreditValue?: number;
}
/**
 *
 * @export
 * @interface Alert
 */
export interface Alert {
    /**
     *
     * @type {string}
     * @memberof Alert
     */
    actionType?: AlertActionTypeEnum;
    /**
     *
     * @type {string}
     * @memberof Alert
     */
    alertId?: string;
    /**
     *
     * @type {string}
     * @memberof Alert
     */
    alertType?: AlertAlertTypeEnum;
    /**
     *
     * @type {string}
     * @memberof Alert
     */
    bannerMessage?: string;
    /**
     *
     * @type {string}
     * @memberof Alert
     */
    clickThruUrl?: string;
    /**
     *
     * @type {number}
     * @memberof Alert
     */
    hexColor?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AlertActionTypeEnum {
    ANNOUNCEMENT = "ANNOUNCEMENT",
    ENGAGEMENTLETTER = "ENGAGEMENT_LETTER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AlertAlertTypeEnum {
    ERROR = "ERROR",
    INFO = "INFO",
    SUCCESS = "SUCCESS",
    WARNING = "WARNING"
}
/**
 *
 * @export
 * @interface AlertNotificationResponse
 */
export interface AlertNotificationResponse {
    /**
     *
     * @type {Array<Alert>}
     * @memberof AlertNotificationResponse
     */
    alerts?: Array<Alert>;
    /**
     *
     * @type {Array<CaseAlert>}
     * @memberof AlertNotificationResponse
     */
    caseAlerts?: Array<CaseAlert>;
}
/**
 *
 * @export
 * @interface AppEventCreateRequest
 */
export interface AppEventCreateRequest {
    /**
     *
     * @type {string}
     * @memberof AppEventCreateRequest
     */
    appEventName?: AppEventCreateRequestAppEventNameEnum;
    /**
     *
     * @type {string}
     * @memberof AppEventCreateRequest
     */
    fingerPrintId?: string;
    /**
     *
     * @type {string}
     * @memberof AppEventCreateRequest
     */
    overrideEventDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AppEventCreateRequestAppEventNameEnum {
    FIRSTOPEN = "FIRST_OPEN",
    INSTALL = "INSTALL",
    PREINSTALLENGAGEMENT = "PRE_INSTALL_ENGAGEMENT"
}
/**
 *
 * @export
 * @interface AppearanceAttorneyDomain
 */
export interface AppearanceAttorneyDomain {
    /**
     *
     * @type {string}
     * @memberof AppearanceAttorneyDomain
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof AppearanceAttorneyDomain
     */
    lastName?: string;
    /**
     *
     * @type {number}
     * @memberof AppearanceAttorneyDomain
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {number}
     * @memberof AppearanceAttorneyDomain
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface AppleLoginRequest
 */
export interface AppleLoginRequest {
    /**
     *
     * @type {string}
     * @memberof AppleLoginRequest
     */
    authCode?: string;
    /**
     *
     * @type {string}
     * @memberof AppleLoginRequest
     */
    familyName?: string;
    /**
     *
     * @type {string}
     * @memberof AppleLoginRequest
     */
    fingerPrintId?: string;
    /**
     *
     * @type {string}
     * @memberof AppleLoginRequest
     */
    givenName?: string;
    /**
     *
     * @type {string}
     * @memberof AppleLoginRequest
     */
    identityToken?: string;
}
/**
 *
 * @export
 * @interface AuthorModel
 */
export interface AuthorModel {
    /**
     *
     * @type {string}
     * @memberof AuthorModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof AuthorModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof AuthorModel
     */
    profilePicture?: string;
    /**
     *
     * @type {number}
     * @memberof AuthorModel
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof AuthorModel
     */
    userRole?: AuthorModelUserRoleEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AuthorModelUserRoleEnum {
    ADMIN = "ADMIN",
    DEFENDANT = "DEFENDANT",
    LAWYER = "LAWYER",
    PARTNER = "PARTNER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface AuthorizeChargeForCasePaymentRequest
 */
export interface AuthorizeChargeForCasePaymentRequest {
    /**
     *
     * @type {boolean}
     * @memberof AuthorizeChargeForCasePaymentRequest
     */
    ignoreCaseStatus?: boolean;
    /**
     *
     * @type {string}
     * @memberof AuthorizeChargeForCasePaymentRequest
     */
    paymentMethodId?: string;
}
/**
 *
 * @export
 * @interface AuthorizeChargeForCasePaymentResponse
 */
export interface AuthorizeChargeForCasePaymentResponse {
    /**
     *
     * @type {Array<CaseChargeResponsePojo>}
     * @memberof AuthorizeChargeForCasePaymentResponse
     */
    charges?: Array<CaseChargeResponsePojo>;
}
/**
 *
 * @export
 * @interface AvailablePaymentPlan
 */
export interface AvailablePaymentPlan {
    /**
     *
     * @type {string}
     * @memberof AvailablePaymentPlan
     */
    paymentPlanDisplayName?: string;
    /**
     *
     * @type {number}
     * @memberof AvailablePaymentPlan
     */
    paymentPlanId?: number;
    /**
     *
     * @type {string}
     * @memberof AvailablePaymentPlan
     */
    paymentPlanType?: AvailablePaymentPlanPaymentPlanTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AvailablePaymentPlanPaymentPlanTypeEnum {
    ALLUPFRONT = "ALL_UPFRONT",
    THREEPAYMENTSHALFFIRST = "THREE_PAYMENTS_HALF_FIRST",
    TWOPAYMENTSMONTHLY = "TWO_PAYMENTS_MONTHLY"
}
/**
 *
 * @export
 * @interface AvailableRegion
 */
export interface AvailableRegion {
    /**
     *
     * @type {string}
     * @memberof AvailableRegion
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof AvailableRegion
     */
    regionName?: string;
}
/**
 *
 * @export
 * @interface AwsCredentialsRequest
 */
export interface AwsCredentialsRequest {
    /**
     *
     * @type {string}
     * @memberof AwsCredentialsRequest
     */
    keyName?: AwsCredentialsRequestKeyNameEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AwsCredentialsRequestKeyNameEnum {
    S3CITATIONIMAGESRO = "S3_CITATION_IMAGES_RO"
}
/**
 *
 * @export
 * @interface BackfillLawfirmTransactionRecordsRequest
 */
export interface BackfillLawfirmTransactionRecordsRequest {
    /**
     *
     * @type {string}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    caseId?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    caseIds?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    deleteExistingRecords?: boolean;
    /**
     *
     * @type {number}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    lawfirmId?: number;
    /**
     *
     * @type {number}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    maxCases?: number;
}
/**
 *
 * @export
 * @interface BackfillLawfirmTransactionRecordsResponse
 */
export interface BackfillLawfirmTransactionRecordsResponse {
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof BackfillLawfirmTransactionRecordsResponse
     */
    errors?: {
        [key: string]: string;
    };
}
/**
 *
 * @export
 * @interface BillingInvoiceModel
 */
export interface BillingInvoiceModel {
    /**
     *
     * @type {number}
     * @memberof BillingInvoiceModel
     */
    amountDueInCents?: number;
    /**
     *
     * @type {number}
     * @memberof BillingInvoiceModel
     */
    amountPaidInCents?: number;
    /**
     *
     * @type {string}
     * @memberof BillingInvoiceModel
     */
    invoicePdfUrl?: string;
    /**
     *
     * @type {string}
     * @memberof BillingInvoiceModel
     */
    periodEndDate?: string;
    /**
     *
     * @type {string}
     * @memberof BillingInvoiceModel
     */
    periodStartDate?: string;
    /**
     *
     * @type {string}
     * @memberof BillingInvoiceModel
     */
    status?: BillingInvoiceModelStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingInvoiceModelStatusEnum {
    DRAFT = "DRAFT",
    OPEN = "OPEN",
    PAID = "PAID",
    UNCOLLECTIBLE = "UNCOLLECTIBLE",
    VOID = "VOID"
}
/**
 *
 * @export
 * @interface BillingPriceModel
 */
export interface BillingPriceModel {
    /**
     *
     * @type {boolean}
     * @memberof BillingPriceModel
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof BillingPriceModel
     */
    billingScheme?: BillingPriceModelBillingSchemeEnum;
    /**
     *
     * @type {string}
     * @memberof BillingPriceModel
     */
    createdAt?: string;
    /**
     *
     * @type {string}
     * @memberof BillingPriceModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BillingPriceModel
     */
    interval?: BillingPriceModelIntervalEnum;
    /**
     *
     * @type {number}
     * @memberof BillingPriceModel
     */
    intervalCount?: number;
    /**
     *
     * @type {number}
     * @memberof BillingPriceModel
     */
    monthlyUnitAmountInCents?: number;
    /**
     *
     * @type {string}
     * @memberof BillingPriceModel
     */
    priceDescription?: string;
    /**
     *
     * @type {number}
     * @memberof BillingPriceModel
     */
    unitAmountInCents?: number;
    /**
     *
     * @type {number}
     * @memberof BillingPriceModel
     */
    yearlyDiscountInCents?: number;
    /**
     *
     * @type {number}
     * @memberof BillingPriceModel
     */
    yearlyDiscountInPercentage?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingPriceModelBillingSchemeEnum {
    PERUNIT = "PER_UNIT",
    TIERED = "TIERED",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingPriceModelIntervalEnum {
    DAILY = "DAILY",
    MONTHLY = "MONTHLY",
    QUARTERLY = "QUARTERLY",
    WEEKLY = "WEEKLY",
    YEARLY = "YEARLY"
}
/**
 *
 * @export
 * @interface BillingProductModel
 */
export interface BillingProductModel {
    /**
     *
     * @type {boolean}
     * @memberof BillingProductModel
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof BillingProductModel
     */
    caption?: string;
    /**
     *
     * @type {string}
     * @memberof BillingProductModel
     */
    createdAt?: string;
    /**
     *
     * @type {string}
     * @memberof BillingProductModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof BillingProductModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BillingProductModel
     */
    name?: string;
    /**
     *
     * @type {Array<BillingPriceModel>}
     * @memberof BillingProductModel
     */
    priceModels?: Array<BillingPriceModel>;
}
/**
 *
 * @export
 * @interface BillingSubscriptionItemModel
 */
export interface BillingSubscriptionItemModel {
    /**
     *
     * @type {number}
     * @memberof BillingSubscriptionItemModel
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    billingScheme?: BillingSubscriptionItemModelBillingSchemeEnum;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    interval?: BillingSubscriptionItemModelIntervalEnum;
    /**
     *
     * @type {number}
     * @memberof BillingSubscriptionItemModel
     */
    intervalCount?: number;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    priceDescription?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    productId?: string;
    /**
     *
     * @type {number}
     * @memberof BillingSubscriptionItemModel
     */
    quantity?: number;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    tiersMode?: BillingSubscriptionItemModelTiersModeEnum;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionItemModel
     */
    usageType?: BillingSubscriptionItemModelUsageTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingSubscriptionItemModelBillingSchemeEnum {
    PERUNIT = "PER_UNIT",
    TIERED = "TIERED",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingSubscriptionItemModelIntervalEnum {
    DAILY = "DAILY",
    MONTHLY = "MONTHLY",
    QUARTERLY = "QUARTERLY",
    WEEKLY = "WEEKLY",
    YEARLY = "YEARLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingSubscriptionItemModelTiersModeEnum {
    GRADUATED = "GRADUATED",
    VOLUME = "VOLUME"
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingSubscriptionItemModelUsageTypeEnum {
    LICENSED = "LICENSED",
    METERED = "METERED"
}
/**
 *
 * @export
 * @interface BillingSubscriptionModel
 */
export interface BillingSubscriptionModel {
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    cancelAt?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    canceledAt?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    id?: string;
    /**
     *
     * @type {Array<BillingSubscriptionItemModel>}
     * @memberof BillingSubscriptionModel
     */
    items?: Array<BillingSubscriptionItemModel>;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    productDescription?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    productName?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    startAt?: string;
    /**
     *
     * @type {string}
     * @memberof BillingSubscriptionModel
     */
    status?: BillingSubscriptionModelStatusEnum;
    /**
     *
     * @type {BillingUpcomingInvoiceModel}
     * @memberof BillingSubscriptionModel
     */
    upcomingInvoicePreview?: BillingUpcomingInvoiceModel;
}
/**
    * @export
    * @enum {string}
    */
export declare enum BillingSubscriptionModelStatusEnum {
    ACTIVE = "ACTIVE",
    CANCELED = "CANCELED",
    INCOMPLETE = "INCOMPLETE",
    INCOMPLETEEXPIRED = "INCOMPLETE_EXPIRED",
    INTRIALPERIOD = "IN_TRIAL_PERIOD",
    PASTDUE = "PAST_DUE",
    UNKNOWN = "UNKNOWN",
    UNPAID = "UNPAID"
}
/**
 *
 * @export
 * @interface BillingUpcomingInvoiceModel
 */
export interface BillingUpcomingInvoiceModel {
    /**
     *
     * @type {string}
     * @memberof BillingUpcomingInvoiceModel
     */
    nextPaymentAttemptDate?: string;
    /**
     *
     * @type {number}
     * @memberof BillingUpcomingInvoiceModel
     */
    paymentAmountInCents?: number;
    /**
     *
     * @type {string}
     * @memberof BillingUpcomingInvoiceModel
     */
    periodEndDate?: string;
    /**
     *
     * @type {string}
     * @memberof BillingUpcomingInvoiceModel
     */
    periodStartDate?: string;
}
/**
 *
 * @export
 * @interface BlogDocument
 */
export interface BlogDocument {
    /**
     *
     * @type {Array<BlogMetadata>}
     * @memberof BlogDocument
     */
    addition?: Array<BlogMetadata>;
    /**
     *
     * @type {Array<BlogMetadata>}
     * @memberof BlogDocument
     */
    deletion?: Array<BlogMetadata>;
    /**
     *
     * @type {Array<BlogMetadata>}
     * @memberof BlogDocument
     */
    update?: Array<BlogMetadata>;
}
/**
 *
 * @export
 * @interface BlogEvent
 */
export interface BlogEvent {
    /**
     *
     * @type {string}
     * @memberof BlogEvent
     */
    apiUrl?: string;
    /**
     *
     * @type {BlogDocument}
     * @memberof BlogEvent
     */
    release?: BlogDocument;
    /**
     *
     * @type {string}
     * @memberof BlogEvent
     */
    secret?: string;
    /**
     *
     * @type {string}
     * @memberof BlogEvent
     */
    type?: string;
}
/**
 *
 * @export
 * @interface BlogMetadata
 */
export interface BlogMetadata {
    /**
     *
     * @type {string}
     * @memberof BlogMetadata
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BlogMetadata
     */
    label?: string;
    /**
     *
     * @type {string}
     * @memberof BlogMetadata
     */
    ref?: string;
}
/**
 *
 * @export
 * @interface Booking
 */
export interface Booking {
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    bookingDate?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof Booking
     */
    bookingDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    caseStatus?: BookingCaseStatusEnum;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    clientTotalCost?: number;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    numPayments?: number;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    otrPercent?: number;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    otrRevenue?: number;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    state?: BookingStateEnum;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    userFirstName?: string;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    userLastName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum BookingCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum BookingStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface BookingCancelation
 */
export interface BookingCancelation {
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    bookingDate?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof BookingCancelation
     */
    bookingDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    cancelationDate?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof BookingCancelation
     */
    cancelationDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    cancelationReason?: string;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    canceledBy?: string;
    /**
     *
     * @type {number}
     * @memberof BookingCancelation
     */
    canceledByUserId?: number;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    caseStatus?: BookingCancelationCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    city?: string;
    /**
     *
     * @type {number}
     * @memberof BookingCancelation
     */
    clientTotalCost?: number;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    declineReason?: string;
    /**
     *
     * @type {number}
     * @memberof BookingCancelation
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof BookingCancelation
     */
    otrRevenue?: number;
    /**
     *
     * @type {string}
     * @memberof BookingCancelation
     */
    state?: BookingCancelationStateEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum BookingCancelationCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum BookingCancelationStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CallContact
 */
export interface CallContact {
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    agentId?: number;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    agentName?: string;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    callDirection?: CallContactCallDirectionEnum;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    callDurationInSeconds?: number;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    callId?: number;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    callQueueId?: number;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    callQueueName?: string;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    callStartDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    callStatus?: CallContactCallStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    customerName?: string;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    customerNumber?: string;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    integratedResourceType?: CallContactIntegratedResourceTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    integratedResourceValue?: string;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    ivrId?: number;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    ivrName?: string;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    notes?: string;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    parentCallId?: number;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    recordingUrl?: string;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    rootCallId?: number;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    tags?: string;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    teamId?: number;
    /**
     *
     * @type {string}
     * @memberof CallContact
     */
    teamName?: string;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    thirdPartyCallId?: number;
    /**
     *
     * @type {number}
     * @memberof CallContact
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CallContactCallDirectionEnum {
    INCOMING = "INCOMING",
    OUTGOING = "OUTGOING"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CallContactCallStatusEnum {
    BLOCKED = "BLOCKED",
    BUSY = "BUSY",
    COMPLETED = "COMPLETED",
    CONNECTING = "CONNECTING",
    CONNECTIONFAILED = "CONNECTION_FAILED",
    DISCONNECTED = "DISCONNECTED",
    ENQUEUED = "ENQUEUED",
    INPROGRESS = "IN_PROGRESS",
    MISSEDCALL = "MISSED_CALL",
    ONHOLD = "ON_HOLD",
    RECENTLYCOMPLETED = "RECENTLY_COMPLETED",
    RESTRICTED = "RESTRICTED",
    UNKNOWN = "UNKNOWN",
    VOICEMAIL = "VOICEMAIL",
    VOICEMAILRECORDINGINPROGRESS = "VOICEMAIL_RECORDING_IN_PROGRESS"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CallContactIntegratedResourceTypeEnum {
    FRESHDESK = "FRESHDESK",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface CancelBillingSubscriptionResponse
 */
export interface CancelBillingSubscriptionResponse {
    /**
     *
     * @type {boolean}
     * @memberof CancelBillingSubscriptionResponse
     */
    cancelAtPeriodEnd?: boolean;
    /**
     *
     * @type {string}
     * @memberof CancelBillingSubscriptionResponse
     */
    cancelledAt?: string;
    /**
     *
     * @type {string}
     * @memberof CancelBillingSubscriptionResponse
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof CancelBillingSubscriptionResponse
     */
    status?: CancelBillingSubscriptionResponseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CancelBillingSubscriptionResponse
     */
    stripeCustomerId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CancelBillingSubscriptionResponseStatusEnum {
    ACTIVE = "ACTIVE",
    CANCELED = "CANCELED",
    INCOMPLETE = "INCOMPLETE",
    INCOMPLETEEXPIRED = "INCOMPLETE_EXPIRED",
    INTRIALPERIOD = "IN_TRIAL_PERIOD",
    PASTDUE = "PAST_DUE",
    UNKNOWN = "UNKNOWN",
    UNPAID = "UNPAID"
}
/**
 *
 * @export
 * @interface CancelCaseRequest
 */
export interface CancelCaseRequest {
    /**
     *
     * @type {string}
     * @memberof CancelCaseRequest
     */
    cancelationReason?: string;
    /**
     *
     * @type {string}
     * @memberof CancelCaseRequest
     */
    cancelationStatus?: CancelCaseRequestCancelationStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CancelCaseRequest
     */
    caseId?: string;
    /**
     *
     * @type {boolean}
     * @memberof CancelCaseRequest
     */
    shouldIssueRefund?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CancelCaseRequestCancelationStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface CancelationDetails
 */
export interface CancelationDetails {
    /**
     *
     * @type {Timestamp}
     * @memberof CancelationDetails
     */
    cancelationDate?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CancelationDetails
     */
    cancelationReason?: string;
    /**
     *
     * @type {number}
     * @memberof CancelationDetails
     */
    canceledByUserId?: number;
    /**
     *
     * @type {string}
     * @memberof CancelationDetails
     */
    canceledByUserName?: string;
}
/**
 *
 * @export
 * @interface CancelationDetailsReq
 */
export interface CancelationDetailsReq {
    /**
     *
     * @type {TimestampReq}
     * @memberof CancelationDetailsReq
     */
    cancelationDate?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CancelationDetailsReq
     */
    cancelationReason?: string;
    /**
     *
     * @type {number}
     * @memberof CancelationDetailsReq
     */
    canceledByUserId?: number;
    /**
     *
     * @type {string}
     * @memberof CancelationDetailsReq
     */
    canceledByUserName?: string;
}
/**
 *
 * @export
 * @interface CancelationDetailsRes
 */
export interface CancelationDetailsRes {
    /**
     *
     * @type {TimestampRes}
     * @memberof CancelationDetailsRes
     */
    cancelationDate?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CancelationDetailsRes
     */
    cancelationReason?: string;
    /**
     *
     * @type {number}
     * @memberof CancelationDetailsRes
     */
    canceledByUserId?: number;
    /**
     *
     * @type {string}
     * @memberof CancelationDetailsRes
     */
    canceledByUserName?: string;
}
/**
 *
 * @export
 * @interface CaptureChargeFromCasePaymentRequest
 */
export interface CaptureChargeFromCasePaymentRequest {
    /**
     *
     * @type {boolean}
     * @memberof CaptureChargeFromCasePaymentRequest
     */
    ignoreCaseStatus?: boolean;
    /**
     *
     * @type {string}
     * @memberof CaptureChargeFromCasePaymentRequest
     */
    paymentMethodId?: string;
}
/**
 *
 * @export
 * @interface CaseActionDomain
 */
export interface CaseActionDomain {
    /**
     *
     * @type {Timestamp}
     * @memberof CaseActionDomain
     */
    actionDate?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomain
     */
    actionNote?: string;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomain
     */
    actionType?: CaseActionDomainActionTypeEnum;
    /**
     *
     * @type {AuthorModel}
     * @memberof CaseActionDomain
     */
    author?: AuthorModel;
    /**
     *
     * @type {number}
     * @memberof CaseActionDomain
     */
    authorId?: number;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomain
     */
    authorName?: string;
    /**
     *
     * @type {number}
     * @memberof CaseActionDomain
     */
    caseActionId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseActionDomainActionTypeEnum {
    CITATIONDATAEXTRACTED = "CITATION_DATA_EXTRACTED",
    COURTDATEREMOVED = "COURT_DATE_REMOVED",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    DISCOVERYRECEIVED = "DISCOVERY_RECEIVED",
    DISCOVERYREQUESTED = "DISCOVERY_REQUESTED",
    FAILEDPAYMENTATTEMPT = "FAILED_PAYMENT_ATTEMPT",
    NOTICEOFAPPEARANCEFILED = "NOTICE_OF_APPEARANCE_FILED",
    OTHER = "OTHER",
    REVIEWEDBYLAWFIRM = "REVIEWED_BY_LAWFIRM",
    TICKETMAILEDTOCOURT = "TICKET_MAILED_TO_COURT"
}
/**
 *
 * @export
 * @interface CaseActionDomainReq
 */
export interface CaseActionDomainReq {
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseActionDomainReq
     */
    actionDate?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomainReq
     */
    actionNote?: string;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomainReq
     */
    actionType?: CaseActionDomainReqActionTypeEnum;
    /**
     *
     * @type {AuthorModel}
     * @memberof CaseActionDomainReq
     */
    author?: AuthorModel;
    /**
     *
     * @type {number}
     * @memberof CaseActionDomainReq
     */
    authorId?: number;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomainReq
     */
    authorName?: string;
    /**
     *
     * @type {number}
     * @memberof CaseActionDomainReq
     */
    caseActionId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseActionDomainReqActionTypeEnum {
    CITATIONDATAEXTRACTED = "CITATION_DATA_EXTRACTED",
    COURTDATEREMOVED = "COURT_DATE_REMOVED",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    DISCOVERYRECEIVED = "DISCOVERY_RECEIVED",
    DISCOVERYREQUESTED = "DISCOVERY_REQUESTED",
    FAILEDPAYMENTATTEMPT = "FAILED_PAYMENT_ATTEMPT",
    NOTICEOFAPPEARANCEFILED = "NOTICE_OF_APPEARANCE_FILED",
    OTHER = "OTHER",
    REVIEWEDBYLAWFIRM = "REVIEWED_BY_LAWFIRM",
    TICKETMAILEDTOCOURT = "TICKET_MAILED_TO_COURT"
}
/**
 *
 * @export
 * @interface CaseActionDomainRes
 */
export interface CaseActionDomainRes {
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseActionDomainRes
     */
    actionDate?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomainRes
     */
    actionNote?: string;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomainRes
     */
    actionType?: CaseActionDomainResActionTypeEnum;
    /**
     *
     * @type {AuthorModel}
     * @memberof CaseActionDomainRes
     */
    author?: AuthorModel;
    /**
     *
     * @type {number}
     * @memberof CaseActionDomainRes
     */
    authorId?: number;
    /**
     *
     * @type {string}
     * @memberof CaseActionDomainRes
     */
    authorName?: string;
    /**
     *
     * @type {number}
     * @memberof CaseActionDomainRes
     */
    caseActionId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseActionDomainResActionTypeEnum {
    CITATIONDATAEXTRACTED = "CITATION_DATA_EXTRACTED",
    COURTDATEREMOVED = "COURT_DATE_REMOVED",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    DISCOVERYRECEIVED = "DISCOVERY_RECEIVED",
    DISCOVERYREQUESTED = "DISCOVERY_REQUESTED",
    FAILEDPAYMENTATTEMPT = "FAILED_PAYMENT_ATTEMPT",
    NOTICEOFAPPEARANCEFILED = "NOTICE_OF_APPEARANCE_FILED",
    OTHER = "OTHER",
    REVIEWEDBYLAWFIRM = "REVIEWED_BY_LAWFIRM",
    TICKETMAILEDTOCOURT = "TICKET_MAILED_TO_COURT"
}
/**
 *
 * @export
 * @interface CaseAlert
 */
export interface CaseAlert {
    /**
     *
     * @type {string}
     * @memberof CaseAlert
     */
    actionType?: CaseAlertActionTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CaseAlert
     */
    alertType?: CaseAlertAlertTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CaseAlert
     */
    bannerMessage?: string;
    /**
     *
     * @type {string}
     * @memberof CaseAlert
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof CaseAlert
     */
    clickThruUrl?: string;
    /**
     *
     * @type {number}
     * @memberof CaseAlert
     */
    hexColor?: number;
    /**
     *
     * @type {string}
     * @memberof CaseAlert
     */
    lawfirmId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseAlertActionTypeEnum {
    ANNOUNCEMENT = "ANNOUNCEMENT",
    ENGAGEMENTLETTER = "ENGAGEMENT_LETTER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseAlertAlertTypeEnum {
    ERROR = "ERROR",
    INFO = "INFO",
    SUCCESS = "SUCCESS",
    WARNING = "WARNING"
}
/**
 *
 * @export
 * @interface CaseBookingsStats
 */
export interface CaseBookingsStats {
    /**
     *
     * @type {string}
     * @memberof CaseBookingsStats
     */
    endDate?: string;
    /**
     *
     * @type {number}
     * @memberof CaseBookingsStats
     */
    numBookings?: number;
    /**
     *
     * @type {number}
     * @memberof CaseBookingsStats
     */
    numCancelations?: number;
    /**
     *
     * @type {number}
     * @memberof CaseBookingsStats
     */
    numLawfirmsEngaged?: number;
    /**
     *
     * @type {number}
     * @memberof CaseBookingsStats
     */
    onTrackTransactions?: number;
    /**
     *
     * @type {number}
     * @memberof CaseBookingsStats
     */
    otrRevenue?: number;
    /**
     *
     * @type {string}
     * @memberof CaseBookingsStats
     */
    startDate?: string;
    /**
     *
     * @type {ZoneId}
     * @memberof CaseBookingsStats
     */
    zoneId?: ZoneId;
}
/**
 *
 * @export
 * @interface CaseChargeResponsePojo
 */
export interface CaseChargeResponsePojo {
    /**
     *
     * @type {string}
     * @memberof CaseChargeResponsePojo
     */
    casePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof CaseChargeResponsePojo
     */
    stripeChargeId?: string;
}
/**
 *
 * @export
 * @interface CaseCreationRequest
 */
export interface CaseCreationRequest {
    /**
     *
     * @type {string}
     * @memberof CaseCreationRequest
     */
    courtDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof CaseCreationRequest
     */
    forcePredeterminedLawfirmId?: boolean;
    /**
     *
     * @type {number}
     * @memberof CaseCreationRequest
     */
    predeterminedLawfirmId?: number;
}
/**
 *
 * @export
 * @interface CaseDomain
 */
export interface CaseDomain {
    /**
     *
     * @type {Array<CaseActionDomain>}
     * @memberof CaseDomain
     */
    actions?: Array<CaseActionDomain>;
    /**
     *
     * @type {number}
     * @memberof CaseDomain
     */
    adjustedFineAmount?: number;
    /**
     *
     * @type {number}
     * @memberof CaseDomain
     */
    adjustedPointCount?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseDomain
     */
    bookingConfirmedDate?: Timestamp;
    /**
     *
     * @type {CancelationDetails}
     * @memberof CaseDomain
     */
    cancelationDetails?: CancelationDetails;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    cancelationReason?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseDomain
     */
    cancellationExpiryDate?: Timestamp;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseDomain
     */
    caseCancellationDate?: Timestamp;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseDomain
     */
    caseCreationDate?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    caseId?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseDomain
     */
    caseResolutionDate?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    caseStatus?: CaseDomainCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    caseStatusCategory?: CaseDomainCaseStatusCategoryEnum;
    /**
     *
     * @type {CaseStatusDomain}
     * @memberof CaseDomain
     */
    caseStatusDomain?: CaseStatusDomain;
    /**
     *
     * @type {CitationDomain}
     * @memberof CaseDomain
     */
    citation?: CitationDomain;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseDomain
     */
    courtAppointmentDate?: Timestamp;
    /**
     *
     * @type {boolean}
     * @memberof CaseDomain
     */
    hasLeftLawyerReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CaseDomain
     */
    isPointSystemState?: boolean;
    /**
     *
     * @type {LawfirmCaseDomain}
     * @memberof CaseDomain
     */
    lawfirmCaseDecision?: LawfirmCaseDomain;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    refundEligibility?: CaseDomainRefundEligibilityEnum;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    resolutionSummary?: string;
    /**
     *
     * @type {string}
     * @memberof CaseDomain
     */
    uiRefundMsg?: string;
    /**
     *
     * @type {UserDomain}
     * @memberof CaseDomain
     */
    user?: UserDomain;
    /**
     *
     * @type {number}
     * @memberof CaseDomain
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainCaseStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface CaseDomainReq
 */
export interface CaseDomainReq {
    /**
     *
     * @type {Array<CaseActionDomainReq>}
     * @memberof CaseDomainReq
     */
    actions?: Array<CaseActionDomainReq>;
    /**
     *
     * @type {number}
     * @memberof CaseDomainReq
     */
    adjustedFineAmount?: number;
    /**
     *
     * @type {number}
     * @memberof CaseDomainReq
     */
    adjustedPointCount?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseDomainReq
     */
    bookingConfirmedDate?: TimestampReq;
    /**
     *
     * @type {CancelationDetailsReq}
     * @memberof CaseDomainReq
     */
    cancelationDetails?: CancelationDetailsReq;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    cancelationReason?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseDomainReq
     */
    cancellationExpiryDate?: TimestampReq;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseDomainReq
     */
    caseCancellationDate?: TimestampReq;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseDomainReq
     */
    caseCreationDate?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    caseId?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseDomainReq
     */
    caseResolutionDate?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    caseStatus?: CaseDomainReqCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    caseStatusCategory?: CaseDomainReqCaseStatusCategoryEnum;
    /**
     *
     * @type {CaseStatusDomain}
     * @memberof CaseDomainReq
     */
    caseStatusDomain?: CaseStatusDomain;
    /**
     *
     * @type {CitationDomainReq}
     * @memberof CaseDomainReq
     */
    citation?: CitationDomainReq;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseDomainReq
     */
    courtAppointmentDate?: TimestampReq;
    /**
     *
     * @type {boolean}
     * @memberof CaseDomainReq
     */
    hasLeftLawyerReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CaseDomainReq
     */
    isPointSystemState?: boolean;
    /**
     *
     * @type {LawfirmCaseDomainReq}
     * @memberof CaseDomainReq
     */
    lawfirmCaseDecision?: LawfirmCaseDomainReq;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    refundEligibility?: CaseDomainReqRefundEligibilityEnum;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    resolutionSummary?: string;
    /**
     *
     * @type {string}
     * @memberof CaseDomainReq
     */
    uiRefundMsg?: string;
    /**
     *
     * @type {UserDomainReq}
     * @memberof CaseDomainReq
     */
    user?: UserDomainReq;
    /**
     *
     * @type {number}
     * @memberof CaseDomainReq
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainReqCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainReqCaseStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainReqRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface CaseDomainRes
 */
export interface CaseDomainRes {
    /**
     *
     * @type {Array<CaseActionDomainRes>}
     * @memberof CaseDomainRes
     */
    actions?: Array<CaseActionDomainRes>;
    /**
     *
     * @type {number}
     * @memberof CaseDomainRes
     */
    adjustedFineAmount?: number;
    /**
     *
     * @type {number}
     * @memberof CaseDomainRes
     */
    adjustedPointCount?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseDomainRes
     */
    bookingConfirmedDate?: TimestampRes;
    /**
     *
     * @type {CancelationDetailsRes}
     * @memberof CaseDomainRes
     */
    cancelationDetails?: CancelationDetailsRes;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    cancelationReason?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseDomainRes
     */
    cancellationExpiryDate?: TimestampRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseDomainRes
     */
    caseCancellationDate?: TimestampRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseDomainRes
     */
    caseCreationDate?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    caseId?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseDomainRes
     */
    caseResolutionDate?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    caseStatus?: CaseDomainResCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    caseStatusCategory?: CaseDomainResCaseStatusCategoryEnum;
    /**
     *
     * @type {CaseStatusDomain}
     * @memberof CaseDomainRes
     */
    caseStatusDomain?: CaseStatusDomain;
    /**
     *
     * @type {CitationDomainRes}
     * @memberof CaseDomainRes
     */
    citation?: CitationDomainRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseDomainRes
     */
    courtAppointmentDate?: TimestampRes;
    /**
     *
     * @type {boolean}
     * @memberof CaseDomainRes
     */
    hasLeftLawyerReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CaseDomainRes
     */
    isPointSystemState?: boolean;
    /**
     *
     * @type {LawfirmCaseDomainRes}
     * @memberof CaseDomainRes
     */
    lawfirmCaseDecision?: LawfirmCaseDomainRes;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    refundEligibility?: CaseDomainResRefundEligibilityEnum;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    resolutionSummary?: string;
    /**
     *
     * @type {string}
     * @memberof CaseDomainRes
     */
    uiRefundMsg?: string;
    /**
     *
     * @type {UserDomainRes}
     * @memberof CaseDomainRes
     */
    user?: UserDomainRes;
    /**
     *
     * @type {number}
     * @memberof CaseDomainRes
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainResCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainResCaseStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseDomainResRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface CaseLineItemDomainReq
 */
export interface CaseLineItemDomainReq {
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainReq
     */
    additionalDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainReq
     */
    chargeDescription?: string;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    clientTotalCost?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof CaseLineItemDomainReq
     */
    creationDate?: TimestampReq;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    feeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    lawfirmAssumedCost?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    lawfirmCaseFees?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    lawfirmEarningsForCase?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    lawfirmReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainReq
     */
    lineItemId?: string;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainReq
     */
    lineItemOwner?: CaseLineItemDomainReqLineItemOwnerEnum;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainReq
     */
    lineItemType?: CaseLineItemDomainReqLineItemTypeEnum;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    otrEarnings?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    otrMarketingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    otrMarketingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    otrReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    paymentProcessingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainReq
     */
    platformFee?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseLineItemDomainReqLineItemOwnerEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseLineItemDomainReqLineItemTypeEnum {
    ACCIDENTFEE = "ACCIDENT_FEE",
    BASELEGALFEE = "BASE_LEGAL_FEE",
    BONDFEE = "BOND_FEE",
    BOOKINGFEE = "BOOKING_FEE",
    CDLFEE = "CDL_FEE",
    DISPUTEFEE = "DISPUTE_FEE",
    FINEPAYMENT = "FINE_PAYMENT",
    FTAFEE = "FTA_FEE",
    LATEFEE = "LATE_FEE",
    MBGREFUND = "MBG_REFUND",
    MVSFEE = "MVS_FEE",
    OTHER = "OTHER",
    OTRCREDIT = "OTR_CREDIT",
    PAYMENTPLANSERVICEFEE = "PAYMENT_PLAN_SERVICE_FEE",
    WARRANTFEE = "WARRANT_FEE"
}
/**
 *
 * @export
 * @interface CaseLineItemDomainRes
 */
export interface CaseLineItemDomainRes {
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainRes
     */
    additionalDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainRes
     */
    chargeDescription?: string;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    clientTotalCost?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseLineItemDomainRes
     */
    creationDate?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    feeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    lawfirmAssumedCost?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    lawfirmCaseFees?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    lawfirmEarningsForCase?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    lawfirmReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainRes
     */
    lineItemId?: string;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainRes
     */
    lineItemOwner?: CaseLineItemDomainResLineItemOwnerEnum;
    /**
     *
     * @type {string}
     * @memberof CaseLineItemDomainRes
     */
    lineItemType?: CaseLineItemDomainResLineItemTypeEnum;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    otrEarnings?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    otrMarketingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    otrMarketingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    otrReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    paymentProcessingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemDomainRes
     */
    platformFee?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseLineItemDomainResLineItemOwnerEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseLineItemDomainResLineItemTypeEnum {
    ACCIDENTFEE = "ACCIDENT_FEE",
    BASELEGALFEE = "BASE_LEGAL_FEE",
    BONDFEE = "BOND_FEE",
    BOOKINGFEE = "BOOKING_FEE",
    CDLFEE = "CDL_FEE",
    DISPUTEFEE = "DISPUTE_FEE",
    FINEPAYMENT = "FINE_PAYMENT",
    FTAFEE = "FTA_FEE",
    LATEFEE = "LATE_FEE",
    MBGREFUND = "MBG_REFUND",
    MVSFEE = "MVS_FEE",
    OTHER = "OTHER",
    OTRCREDIT = "OTR_CREDIT",
    PAYMENTPLANSERVICEFEE = "PAYMENT_PLAN_SERVICE_FEE",
    WARRANTFEE = "WARRANT_FEE"
}
/**
 *
 * @export
 * @interface CaseLineItemsSummary
 */
export interface CaseLineItemsSummary {
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    caseBaseCostInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    clientTotalCostInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmAssumedCostInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmCaseFees?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmEarningsForCase?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmRefcodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmServiceChargeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    otrEarnings?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    otrMarketingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    otrRefcodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    paymentProcessingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    platformFee?: number;
}
/**
 *
 * @export
 * @interface CaseMessageDomain
 */
export interface CaseMessageDomain {
    /**
     *
     * @type {string}
     * @memberof CaseMessageDomain
     */
    authorFirstname?: string;
    /**
     *
     * @type {string}
     * @memberof CaseMessageDomain
     */
    authorLastname?: string;
    /**
     *
     * @type {string}
     * @memberof CaseMessageDomain
     */
    authorRoleType?: CaseMessageDomainAuthorRoleTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof CaseMessageDomain
     */
    isDeleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof CaseMessageDomain
     */
    mediaType?: CaseMessageDomainMediaTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CaseMessageDomain
     */
    mediaUrl?: string;
    /**
     *
     * @type {string}
     * @memberof CaseMessageDomain
     */
    messageBody?: string;
    /**
     *
     * @type {number}
     * @memberof CaseMessageDomain
     */
    messageId?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof CaseMessageDomain
     */
    messageSentDateUtc?: Timestamp;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseMessageDomainAuthorRoleTypeEnum {
    ADMIN = "ADMIN",
    DEFENDANT = "DEFENDANT",
    LAWYER = "LAWYER",
    PARTNER = "PARTNER",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseMessageDomainMediaTypeEnum {
    IMAGE = "IMAGE",
    PDF = "PDF"
}
/**
 *
 * @export
 * @interface CaseNotesDomain
 */
export interface CaseNotesDomain {
    /**
     *
     * @type {string}
     * @memberof CaseNotesDomain
     */
    lawfirmCaseNotes?: string;
    /**
     *
     * @type {string}
     * @memberof CaseNotesDomain
     */
    otrCaseNotes?: string;
}
/**
 *
 * @export
 * @interface CasePaymentDomain
 */
export interface CasePaymentDomain {
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    baseFeeInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    casePaymentId?: string;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    chargeAttempts?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    clientTotalCost?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof CasePaymentDomain
     */
    creationDateUTC?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    dueDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof CasePaymentDomain
     */
    isLocked?: boolean;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    lastAttemptDate?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof CasePaymentDomain
     */
    lastUpdatedDateUTC?: Timestamp;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    lawfirmAssumedCost?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    lawfirmEarnings?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    lawfirmReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    mostRecentChargeError?: string;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    otrEarnings?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    otrMarketingFeeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    otrReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    paymentProcessingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof CasePaymentDomain
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    recipient?: CasePaymentDomainRecipientEnum;
    /**
     *
     * @type {StripeChargeDomain}
     * @memberof CasePaymentDomain
     */
    stripeCharge?: StripeChargeDomain;
    /**
     *
     * @type {Array<FreshdeskTicketReferenceDomain>}
     * @memberof CasePaymentDomain
     */
    supportTickets?: Array<FreshdeskTicketReferenceDomain>;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    transactionMethod?: CasePaymentDomainTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof CasePaymentDomain
     */
    updatedDueDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CasePaymentDomainRecipientEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CasePaymentDomainTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface CasePaymentModel
 */
export interface CasePaymentModel {
    /**
     *
     * @type {string}
     * @memberof CasePaymentModel
     */
    dueDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof CasePaymentModel
     */
    dueNow?: boolean;
    /**
     *
     * @type {number}
     * @memberof CasePaymentModel
     */
    feeAmount?: number;
}
/**
 *
 * @export
 * @interface CaseStatusDetailsResponse
 */
export interface CaseStatusDetailsResponse {
    /**
     *
     * @type {string}
     * @memberof CaseStatusDetailsResponse
     */
    category?: CaseStatusDetailsResponseCategoryEnum;
    /**
     *
     * @type {number}
     * @memberof CaseStatusDetailsResponse
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDetailsResponse
     */
    status?: CaseStatusDetailsResponseStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseStatusDetailsResponseCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseStatusDetailsResponseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface CaseStatusDomain
 */
export interface CaseStatusDomain {
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    caseStatus?: CaseStatusDomainCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    clientFriendlyDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    clientFriendlyName?: string;
    /**
     *
     * @type {boolean}
     * @memberof CaseStatusDomain
     */
    isDeprecated?: boolean;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    lawfirmFriendlyDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    lawfirmFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    stateCode?: string;
    /**
     *
     * @type {string}
     * @memberof CaseStatusDomain
     */
    statusCategory?: CaseStatusDomainStatusCategoryEnum;
    /**
     *
     * @type {number}
     * @memberof CaseStatusDomain
     */
    statusId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseStatusDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseStatusDomainStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface CaseSummaryDomain
 */
export interface CaseSummaryDomain {
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    bookingConfirmedDate?: string;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    caseDecisionStatus?: CaseSummaryDomainCaseDecisionStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    caseId?: string;
    /**
     *
     * @type {CaseStatusDomain}
     * @memberof CaseSummaryDomain
     */
    caseStatusDomain?: CaseStatusDomain;
    /**
     *
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    citationId?: number;
    /**
     *
     * @type {PureDate}
     * @memberof CaseSummaryDomain
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    citationIssueDateUTC?: string;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    countyName?: string;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    courtDate?: string;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    firstName?: string;
    /**
     *
     * @type {boolean}
     * @memberof CaseSummaryDomain
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    lastName?: string;
    /**
     *
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    legalFeeInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    resolutionDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    userId?: number;
    /**
     *
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    violationCount?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseSummaryDomainCaseDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
 *
 * @export
 * @interface CaseTransferHistory
 */
export interface CaseTransferHistory {
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    decisionDate?: string;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    decisionStatus?: CaseTransferHistoryDecisionStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    declineNote?: string;
    /**
     *
     * @type {number}
     * @memberof CaseTransferHistory
     */
    discountInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmCaseCreationDate?: string;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmCaseId?: string;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmId?: string;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof CaseTransferHistory
     */
    refundOwner?: CaseTransferHistoryRefundOwnerEnum;
    /**
     *
     * @type {number}
     * @memberof CaseTransferHistory
     */
    totalClientCostInCents?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseTransferHistoryDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseTransferHistoryRefundOwnerEnum {
    LAWFIRM = "LAWFIRM",
    NONE = "NONE",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface CaseTransferResponse
 */
export interface CaseTransferResponse {
    /**
     *
     * @type {Array<CaseTransferHistory>}
     * @memberof CaseTransferResponse
     */
    transfers?: Array<CaseTransferHistory>;
}
/**
 *
 * @export
 * @interface CaseViolationPenalty
 */
export interface CaseViolationPenalty {
    /**
     *
     * @type {string}
     * @memberof CaseViolationPenalty
     */
    penaltyFriendlyDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CaseViolationPenalty
     */
    penaltyType?: CaseViolationPenaltyPenaltyTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CaseViolationPenalty
     */
    penaltyValue?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseViolationPenaltyPenaltyTypeEnum {
    DEMERITPOINTS = "DEMERIT_POINTS",
    INCARCERATIONMAXDAYS = "INCARCERATION_MAX_DAYS",
    INCARCERATIONMINDAYS = "INCARCERATION_MIN_DAYS",
    INSURANCEPOINTS = "INSURANCE_POINTS",
    INSURANCERATEINCREASE = "INSURANCE_RATE_INCREASE",
    LICENSEREVOCATIONMAXDAYS = "LICENSE_REVOCATION_MAX_DAYS",
    LICENSEREVOCATIONMINDAYS = "LICENSE_REVOCATION_MIN_DAYS",
    LICENSESUSPENSIONMAXDAYS = "LICENSE_SUSPENSION_MAX_DAYS",
    LICENSESUSPENSIONMINDAYS = "LICENSE_SUSPENSION_MIN_DAYS",
    MANDATORYCOURTAPPEARANCE = "MANDATORY_COURT_APPEARANCE",
    MANDATORYCOURTAPPEARANCEWITHATTORNEY = "MANDATORY_COURT_APPEARANCE_WITH_ATTORNEY",
    MAXBAILAMOUNT = "MAX_BAIL_AMOUNT",
    MINBAILAMOUNT = "MIN_BAIL_AMOUNT",
    PROBATIONINDAYS = "PROBATION_IN_DAYS",
    TOTALBAILAMOUNT = "TOTAL_BAIL_AMOUNT"
}
/**
 *
 * @export
 * @interface CaseWithCoverageObtained
 */
export interface CaseWithCoverageObtained {
    /**
     *
     * @type {string}
     * @memberof CaseWithCoverageObtained
     */
    caseClassification?: CaseWithCoverageObtainedCaseClassificationEnum;
    /**
     *
     * @type {TimestampRes}
     * @memberof CaseWithCoverageObtained
     */
    caseCreationDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CaseWithCoverageObtained
     */
    caseId?: string;
    /**
     *
     * @type {number}
     * @memberof CaseWithCoverageObtained
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof CaseWithCoverageObtained
     */
    county?: string;
    /**
     *
     * @type {string}
     * @memberof CaseWithCoverageObtained
     */
    courtName?: string;
    /**
     *
     * @type {number}
     * @memberof CaseWithCoverageObtained
     */
    fee?: number;
    /**
     *
     * @type {boolean}
     * @memberof CaseWithCoverageObtained
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {number}
     * @memberof CaseWithCoverageObtained
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof CaseWithCoverageObtained
     */
    lawfirmName?: string;
    /**
     *
     * @type {CountryRegion}
     * @memberof CaseWithCoverageObtained
     */
    region?: CountryRegion;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CaseWithCoverageObtainedCaseClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface ChangeUserPasswordRequest
 */
export interface ChangeUserPasswordRequest {
    /**
     *
     * @type {string}
     * @memberof ChangeUserPasswordRequest
     */
    plainTextPasswordNew?: string;
    /**
     *
     * @type {string}
     * @memberof ChangeUserPasswordRequest
     */
    plainTextPasswordOld?: string;
    /**
     *
     * @type {number}
     * @memberof ChangeUserPasswordRequest
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface ChargeFeeToLawfirmRequest
 */
export interface ChargeFeeToLawfirmRequest {
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    dueDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    feeAmountInCents?: number;
    /**
     *
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    note?: string;
    /**
     *
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    otrFeeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    processingFeeInCents?: number;
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    sourceCasePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    transactionDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    transactionMethod?: ChargeFeeToLawfirmRequestTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    transactionReference?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ChargeFeeToLawfirmRequestTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface ChargeFeeToLawfirmResponse
 */
export interface ChargeFeeToLawfirmResponse {
    /**
     *
     * @type {boolean}
     * @memberof ChargeFeeToLawfirmResponse
     */
    isSuccess?: boolean;
}
/**
 *
 * @export
 * @interface CitationDomain
 */
export interface CitationDomain {
    /**
     *
     * @type {AddressDomain}
     * @memberof CitationDomain
     */
    address?: AddressDomain;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    cdlStatus?: CitationDomainCdlStatusEnum;
    /**
     *
     * @type {number}
     * @memberof CitationDomain
     */
    citationId?: number;
    /**
     *
     * @type {PureDate}
     * @memberof CitationDomain
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {Timestamp}
     * @memberof CitationDomain
     */
    citationIssueDateUTC?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    clientFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    clientType?: CitationDomainClientTypeEnum;
    /**
     *
     * @type {CourtDomain}
     * @memberof CitationDomain
     */
    court?: CourtDomain;
    /**
     *
     * @type {Timestamp}
     * @memberof CitationDomain
     */
    creationDateUTC?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    documentUrlToConvert?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomain
     */
    fineAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomain
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomain
     */
    isDeleted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomain
     */
    isDismissedFromContactList?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomain
     */
    isPastDue?: boolean;
    /**
     *
     * @type {number}
     * @memberof CitationDomain
     */
    originalPointCount?: number;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    state?: CitationDomainStateEnum;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    ticketLocationTags?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    ticketNumber?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomain
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof CitationDomain
     */
    violationCategoryName?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomain
     */
    violationCount?: number;
    /**
     *
     * @type {Array<TrafficViolationTypeDomain>}
     * @memberof CitationDomain
     */
    violations?: Array<TrafficViolationTypeDomain>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainCdlStatusEnum {
    CDLINCOMMERCIALVEHICLE = "CDL_IN_COMMERCIAL_VEHICLE",
    CDLINPERSONALVEHICLE = "CDL_IN_PERSONAL_VEHICLE",
    NOCDL = "NO_CDL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CitationDomainReq
 */
export interface CitationDomainReq {
    /**
     *
     * @type {AddressDomainReq}
     * @memberof CitationDomainReq
     */
    address?: AddressDomainReq;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    cdlStatus?: CitationDomainReqCdlStatusEnum;
    /**
     *
     * @type {number}
     * @memberof CitationDomainReq
     */
    citationId?: number;
    /**
     *
     * @type {PureDate}
     * @memberof CitationDomainReq
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {TimestampReq}
     * @memberof CitationDomainReq
     */
    citationIssueDateUTC?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    clientFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    clientType?: CitationDomainReqClientTypeEnum;
    /**
     *
     * @type {CourtDomainReq}
     * @memberof CitationDomainReq
     */
    court?: CourtDomainReq;
    /**
     *
     * @type {TimestampReq}
     * @memberof CitationDomainReq
     */
    creationDateUTC?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    documentUrlToConvert?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomainReq
     */
    fineAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainReq
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainReq
     */
    isDeleted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainReq
     */
    isDismissedFromContactList?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainReq
     */
    isPastDue?: boolean;
    /**
     *
     * @type {number}
     * @memberof CitationDomainReq
     */
    originalPointCount?: number;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    state?: CitationDomainReqStateEnum;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    ticketLocationTags?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    ticketNumber?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomainReq
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof CitationDomainReq
     */
    violationCategoryName?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomainReq
     */
    violationCount?: number;
    /**
     *
     * @type {Array<TrafficViolationTypeDomain>}
     * @memberof CitationDomainReq
     */
    violations?: Array<TrafficViolationTypeDomain>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainReqCdlStatusEnum {
    CDLINCOMMERCIALVEHICLE = "CDL_IN_COMMERCIAL_VEHICLE",
    CDLINPERSONALVEHICLE = "CDL_IN_PERSONAL_VEHICLE",
    NOCDL = "NO_CDL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainReqClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainReqStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CitationDomainRes
 */
export interface CitationDomainRes {
    /**
     *
     * @type {AddressDomainRes}
     * @memberof CitationDomainRes
     */
    address?: AddressDomainRes;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    cdlStatus?: CitationDomainResCdlStatusEnum;
    /**
     *
     * @type {number}
     * @memberof CitationDomainRes
     */
    citationId?: number;
    /**
     *
     * @type {PureDate}
     * @memberof CitationDomainRes
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {TimestampRes}
     * @memberof CitationDomainRes
     */
    citationIssueDateUTC?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    clientFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    clientType?: CitationDomainResClientTypeEnum;
    /**
     *
     * @type {CourtDomainRes}
     * @memberof CitationDomainRes
     */
    court?: CourtDomainRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof CitationDomainRes
     */
    creationDateUTC?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    documentUrlToConvert?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomainRes
     */
    fineAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainRes
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainRes
     */
    isDeleted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainRes
     */
    isDismissedFromContactList?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationDomainRes
     */
    isPastDue?: boolean;
    /**
     *
     * @type {number}
     * @memberof CitationDomainRes
     */
    originalPointCount?: number;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    state?: CitationDomainResStateEnum;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    ticketLocationTags?: string;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    ticketNumber?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomainRes
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof CitationDomainRes
     */
    violationCategoryName?: string;
    /**
     *
     * @type {number}
     * @memberof CitationDomainRes
     */
    violationCount?: number;
    /**
     *
     * @type {Array<TrafficViolationTypeDomain>}
     * @memberof CitationDomainRes
     */
    violations?: Array<TrafficViolationTypeDomain>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainResCdlStatusEnum {
    CDLINCOMMERCIALVEHICLE = "CDL_IN_COMMERCIAL_VEHICLE",
    CDLINPERSONALVEHICLE = "CDL_IN_PERSONAL_VEHICLE",
    NOCDL = "NO_CDL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainResClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationDomainResStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CitationInputRequest
 */
export interface CitationInputRequest {
    /**
     *
     * @type {AddressDomainReq}
     * @memberof CitationInputRequest
     */
    address?: AddressDomainReq;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    cdlStatus?: CitationInputRequestCdlStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    citationIssueDate?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof CitationInputRequest
     */
    citationIssueDateUTC?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    clientFirstName?: string;
    /**
     *
     * @type {CourtInputRequest}
     * @memberof CitationInputRequest
     */
    court?: CourtInputRequest;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    documentUrlToConvert?: string;
    /**
     *
     * @type {number}
     * @memberof CitationInputRequest
     */
    fineAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof CitationInputRequest
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationInputRequest
     */
    isDismissedFromContactList?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CitationInputRequest
     */
    isPastDue?: boolean;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    state?: CitationInputRequestStateEnum;
    /**
     *
     * @type {string}
     * @memberof CitationInputRequest
     */
    ticketNumber?: string;
    /**
     *
     * @type {number}
     * @memberof CitationInputRequest
     */
    userId?: number;
    /**
     *
     * @type {number}
     * @memberof CitationInputRequest
     */
    violationCount?: number;
    /**
     *
     * @type {Array<TrafficViolationInputRequest>}
     * @memberof CitationInputRequest
     */
    violations?: Array<TrafficViolationInputRequest>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationInputRequestCdlStatusEnum {
    CDLINCOMMERCIALVEHICLE = "CDL_IN_COMMERCIAL_VEHICLE",
    CDLINPERSONALVEHICLE = "CDL_IN_PERSONAL_VEHICLE",
    NOCDL = "NO_CDL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationInputRequestStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CitationWithMissingCourt
 */
export interface CitationWithMissingCourt {
    /**
     *
     * @type {number}
     * @memberof CitationWithMissingCourt
     */
    citationId?: number;
    /**
     *
     * @type {boolean}
     * @memberof CitationWithMissingCourt
     */
    deleted?: boolean;
    /**
     *
     * @type {CountryRegion}
     * @memberof CitationWithMissingCourt
     */
    region?: CountryRegion;
    /**
     *
     * @type {string}
     * @memberof CitationWithMissingCourt
     */
    state?: CitationWithMissingCourtStateEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CitationWithMissingCourtStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CitationWithMissingFields
 */
export interface CitationWithMissingFields {
    /**
     *
     * @type {TimestampRes}
     * @memberof CitationWithMissingFields
     */
    citationCreationDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof CitationWithMissingFields
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof CitationWithMissingFields
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CitationWithMissingFields
     */
    clientFirstName?: string;
    /**
     *
     * @type {number}
     * @memberof CitationWithMissingFields
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof CitationWithMissingFields
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {number}
     * @memberof CitationWithMissingFields
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface ClientActionRequiredRequest
 */
export interface ClientActionRequiredRequest {
    /**
     *
     * @type {string}
     * @memberof ClientActionRequiredRequest
     */
    caseActionItem?: ClientActionRequiredRequestCaseActionItemEnum;
    /**
     *
     * @type {string}
     * @memberof ClientActionRequiredRequest
     */
    caseId?: string;
    /**
     *
     * @type {boolean}
     * @memberof ClientActionRequiredRequest
     */
    includeDeclineReason?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ClientActionRequiredRequestCaseActionItemEnum {
    FEEADJUSTMENT = "FEE_ADJUSTMENT",
    NOREFUNDOFFERED = "NO_REFUND_OFFERED",
    REQUESTCOURTEXTENSION = "REQUEST_COURT_EXTENSION"
}
/**
 *
 * @export
 * @interface ClientConfirmedUnpaidCase
 */
export interface ClientConfirmedUnpaidCase {
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    amountDisputed?: number;
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    amountDueLater?: number;
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    amountOverdue?: number;
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    amountPaid?: number;
    /**
     *
     * @type {string}
     * @memberof ClientConfirmedUnpaidCase
     */
    bookingConfirmedDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof ClientConfirmedUnpaidCase
     */
    caseId?: string;
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    caseSubtotal?: number;
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof ClientConfirmedUnpaidCase
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof ClientConfirmedUnpaidCase
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof ClientConfirmedUnpaidCase
     */
    userName?: string;
}
/**
 *
 * @export
 * @interface ClientLeadDomain
 */
export interface ClientLeadDomain {
    /**
     *
     * @type {string}
     * @memberof ClientLeadDomain
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof ClientLeadDomain
     */
    firstName?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof ClientLeadDomain
     */
    lastBookingDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof ClientLeadDomain
     */
    lastName?: string;
    /**
     *
     * @type {Array<PhoneNumberDomain>}
     * @memberof ClientLeadDomain
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
    /**
     *
     * @type {Array<TicketLeadDomain>}
     * @memberof ClientLeadDomain
     */
    tickets?: Array<TicketLeadDomain>;
    /**
     *
     * @type {number}
     * @memberof ClientLeadDomain
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface ContactTimelineResponse
 */
export interface ContactTimelineResponse {
    /**
     *
     * @type {CallContact}
     * @memberof ContactTimelineResponse
     */
    call?: CallContact;
    /**
     *
     * @type {string}
     * @memberof ContactTimelineResponse
     */
    creationDate?: string;
    /**
     *
     * @type {FreshDeskTicket}
     * @memberof ContactTimelineResponse
     */
    ticket?: FreshDeskTicket;
}
/**
 *
 * @export
 * @interface CountryDomain
 */
export interface CountryDomain {
    /**
     *
     * @type {string}
     * @memberof CountryDomain
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof CountryDomain
     */
    countryName?: string;
}
/**
 *
 * @export
 * @interface CountryRegion
 */
export interface CountryRegion {
    /**
     *
     * @type {string}
     * @memberof CountryRegion
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof CountryRegion
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof CountryRegion
     */
    regionName?: string;
    /**
     *
     * @type {string}
     * @memberof CountryRegion
     */
    regionType?: string;
    /**
     *
     * @type {string}
     * @memberof CountryRegion
     */
    timezone?: string;
}
/**
 *
 * @export
 * @interface CountyDomain
 */
export interface CountyDomain {
    /**
     *
     * @type {number}
     * @memberof CountyDomain
     */
    countyId?: number;
    /**
     *
     * @type {string}
     * @memberof CountyDomain
     */
    countyName?: string;
    /**
     *
     * @type {string}
     * @memberof CountyDomain
     */
    stateCode?: CountyDomainStateCodeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CountyDomainStateCodeEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CourtCoverageCountyRecord
 */
export interface CourtCoverageCountyRecord {
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    countyId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageCountyRecord
     */
    countyName?: string;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    numActiveLawfirms?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    numCourts?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    numCourtsWithCoverage?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    numCourtsWithoutCoverage?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    numUnserviceableRequests?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageCountyRecord
     */
    percentCourtCoverage?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageCountyRecord
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface CourtCoverageRecord
 */
export interface CourtCoverageRecord {
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    countyId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageRecord
     */
    countyName?: string;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageRecord
     */
    courtName?: string;
    /**
     *
     * @type {boolean}
     * @memberof CourtCoverageRecord
     */
    isVacationMode?: boolean;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageRecord
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    lawfirmPriority?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    lawyerFee?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    otrTargetFee?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageRecord
     */
    regionCode?: string;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageRecord
     */
    unserviceableRequests?: number;
}
/**
 *
 * @export
 * @interface CourtCoverageStateRecord
 */
export interface CourtCoverageStateRecord {
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    numActiveLawfirms?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    numCounties?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    numCourts?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    numCourtsWithCoverage?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    numCourtsWithoutCoverage?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    numUnserviceableRequests?: number;
    /**
     *
     * @type {number}
     * @memberof CourtCoverageStateRecord
     */
    percentCourtCoverage?: number;
    /**
     *
     * @type {string}
     * @memberof CourtCoverageStateRecord
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface CourtDomain
 */
export interface CourtDomain {
    /**
     *
     * @type {AddressDomain}
     * @memberof CourtDomain
     */
    address?: AddressDomain;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    county?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomain
     */
    countyId?: number;
    /**
     *
     * @type {CountyDomain}
     * @memberof CourtDomain
     */
    countyObj?: CountyDomain;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    courtCode?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomain
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    courtNameAdditional?: string;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    courtType?: CourtDomainCourtTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    lookupCaseInfoLink?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomain
     */
    otrTargetFee?: number;
    /**
     *
     * @type {TimeZone}
     * @memberof CourtDomain
     */
    timeZone?: TimeZone;
    /**
     *
     * @type {number}
     * @memberof CourtDomain
     */
    unserviceableRequests?: number;
    /**
     *
     * @type {string}
     * @memberof CourtDomain
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CourtDomainCourtTypeEnum {
    CIRCUIT = "CIRCUIT",
    COUNTYCLERK = "COUNTY_CLERK",
    DISTRICT = "DISTRICT",
    JUVENILE = "JUVENILE",
    MUNICIPAL = "MUNICIPAL",
    PROBATION = "PROBATION",
    SUPERIOR = "SUPERIOR",
    VIOLATIONSBUREAU = "VIOLATIONS_BUREAU"
}
/**
 *
 * @export
 * @interface CourtDomainReq
 */
export interface CourtDomainReq {
    /**
     *
     * @type {AddressDomainReq}
     * @memberof CourtDomainReq
     */
    address?: AddressDomainReq;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    county?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomainReq
     */
    countyId?: number;
    /**
     *
     * @type {CountyDomain}
     * @memberof CourtDomainReq
     */
    countyObj?: CountyDomain;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    courtCode?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomainReq
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    courtNameAdditional?: string;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    courtType?: CourtDomainReqCourtTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    lookupCaseInfoLink?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomainReq
     */
    otrTargetFee?: number;
    /**
     *
     * @type {TimeZoneReq}
     * @memberof CourtDomainReq
     */
    timeZone?: TimeZoneReq;
    /**
     *
     * @type {number}
     * @memberof CourtDomainReq
     */
    unserviceableRequests?: number;
    /**
     *
     * @type {string}
     * @memberof CourtDomainReq
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CourtDomainReqCourtTypeEnum {
    CIRCUIT = "CIRCUIT",
    COUNTYCLERK = "COUNTY_CLERK",
    DISTRICT = "DISTRICT",
    JUVENILE = "JUVENILE",
    MUNICIPAL = "MUNICIPAL",
    PROBATION = "PROBATION",
    SUPERIOR = "SUPERIOR",
    VIOLATIONSBUREAU = "VIOLATIONS_BUREAU"
}
/**
 *
 * @export
 * @interface CourtDomainRes
 */
export interface CourtDomainRes {
    /**
     *
     * @type {AddressDomainRes}
     * @memberof CourtDomainRes
     */
    address?: AddressDomainRes;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    county?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomainRes
     */
    countyId?: number;
    /**
     *
     * @type {CountyDomain}
     * @memberof CourtDomainRes
     */
    countyObj?: CountyDomain;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    courtCode?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomainRes
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    courtNameAdditional?: string;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    courtType?: CourtDomainResCourtTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    lookupCaseInfoLink?: string;
    /**
     *
     * @type {number}
     * @memberof CourtDomainRes
     */
    otrTargetFee?: number;
    /**
     *
     * @type {TimeZoneRes}
     * @memberof CourtDomainRes
     */
    timeZone?: TimeZoneRes;
    /**
     *
     * @type {number}
     * @memberof CourtDomainRes
     */
    unserviceableRequests?: number;
    /**
     *
     * @type {string}
     * @memberof CourtDomainRes
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CourtDomainResCourtTypeEnum {
    CIRCUIT = "CIRCUIT",
    COUNTYCLERK = "COUNTY_CLERK",
    DISTRICT = "DISTRICT",
    JUVENILE = "JUVENILE",
    MUNICIPAL = "MUNICIPAL",
    PROBATION = "PROBATION",
    SUPERIOR = "SUPERIOR",
    VIOLATIONSBUREAU = "VIOLATIONS_BUREAU"
}
/**
 *
 * @export
 * @interface CourtInputRequest
 */
export interface CourtInputRequest {
    /**
     *
     * @type {number}
     * @memberof CourtInputRequest
     */
    courtId?: number;
}
/**
 *
 * @export
 * @interface CourtResponseModel
 */
export interface CourtResponseModel {
    /**
     *
     * @type {AddressDomainRes}
     * @memberof CourtResponseModel
     */
    address?: AddressDomainRes;
    /**
     *
     * @type {CountyDomain}
     * @memberof CourtResponseModel
     */
    countyObj?: CountyDomain;
    /**
     *
     * @type {string}
     * @memberof CourtResponseModel
     */
    courtCode?: string;
    /**
     *
     * @type {number}
     * @memberof CourtResponseModel
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof CourtResponseModel
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof CourtResponseModel
     */
    courtNameAdditional?: string;
    /**
     *
     * @type {string}
     * @memberof CourtResponseModel
     */
    courtType?: CourtResponseModelCourtTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CourtResponseModel
     */
    lookupCaseInfoLink?: string;
    /**
     *
     * @type {number}
     * @memberof CourtResponseModel
     */
    otrTargetFee?: number;
    /**
     *
     * @type {string}
     * @memberof CourtResponseModel
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CourtResponseModelCourtTypeEnum {
    CIRCUIT = "CIRCUIT",
    COUNTYCLERK = "COUNTY_CLERK",
    DISTRICT = "DISTRICT",
    JUVENILE = "JUVENILE",
    MUNICIPAL = "MUNICIPAL",
    PROBATION = "PROBATION",
    SUPERIOR = "SUPERIOR",
    VIOLATIONSBUREAU = "VIOLATIONS_BUREAU"
}
/**
 *
 * @export
 * @interface CoverageToRemove
 */
export interface CoverageToRemove {
    /**
     *
     * @type {number}
     * @memberof CoverageToRemove
     */
    courtId?: number;
    /**
     *
     * @type {number}
     * @memberof CoverageToRemove
     */
    violationId?: number;
}
/**
 *
 * @export
 * @interface CreateBillingSubscriptionItemModel
 */
export interface CreateBillingSubscriptionItemModel {
    /**
     *
     * @type {number}
     * @memberof CreateBillingSubscriptionItemModel
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    billingScheme?: CreateBillingSubscriptionItemModelBillingSchemeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    interval?: CreateBillingSubscriptionItemModelIntervalEnum;
    /**
     *
     * @type {number}
     * @memberof CreateBillingSubscriptionItemModel
     */
    intervalCount?: number;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    priceDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    productId?: string;
    /**
     *
     * @type {number}
     * @memberof CreateBillingSubscriptionItemModel
     */
    quantity?: number;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    tiersMode?: CreateBillingSubscriptionItemModelTiersModeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionItemModel
     */
    usageType?: CreateBillingSubscriptionItemModelUsageTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateBillingSubscriptionItemModelBillingSchemeEnum {
    PERUNIT = "PER_UNIT",
    TIERED = "TIERED",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateBillingSubscriptionItemModelIntervalEnum {
    DAILY = "DAILY",
    MONTHLY = "MONTHLY",
    QUARTERLY = "QUARTERLY",
    WEEKLY = "WEEKLY",
    YEARLY = "YEARLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateBillingSubscriptionItemModelTiersModeEnum {
    GRADUATED = "GRADUATED",
    VOLUME = "VOLUME"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateBillingSubscriptionItemModelUsageTypeEnum {
    LICENSED = "LICENSED",
    METERED = "METERED"
}
/**
 *
 * @export
 * @interface CreateBillingSubscriptionRequest
 */
export interface CreateBillingSubscriptionRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof CreateBillingSubscriptionRequest
     */
    priceIds?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionRequest
     */
    productId?: string;
}
/**
 *
 * @export
 * @interface CreateBillingSubscriptionResponse
 */
export interface CreateBillingSubscriptionResponse {
    /**
     *
     * @type {Array<CreateBillingSubscriptionItemModel>}
     * @memberof CreateBillingSubscriptionResponse
     */
    items?: Array<CreateBillingSubscriptionItemModel>;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionResponse
     */
    startAt?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionResponse
     */
    status?: CreateBillingSubscriptionResponseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof CreateBillingSubscriptionResponse
     */
    subscriptionId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateBillingSubscriptionResponseStatusEnum {
    ACTIVE = "ACTIVE",
    CANCELED = "CANCELED",
    INCOMPLETE = "INCOMPLETE",
    INCOMPLETEEXPIRED = "INCOMPLETE_EXPIRED",
    INTRIALPERIOD = "IN_TRIAL_PERIOD",
    PASTDUE = "PAST_DUE",
    UNKNOWN = "UNKNOWN",
    UNPAID = "UNPAID"
}
/**
 *
 * @export
 * @interface CreateBranchLinkRequest
 */
export interface CreateBranchLinkRequest {
    /**
     *
     * @type {string}
     * @memberof CreateBranchLinkRequest
     */
    afterClickUrl?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBranchLinkRequest
     */
    campaign?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBranchLinkRequest
     */
    channel?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof CreateBranchLinkRequest
     */
    data?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof CreateBranchLinkRequest
     */
    feature?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBranchLinkRequest
     */
    linkAlias?: string;
    /**
     *
     * @type {string}
     * @memberof CreateBranchLinkRequest
     */
    stage?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof CreateBranchLinkRequest
     */
    tags?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof CreateBranchLinkRequest
     */
    type?: number;
}
/**
 *
 * @export
 * @interface CreateCitationRequest
 */
export interface CreateCitationRequest {
    /**
     *
     * @type {string}
     * @memberof CreateCitationRequest
     */
    citationState?: CreateCitationRequestCitationStateEnum;
    /**
     *
     * @type {string}
     * @memberof CreateCitationRequest
     */
    clientType?: CreateCitationRequestClientTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateCitationRequest
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCitationRequest
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCitationRequest
     */
    imageContentType?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCitationRequest
     */
    rawImageData?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateCitationRequestCitationStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateCitationRequestClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface CreateCitationResponse
 */
export interface CreateCitationResponse {
    /**
     *
     * @type {CitationDomain}
     * @memberof CreateCitationResponse
     */
    citation?: CitationDomain;
}
/**
 *
 * @export
 * @interface CreateConnectAccountLinkRequest
 */
export interface CreateConnectAccountLinkRequest {
    /**
     *
     * @type {number}
     * @memberof CreateConnectAccountLinkRequest
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof CreateConnectAccountLinkRequest
     */
    linkType?: string;
    /**
     *
     * @type {string}
     * @memberof CreateConnectAccountLinkRequest
     */
    stripeAccountId?: string;
}
/**
 *
 * @export
 * @interface CreateConnectAccountLinkResponse
 */
export interface CreateConnectAccountLinkResponse {
    /**
     *
     * @type {StripeAccountLinkDomain}
     * @memberof CreateConnectAccountLinkResponse
     */
    accountLink?: StripeAccountLinkDomain;
}
/**
 *
 * @export
 * @interface CreateLawfirmModel
 */
export interface CreateLawfirmModel {
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    aboutUsBlurb?: string;
    /**
     *
     * @type {number}
     * @memberof CreateLawfirmModel
     */
    caseAssignmentPriority?: number;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    coverPhotoUrl?: string;
    /**
     *
     * @type {number}
     * @memberof CreateLawfirmModel
     */
    createdBy?: number;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    establishedDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof CreateLawfirmModel
     */
    establishedYear?: number;
    /**
     *
     * @type {boolean}
     * @memberof CreateLawfirmModel
     */
    isTestLawfirm?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    lawfirmPaymentModel?: CreateLawfirmModelLawfirmPaymentModelEnum;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    lawfirmState?: CreateLawfirmModelLawfirmStateEnum;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    membershipStartDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    otrNotes?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    primaryEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    primaryPhoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    tagLine?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLawfirmModel
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateLawfirmModelLawfirmPaymentModelEnum {
    DESTINATIONACCOUNT = "DESTINATION_ACCOUNT",
    SEPARATECHARGE = "SEPARATE_CHARGE",
    TRANSFERDEDUCTION = "TRANSFER_DEDUCTION"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateLawfirmModelLawfirmStateEnum {
    ACCOUNTCLOSED = "ACCOUNT_CLOSED",
    DUPLICATE = "DUPLICATE",
    ESTABLISHED = "ESTABLISHED",
    FUTURELEAD = "FUTURE_LEAD",
    INTRIAL = "IN_TRIAL",
    LAWFIRMINTERESTED = "LAWFIRM_INTERESTED",
    LAWFIRMLEAD = "LAWFIRM_LEAD",
    LAWFIRMNOTINTERESTED = "LAWFIRM_NOT_INTERESTED",
    NOTINTERESTEDFEESPLITTINGETHICS = "NOT_INTERESTED_FEE_SPLITTING_ETHICS",
    NOTINTERESTEDREFUNDETHICS = "NOT_INTERESTED_REFUND_ETHICS",
    ONBOARDING = "ONBOARDING",
    TEMPORARILYTURNEDOFF = "TEMPORARILY_TURNED_OFF",
    TERMINATEDFRAUD = "TERMINATED_FRAUD",
    TERMINATEDPOORSERVICE = "TERMINATED_POOR_SERVICE",
    TERMINATEDPOORSUCCESS = "TERMINATED_POOR_SUCCESS",
    UNDERREVIEW = "UNDER_REVIEW"
}
/**
 *
 * @export
 * @interface CreateNewLawfirmRequest
 */
export interface CreateNewLawfirmRequest {
    /**
     *
     * @type {number}
     * @memberof CreateNewLawfirmRequest
     */
    defaultTrafficFeeInCents?: number;
    /**
     *
     * @type {CreateLawfirmModel}
     * @memberof CreateNewLawfirmRequest
     */
    lawfirm?: CreateLawfirmModel;
    /**
     *
     * @type {number}
     * @memberof CreateNewLawfirmRequest
     */
    priority?: number;
    /**
     *
     * @type {number}
     * @memberof CreateNewLawfirmRequest
     */
    referralRate?: number;
    /**
     *
     * @type {Array<CountryRegion>}
     * @memberof CreateNewLawfirmRequest
     */
    supportedRegions?: Array<CountryRegion>;
}
/**
 *
 * @export
 * @interface CreateNoteInput
 */
export interface CreateNoteInput {
    /**
     *
     * @type {string}
     * @memberof CreateNoteInput
     */
    note?: string;
    /**
     *
     * @type {string}
     * @memberof CreateNoteInput
     */
    noteType?: CreateNoteInputNoteTypeEnum;
    /**
     *
     * @type {string}
     * @memberof CreateNoteInput
     */
    referenceId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateNoteInputNoteTypeEnum {
    PHONELEAD = "PHONE_LEAD"
}
/**
 *
 * @export
 * @interface CreateNoteRequest
 */
export interface CreateNoteRequest {
    /**
     *
     * @type {CreateNoteInput}
     * @memberof CreateNoteRequest
     */
    note?: CreateNoteInput;
}
/**
 *
 * @export
 * @interface CreateNoteResponse
 */
export interface CreateNoteResponse {
    /**
     *
     * @type {NoteDomain}
     * @memberof CreateNoteResponse
     */
    note?: NoteDomain;
}
/**
 *
 * @export
 * @interface CreateReferralCodeRequest
 */
export interface CreateReferralCodeRequest {
    /**
     *
     * @type {boolean}
     * @memberof CreateReferralCodeRequest
     */
    discountOwnerOTR?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateReferralCodeRequest
     */
    endDate?: string;
    /**
     *
     * @type {string}
     * @memberof CreateReferralCodeRequest
     */
    refereeCreditType?: CreateReferralCodeRequestRefereeCreditTypeEnum;
    /**
     *
     * @type {number}
     * @memberof CreateReferralCodeRequest
     */
    refereeCreditValue?: number;
    /**
     *
     * @type {string}
     * @memberof CreateReferralCodeRequest
     */
    referralCodeOverride?: string;
    /**
     *
     * @type {number}
     * @memberof CreateReferralCodeRequest
     */
    referralCountLimit?: number;
    /**
     *
     * @type {string}
     * @memberof CreateReferralCodeRequest
     */
    referrerCreditType?: CreateReferralCodeRequestReferrerCreditTypeEnum;
    /**
     *
     * @type {number}
     * @memberof CreateReferralCodeRequest
     */
    referrerCreditValue?: number;
    /**
     *
     * @type {number}
     * @memberof CreateReferralCodeRequest
     */
    referrerUserId?: number;
    /**
     *
     * @type {string}
     * @memberof CreateReferralCodeRequest
     */
    startDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateReferralCodeRequestRefereeCreditTypeEnum {
    CENTSVALUE = "CENTS_VALUE",
    NOCREDIT = "NO_CREDIT",
    PERCENTAGEDISCOUNT = "PERCENTAGE_DISCOUNT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateReferralCodeRequestReferrerCreditTypeEnum {
    CENTSVALUE = "CENTS_VALUE",
    NOCREDIT = "NO_CREDIT",
    PERCENTAGEDISCOUNT = "PERCENTAGE_DISCOUNT"
}
/**
 *
 * @export
 * @interface CreateReferralCodeResponse
 */
export interface CreateReferralCodeResponse {
    /**
     *
     * @type {string}
     * @memberof CreateReferralCodeResponse
     */
    referralCode?: string;
}
/**
 *
 * @export
 * @interface CreateReferralSourceForCitation
 */
export interface CreateReferralSourceForCitation {
    /**
     *
     * @type {object}
     * @memberof CreateReferralSourceForCitation
     */
    referralSourceData?: object;
}
/**
 *
 * @export
 * @interface CreateStripeConnectAccountRequest
 */
export interface CreateStripeConnectAccountRequest {
    /**
     *
     * @type {string}
     * @memberof CreateStripeConnectAccountRequest
     */
    accountType?: CreateStripeConnectAccountRequestAccountTypeEnum;
    /**
     *
     * @type {number}
     * @memberof CreateStripeConnectAccountRequest
     */
    lawfirmId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateStripeConnectAccountRequestAccountTypeEnum {
    EXPRESS = "EXPRESS",
    STANDARD = "STANDARD"
}
/**
 *
 * @export
 * @interface CreateStripeConnectAccountResponse
 */
export interface CreateStripeConnectAccountResponse {
    /**
     *
     * @type {StripeConnectedAccountDomain}
     * @memberof CreateStripeConnectAccountResponse
     */
    account?: StripeConnectedAccountDomain;
    /**
     *
     * @type {StripeAccountLinkDomain}
     * @memberof CreateStripeConnectAccountResponse
     */
    accountLink?: StripeAccountLinkDomain;
}
/**
 *
 * @export
 * @interface CursorModel
 */
export interface CursorModel {
    /**
     *
     * @type {string}
     * @memberof CursorModel
     */
    nextPageToken?: string;
    /**
     *
     * @type {string}
     * @memberof CursorModel
     */
    previousPageToken?: string;
}
/**
 *
 * @export
 * @interface CustomerLead
 */
export interface CustomerLead {
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    caseDescription?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    channel?: CustomerLeadChannelEnum;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    emailAddress: string;
    /**
     *
     * @type {number}
     * @memberof CustomerLead
     */
    fineInCents?: number;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    firstName: string;
    /**
     *
     * @type {boolean}
     * @memberof CustomerLead
     */
    hasCourtDate?: boolean;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    lastName: string;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    licenseType?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    state?: CustomerLeadStateEnum;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    violation?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerLead
     */
    zipCode?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CustomerLeadChannelEnum {
    DMVCOM = "DMV_COM",
    DMVORG = "DMV_ORG",
    EDUCATEDDRIVER = "EDUCATED_DRIVER",
    NOLO = "NOLO",
    PHOTOENFORCED = "PHOTO_ENFORCED",
    RIDESHAREGUY = "RIDE_SHARE_GUY",
    RIDESHARINGDRIVER = "RIDE_SHARING_DRIVER",
    UNKNOWN = "UNKNOWN",
    WTL = "WTL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CustomerLeadStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface CustomerOverduePayment
 */
export interface CustomerOverduePayment {
    /**
     *
     * @type {string}
     * @memberof CustomerOverduePayment
     */
    bookingConfirmedDate?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerOverduePayment
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerOverduePayment
     */
    casePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerOverduePayment
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerOverduePayment
     */
    dueDate?: string;
    /**
     *
     * @type {number}
     * @memberof CustomerOverduePayment
     */
    overdueAmount?: number;
    /**
     *
     * @type {string}
     * @memberof CustomerOverduePayment
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface CustomerReview
 */
export interface CustomerReview {
    /**
     *
     * @type {Array<ReviewCommentModel>}
     * @memberof CustomerReview
     */
    comments?: Array<ReviewCommentModel>;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    copy?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    displayName?: string;
    /**
     *
     * @type {boolean}
     * @memberof CustomerReview
     */
    featured?: boolean;
    /**
     *
     * @type {number}
     * @memberof CustomerReview
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    loggedInUserVote?: CustomerReviewLoggedInUserVoteEnum;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    nameSetting?: CustomerReviewNameSettingEnum;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {ReviewRatingModel}
     * @memberof CustomerReview
     */
    ratingModel?: ReviewRatingModel;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    recommendationType?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    resolutionName?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    reviewDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    source?: CustomerReviewSourceEnum;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    starRating?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    stateAbbreviation?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    tagLine?: string;
    /**
     *
     * @type {string}
     * @memberof CustomerReview
     */
    ticketLocation?: string;
    /**
     *
     * @type {ReviewVoteAggregateModel}
     * @memberof CustomerReview
     */
    voteModel?: ReviewVoteAggregateModel;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CustomerReviewLoggedInUserVoteEnum {
    HELPFUL = "HELPFUL",
    UNHELPFUL = "UNHELPFUL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CustomerReviewNameSettingEnum {
    ANONYMOUS = "ANONYMOUS",
    FIRSTNAMELASTINITIAL = "FIRST_NAME_LAST_INITIAL",
    FULLNAME = "FULL_NAME"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CustomerReviewSourceEnum {
    ANDROID = "ANDROID",
    APPLE = "APPLE",
    FACEBOOK = "FACEBOOK",
    GOOGLEBUSINESS = "GOOGLE_BUSINESS",
    OTR = "OTR",
    REVIEWSIO = "REVIEWS_IO"
}
/**
 *
 * @export
 * @interface DashboardAddressModel
 */
export interface DashboardAddressModel {
    /**
     *
     * @type {string}
     * @memberof DashboardAddressModel
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardAddressModel
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardAddressModel
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardAddressModel
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardAddressModel
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface DashboardCaseModel
 */
export interface DashboardCaseModel {
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    bookingConfirmedDate?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    caseId?: string;
    /**
     *
     * @type {DashboardCitationModel}
     * @memberof DashboardCaseModel
     */
    citation?: DashboardCitationModel;
    /**
     *
     * @type {DashboardCourtModel}
     * @memberof DashboardCaseModel
     */
    court?: DashboardCourtModel;
    /**
     *
     * @type {boolean}
     * @memberof DashboardCaseModel
     */
    hasLeftLawyerReview?: boolean;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    lawfirmProfilePictureUrl?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    legalFeeInCents?: number;
    /**
     *
     * @type {DashboardStatusModel}
     * @memberof DashboardCaseModel
     */
    status?: DashboardStatusModel;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface DashboardCitationModel
 */
export interface DashboardCitationModel {
    /**
     *
     * @type {string}
     * @memberof DashboardCitationModel
     */
    cdlStatus?: DashboardCitationModelCdlStatusEnum;
    /**
     *
     * @type {number}
     * @memberof DashboardCitationModel
     */
    citationId?: number;
    /**
     *
     * @type {PureDate}
     * @memberof DashboardCitationModel
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {string}
     * @memberof DashboardCitationModel
     */
    creationDateUtc?: string;
    /**
     *
     * @type {boolean}
     * @memberof DashboardCitationModel
     */
    dismissedFromContactList?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardCitationModel
     */
    isDeleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof DashboardCitationModel
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardCitationModel
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardCitationModel
     */
    violationCount?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DashboardCitationModelCdlStatusEnum {
    CDLINCOMMERCIALVEHICLE = "CDL_IN_COMMERCIAL_VEHICLE",
    CDLINPERSONALVEHICLE = "CDL_IN_PERSONAL_VEHICLE",
    NOCDL = "NO_CDL"
}
/**
 *
 * @export
 * @interface DashboardCourtModel
 */
export interface DashboardCourtModel {
    /**
     *
     * @type {DashboardAddressModel}
     * @memberof DashboardCourtModel
     */
    address?: DashboardAddressModel;
    /**
     *
     * @type {string}
     * @memberof DashboardCourtModel
     */
    courtName?: string;
}
/**
 *
 * @export
 * @interface DashboardStatusModel
 */
export interface DashboardStatusModel {
    /**
     *
     * @type {string}
     * @memberof DashboardStatusModel
     */
    caseStatus?: DashboardStatusModelCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof DashboardStatusModel
     */
    clientFriendlyDescription?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardStatusModel
     */
    clientFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardStatusModel
     */
    statusCategory?: DashboardStatusModelStatusCategoryEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DashboardStatusModelCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum DashboardStatusModelStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface DefaultClassModel
 */
export interface DefaultClassModel {
    /**
     *
     * @type {string}
     * @memberof DefaultClassModel
     */
    classification?: DefaultClassModelClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof DefaultClassModel
     */
    regionCode?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DefaultClassModelClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface DeleteCitationResponse
 */
export interface DeleteCitationResponse {
    /**
     *
     * @type {CitationDomain}
     * @memberof DeleteCitationResponse
     */
    citation?: CitationDomain;
}
/**
 *
 * @export
 * @interface DeleteLawyerLicenseRequest
 */
export interface DeleteLawyerLicenseRequest {
    /**
     *
     * @type {Array<number>}
     * @memberof DeleteLawyerLicenseRequest
     */
    licenseIds?: Array<number>;
}
/**
 *
 * @export
 * @interface DeleteNotificationByPagesRequest
 */
export interface DeleteNotificationByPagesRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof DeleteNotificationByPagesRequest
     */
    pageTypes?: Array<DeleteNotificationByPagesRequestPageTypesEnum>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DeleteNotificationByPagesRequestPageTypesEnum {
    CASEACTION = "CASE_ACTION",
    CASEMESSAGES = "CASE_MESSAGES",
    CASESTATUS = "CASE_STATUS",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    NEWTICKET = "NEW_TICKET",
    PROFILE = "PROFILE"
}
/**
 *
 * @export
 * @interface DeleteNotificationEventRequest
 */
export interface DeleteNotificationEventRequest {
    /**
     *
     * @type {number}
     * @memberof DeleteNotificationEventRequest
     */
    notificationId?: number;
    /**
     *
     * @type {string}
     * @memberof DeleteNotificationEventRequest
     */
    pageType?: DeleteNotificationEventRequestPageTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DeleteNotificationEventRequestPageTypeEnum {
    CASEACTION = "CASE_ACTION",
    CASEMESSAGES = "CASE_MESSAGES",
    CASESTATUS = "CASE_STATUS",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    NEWTICKET = "NEW_TICKET",
    PROFILE = "PROFILE"
}
/**
 *
 * @export
 * @interface DirectMailContact
 */
export interface DirectMailContact {
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    backTemplateUrlSent?: string;
    /**
     *
     * @type {number}
     * @memberof DirectMailContact
     */
    costInCents?: number;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    estimatedDeliveryDate?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    frontTemplateUrlSent?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    lobReferenceId?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    mailDimensions?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    mailTemplateName?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    mailType?: DirectMailContactMailTypeEnum;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    processedForDeliveryDate?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailContact
     */
    trackingStatus?: DirectMailContactTrackingStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DirectMailContactMailTypeEnum {
    CHECK = "CHECK",
    LETTER = "LETTER",
    POSTCARD = "POST_CARD"
}
/**
    * @export
    * @enum {string}
    */
export declare enum DirectMailContactTrackingStatusEnum {
    CREATED = "CREATED",
    INLOCALAREA = "IN_LOCAL_AREA",
    INTRANSIT = "IN_TRANSIT",
    PROCESSEDFORDELIVERY = "PROCESSED_FOR_DELIVERY",
    RETURNEDTOSENDER = "RETURNED_TO_SENDER",
    REROUTED = "RE_ROUTED"
}
/**
 *
 * @export
 * @interface DirectMailContactResponse
 */
export interface DirectMailContactResponse {
    /**
     *
     * @type {Array<DirectMailContact>}
     * @memberof DirectMailContactResponse
     */
    sentMail?: Array<DirectMailContact>;
}
/**
 *
 * @export
 * @interface DirectMailGetRequest
 */
export interface DirectMailGetRequest {
    /**
     *
     * @type {AddressDomain}
     * @memberof DirectMailGetRequest
     */
    toAddress?: AddressDomain;
    /**
     *
     * @type {string}
     * @memberof DirectMailGetRequest
     */
    userId?: string;
}
/**
 *
 * @export
 * @interface DirectMailSendRequest
 */
export interface DirectMailSendRequest {
    /**
     *
     * @type {string}
     * @memberof DirectMailSendRequest
     */
    mailTemplateType?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailSendRequest
     */
    reconcileId?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailSendRequest
     */
    reconcileType?: DirectMailSendRequestReconcileTypeEnum;
    /**
     *
     * @type {AddressDomain}
     * @memberof DirectMailSendRequest
     */
    toAddress?: AddressDomain;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DirectMailSendRequestReconcileTypeEnum {
    OTRCITATIONID = "OTR_CITATION_ID",
    OTRLAWFIRMID = "OTR_LAWFIRM_ID",
    TICKETREFERENCEID = "TICKET_REFERENCE_ID"
}
/**
 *
 * @export
 * @interface DirectMailTemplate
 */
export interface DirectMailTemplate {
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplate
     */
    mailDimensions?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplate
     */
    mailTemplateBackUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplate
     */
    mailTemplateFrontUrl?: string;
    /**
     *
     * @type {number}
     * @memberof DirectMailTemplate
     */
    mailTemplateId?: number;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplate
     */
    mailTemplateName?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplate
     */
    mailType?: DirectMailTemplateMailTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DirectMailTemplateMailTypeEnum {
    CHECK = "CHECK",
    LETTER = "LETTER",
    POSTCARD = "POST_CARD"
}
/**
 *
 * @export
 * @interface DirectMailTemplateResponse
 */
export interface DirectMailTemplateResponse {
    /**
     *
     * @type {Array<DirectMailTemplate>}
     * @memberof DirectMailTemplateResponse
     */
    templates?: Array<DirectMailTemplate>;
}
/**
 *
 * @export
 * @interface DirectMailTemplateToAdd
 */
export interface DirectMailTemplateToAdd {
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplateToAdd
     */
    fileNamePrefix?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplateToAdd
     */
    mailDimensions?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplateToAdd
     */
    mailType?: DirectMailTemplateToAddMailTypeEnum;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplateToAdd
     */
    templateBackHtml?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplateToAdd
     */
    templateFrontHtml?: string;
    /**
     *
     * @type {string}
     * @memberof DirectMailTemplateToAdd
     */
    templateName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DirectMailTemplateToAddMailTypeEnum {
    CHECK = "CHECK",
    LETTER = "LETTER",
    POSTCARD = "POST_CARD"
}
/**
 *
 * @export
 * @interface DismissCitationsFromContactListRequest
 */
export interface DismissCitationsFromContactListRequest {
    /**
     *
     * @type {Array<number>}
     * @memberof DismissCitationsFromContactListRequest
     */
    citationIdList?: Array<number>;
}
/**
 *
 * @export
 * @interface DismissPhoneLeadRequest
 */
export interface DismissPhoneLeadRequest {
    /**
     *
     * @type {string}
     * @memberof DismissPhoneLeadRequest
     */
    entityType?: DismissPhoneLeadRequestEntityTypeEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof DismissPhoneLeadRequest
     */
    referenceIdList?: Array<string>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DismissPhoneLeadRequestEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
 *
 * @export
 * @interface DocumentDecisionRequest
 */
export interface DocumentDecisionRequest {
    /**
     *
     * @type {boolean}
     * @memberof DocumentDecisionRequest
     */
    acknowledged?: boolean;
    /**
     *
     * @type {string}
     * @memberof DocumentDecisionRequest
     */
    caseId?: string;
}
/**
 *
 * @export
 * @interface DripRemoveRequest
 */
export interface DripRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof DripRemoveRequest
     */
    dripAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof DripRemoveRequest
     */
    dripAction?: DripRemoveRequestDripActionEnum;
    /**
     *
     * @type {string}
     * @memberof DripRemoveRequest
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof DripRemoveRequest
     */
    ticketIssueId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DripRemoveRequestDripActionEnum {
    DELETE = "DELETE",
    UNSUBSCRIBE = "UNSUBSCRIBE"
}
/**
 *
 * @export
 * @interface DripWebhookData
 */
export interface DripWebhookData {
    /**
     *
     * @type {string}
     * @memberof DripWebhookData
     */
    account_id?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof DripWebhookData
     */
    properties?: {
        [key: string]: string;
    };
    /**
     *
     * @type {Subscriber}
     * @memberof DripWebhookData
     */
    subscriber?: Subscriber;
}
/**
 *
 * @export
 * @interface DripWebhookEvent
 */
export interface DripWebhookEvent {
    /**
     *
     * @type {DripWebhookData}
     * @memberof DripWebhookEvent
     */
    data?: DripWebhookData;
    /**
     *
     * @type {string}
     * @memberof DripWebhookEvent
     */
    event?: string;
    /**
     *
     * @type {string}
     * @memberof DripWebhookEvent
     */
    occurred_at?: string;
}
/**
 *
 * @export
 * @interface Duration
 */
export interface Duration {
    /**
     *
     * @type {number}
     * @memberof Duration
     */
    nano?: number;
    /**
     *
     * @type {boolean}
     * @memberof Duration
     */
    negative?: boolean;
    /**
     *
     * @type {number}
     * @memberof Duration
     */
    seconds?: number;
    /**
     *
     * @type {Array<TemporalUnit>}
     * @memberof Duration
     */
    units?: Array<TemporalUnit>;
    /**
     *
     * @type {boolean}
     * @memberof Duration
     */
    zero?: boolean;
}
/**
 *
 * @export
 * @interface EditConversationMessageRequest
 */
export interface EditConversationMessageRequest {
    /**
     *
     * @type {string}
     * @memberof EditConversationMessageRequest
     */
    messageBody?: string;
}
/**
 *
 * @export
 * @interface EnableViolationModel
 */
export interface EnableViolationModel {
    /**
     *
     * @type {string}
     * @memberof EnableViolationModel
     */
    violationClass?: EnableViolationModelViolationClassEnum;
    /**
     *
     * @type {number}
     * @memberof EnableViolationModel
     */
    violationId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum EnableViolationModelViolationClassEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface EnableViolationResponseModel
 */
export interface EnableViolationResponseModel {
    /**
     *
     * @type {number}
     * @memberof EnableViolationResponseModel
     */
    courtId?: number;
}
/**
 *
 * @export
 * @interface EnableViolationsForLawfirmRequest
 */
export interface EnableViolationsForLawfirmRequest {
    /**
     *
     * @type {Array<EnableViolationModel>}
     * @memberof EnableViolationsForLawfirmRequest
     */
    models?: Array<EnableViolationModel>;
}
/**
 *
 * @export
 * @interface EnableViolationsForLawfirmResponse
 */
export interface EnableViolationsForLawfirmResponse {
    /**
     *
     * @type {Array<EnableViolationResponseModel>}
     * @memberof EnableViolationsForLawfirmResponse
     */
    models?: Array<EnableViolationResponseModel>;
}
/**
 *
 * @export
 * @interface EstimateInsuranceSavingsRequest
 */
export interface EstimateInsuranceSavingsRequest {
    /**
     *
     * @type {number}
     * @memberof EstimateInsuranceSavingsRequest
     */
    monthlyInsurancePremiumInCents?: number;
    /**
     *
     * @type {string}
     * @memberof EstimateInsuranceSavingsRequest
     */
    state?: EstimateInsuranceSavingsRequestStateEnum;
    /**
     *
     * @type {number}
     * @memberof EstimateInsuranceSavingsRequest
     */
    ticketFineInCents?: number;
    /**
     *
     * @type {number}
     * @memberof EstimateInsuranceSavingsRequest
     */
    trafficViolationTypeId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum EstimateInsuranceSavingsRequestStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface EstimateInsuranceSavingsResponse
 */
export interface EstimateInsuranceSavingsResponse {
    /**
     *
     * @type {number}
     * @memberof EstimateInsuranceSavingsResponse
     */
    monthlyExtraInsuranceCostInCents?: number;
    /**
     *
     * @type {number}
     * @memberof EstimateInsuranceSavingsResponse
     */
    totalCostOfTicketInCents?: number;
    /**
     *
     * @type {number}
     * @memberof EstimateInsuranceSavingsResponse
     */
    totalExtraInsuranceCostInCents?: number;
}
/**
 *
 * @export
 * @interface FeedbackDomain
 */
export interface FeedbackDomain {
    /**
     *
     * @type {string}
     * @memberof FeedbackDomain
     */
    appVersion?: string;
    /**
     *
     * @type {string}
     * @memberof FeedbackDomain
     */
    body?: string;
    /**
     *
     * @type {string}
     * @memberof FeedbackDomain
     */
    device?: string;
    /**
     *
     * @type {string}
     * @memberof FeedbackDomain
     */
    subject?: string;
}
/**
 *
 * @export
 * @interface FinancialTransaction
 */
export interface FinancialTransaction {
    /**
     *
     * @type {number}
     * @memberof FinancialTransaction
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    caseId?: string;
    /**
     *
     * @type {boolean}
     * @memberof FinancialTransaction
     */
    isOverdue?: boolean;
    /**
     *
     * @type {number}
     * @memberof FinancialTransaction
     */
    otrAmount?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof FinancialTransaction
     */
    runAtDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof FinancialTransaction
     */
    stripeAmount?: number;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    taskStatus?: FinancialTransactionTaskStatusEnum;
    /**
     *
     * @type {TimestampRes}
     * @memberof FinancialTransaction
     */
    transactionDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    transactionMethod?: FinancialTransactionTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    transactionReferenceId?: string;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    transactionType?: FinancialTransactionTransactionTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    userFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof FinancialTransaction
     */
    userLastName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FinancialTransactionTaskStatusEnum {
    CANCELLED = "CANCELLED",
    COMPLETE = "COMPLETE",
    ERROR = "ERROR",
    INPROGRESS = "IN_PROGRESS",
    NOOPERATION = "NO_OPERATION",
    QUEUED = "QUEUED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum FinancialTransactionTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum FinancialTransactionTransactionTypeEnum {
    FEE = "FEE",
    FEEREFUND = "FEE_REFUND",
    TRANSFER = "TRANSFER",
    TRANSFERREVERSAL = "TRANSFER_REVERSAL"
}
/**
 *
 * @export
 * @interface FindChargeDisputesResponse
 */
export interface FindChargeDisputesResponse {
    /**
     *
     * @type {Array<StripeDisputeDomain>}
     * @memberof FindChargeDisputesResponse
     */
    disputes?: Array<StripeDisputeDomain>;
}
/**
 *
 * @export
 * @interface FindCourtsWithNoCoverageResponse
 */
export interface FindCourtsWithNoCoverageResponse {
    /**
     *
     * @type {Array<CourtDomainRes>}
     * @memberof FindCourtsWithNoCoverageResponse
     */
    courtsWithNoCoverage?: Array<CourtDomainRes>;
    /**
     *
     * @type {number}
     * @memberof FindCourtsWithNoCoverageResponse
     */
    numRecords?: number;
}
/**
 *
 * @export
 * @interface FindDisputesRequest
 */
export interface FindDisputesRequest {
    /**
     *
     * @type {string}
     * @memberof FindDisputesRequest
     */
    disputeStatus?: string;
    /**
     *
     * @type {number}
     * @memberof FindDisputesRequest
     */
    maxResults?: number;
}
/**
 *
 * @export
 * @interface FindMatchingUser
 */
export interface FindMatchingUser {
    /**
     *
     * @type {UserBookingsDomain}
     * @memberof FindMatchingUser
     */
    bookings?: UserBookingsDomain;
    /**
     *
     * @type {Timestamp}
     * @memberof FindMatchingUser
     */
    creationDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUser
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUser
     */
    firstname?: string;
    /**
     *
     * @type {boolean}
     * @memberof FindMatchingUser
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FindMatchingUser
     */
    isEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FindMatchingUser
     */
    isTestUser?: boolean;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUser
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUser
     */
    loginProvider?: FindMatchingUserLoginProviderEnum;
    /**
     *
     * @type {Array<UserRoleDomain>}
     * @memberof FindMatchingUser
     */
    roles?: Array<UserRoleDomain>;
    /**
     *
     * @type {boolean}
     * @memberof FindMatchingUser
     */
    unsubscribed?: boolean;
    /**
     *
     * @type {number}
     * @memberof FindMatchingUser
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FindMatchingUserLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
 *
 * @export
 * @interface FindMatchingUsersRequest
 */
export interface FindMatchingUsersRequest {
    /**
     *
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    firstName?: string;
    /**
     *
     * @type {boolean}
     * @memberof FindMatchingUsersRequest
     */
    isTestUser?: boolean;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    phoneNumber?: string;
}
/**
 *
 * @export
 * @interface FindMatchingUsersResponse
 */
export interface FindMatchingUsersResponse {
    /**
     *
     * @type {Array<FindMatchingUser>}
     * @memberof FindMatchingUsersResponse
     */
    users?: Array<FindMatchingUser>;
}
/**
 *
 * @export
 * @interface FindsCourtsResponse
 */
export interface FindsCourtsResponse {
    /**
     *
     * @type {Array<GetCourtsInnerResponse>}
     * @memberof FindsCourtsResponse
     */
    courts?: Array<GetCourtsInnerResponse>;
    /**
     *
     * @type {number}
     * @memberof FindsCourtsResponse
     */
    numRecords?: number;
}
/**
 *
 * @export
 * @interface FreshDeskConversation
 */
export interface FreshDeskConversation {
    /**
     *
     * @type {string}
     * @memberof FreshDeskConversation
     */
    created_at?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskConversation
     */
    from_email?: string;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskConversation
     */
    incoming?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskConversation
     */
    _private?: boolean;
    /**
     *
     * @type {number}
     * @memberof FreshDeskConversation
     */
    ticket_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskConversation
     */
    user_id?: number;
}
/**
 *
 * @export
 * @interface FreshDeskRequester
 */
export interface FreshDeskRequester {
    /**
     *
     * @type {string}
     * @memberof FreshDeskRequester
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskRequester
     */
    name?: string;
}
/**
 *
 * @export
 * @interface FreshDeskTicket
 */
export interface FreshDeskTicket {
    /**
     *
     * @type {Array<FreshdeskAttachment>}
     * @memberof FreshDeskTicket
     */
    attachments?: Array<FreshdeskAttachment>;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicket
     */
    cc_emails?: Array<string>;
    /**
     *
     * @type {Array<FreshDeskConversation>}
     * @memberof FreshDeskTicket
     */
    conversation?: Array<FreshDeskConversation>;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    created_at?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof FreshDeskTicket
     */
    custom_fields?: {
        [key: string]: string;
    };
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicket
     */
    deleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    description_text?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    due_by?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    fr_due_by?: string;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicket
     */
    fr_escalated?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicket
     */
    fwd_emails?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    group_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicket
     */
    is_escalated?: boolean;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    phone?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    priority?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    priorityType?: FreshDeskTicketPriorityTypeEnum;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    product_id?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicket
     */
    reply_cc_emails?: Array<string>;
    /**
     *
     * @type {FreshDeskRequester}
     * @memberof FreshDeskTicket
     */
    requester?: FreshDeskRequester;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    requesterAgentName?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    requester_id?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    responderAgentName?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    responder_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    source?: number;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicket
     */
    spam?: boolean;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicket
     */
    status?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    statusType?: FreshDeskTicketStatusTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    subject?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicket
     */
    tags?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicket
     */
    to_emails?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    unique_external_id?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicket
     */
    updated_at?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshDeskTicketPriorityTypeEnum {
    HIGH = "HIGH",
    LOW = "LOW",
    MEDIUM = "MEDIUM",
    UNKNOWN = "UNKNOWN",
    URGENT = "URGENT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshDeskTicketStatusTypeEnum {
    CLOSED = "CLOSED",
    OPEN = "OPEN",
    PENDING = "PENDING",
    PENDINGONEWEEK = "PENDING_ONE_WEEK",
    PENDINGTWODAYS = "PENDING_TWO_DAYS",
    QUEUEDFORAUTOMATION = "QUEUED_FOR_AUTOMATION",
    RESOLVED = "RESOLVED",
    UNKNOWN = "UNKNOWN",
    WAITINGONATTORNEY = "WAITING_ON_ATTORNEY",
    WAITINGONCUSTOMER = "WAITING_ON_CUSTOMER",
    WAITINGONOTR = "WAITING_ON_OTR",
    WAITINGONTHIRDPARTY = "WAITING_ON_THIRD_PARTY"
}
/**
 *
 * @export
 * @interface FreshDeskTicketReq
 */
export interface FreshDeskTicketReq {
    /**
     *
     * @type {Array<FreshdeskAttachmentReq>}
     * @memberof FreshDeskTicketReq
     */
    attachments?: Array<FreshdeskAttachmentReq>;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketReq
     */
    cc_emails?: Array<string>;
    /**
     *
     * @type {Array<FreshDeskConversation>}
     * @memberof FreshDeskTicketReq
     */
    conversation?: Array<FreshDeskConversation>;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    created_at?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof FreshDeskTicketReq
     */
    custom_fields?: {
        [key: string]: string;
    };
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketReq
     */
    deleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    description_text?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    due_by?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    fr_due_by?: string;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketReq
     */
    fr_escalated?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketReq
     */
    fwd_emails?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    group_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketReq
     */
    incoming?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketReq
     */
    is_escalated?: boolean;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    phone?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    priority?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    priorityType?: FreshDeskTicketReqPriorityTypeEnum;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    product_id?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketReq
     */
    reply_cc_emails?: Array<string>;
    /**
     *
     * @type {FreshDeskRequester}
     * @memberof FreshDeskTicketReq
     */
    requester?: FreshDeskRequester;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    requesterAgentName?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    requester_id?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    responderAgentName?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    responder_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    source?: number;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketReq
     */
    spam?: boolean;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketReq
     */
    status?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    statusType?: FreshDeskTicketReqStatusTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    subject?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketReq
     */
    tags?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketReq
     */
    to_emails?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    unique_external_id?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketReq
     */
    updated_at?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshDeskTicketReqPriorityTypeEnum {
    HIGH = "HIGH",
    LOW = "LOW",
    MEDIUM = "MEDIUM",
    UNKNOWN = "UNKNOWN",
    URGENT = "URGENT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshDeskTicketReqStatusTypeEnum {
    CLOSED = "CLOSED",
    OPEN = "OPEN",
    PENDING = "PENDING",
    PENDINGONEWEEK = "PENDING_ONE_WEEK",
    PENDINGTWODAYS = "PENDING_TWO_DAYS",
    QUEUEDFORAUTOMATION = "QUEUED_FOR_AUTOMATION",
    RESOLVED = "RESOLVED",
    UNKNOWN = "UNKNOWN",
    WAITINGONATTORNEY = "WAITING_ON_ATTORNEY",
    WAITINGONCUSTOMER = "WAITING_ON_CUSTOMER",
    WAITINGONOTR = "WAITING_ON_OTR",
    WAITINGONTHIRDPARTY = "WAITING_ON_THIRD_PARTY"
}
/**
 *
 * @export
 * @interface FreshDeskTicketRes
 */
export interface FreshDeskTicketRes {
    /**
     *
     * @type {Array<FreshdeskAttachmentRes>}
     * @memberof FreshDeskTicketRes
     */
    attachments?: Array<FreshdeskAttachmentRes>;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketRes
     */
    cc_emails?: Array<string>;
    /**
     *
     * @type {Array<FreshDeskConversation>}
     * @memberof FreshDeskTicketRes
     */
    conversation?: Array<FreshDeskConversation>;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    created_at?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof FreshDeskTicketRes
     */
    custom_fields?: {
        [key: string]: string;
    };
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketRes
     */
    deleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    description_text?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    due_by?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    fr_due_by?: string;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketRes
     */
    fr_escalated?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketRes
     */
    fwd_emails?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    group_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketRes
     */
    is_escalated?: boolean;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    phone?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    priority?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    priorityType?: FreshDeskTicketResPriorityTypeEnum;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    product_id?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketRes
     */
    reply_cc_emails?: Array<string>;
    /**
     *
     * @type {FreshDeskRequester}
     * @memberof FreshDeskTicketRes
     */
    requester?: FreshDeskRequester;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    requesterAgentName?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    requester_id?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    responderAgentName?: string;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    responder_id?: number;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    source?: number;
    /**
     *
     * @type {boolean}
     * @memberof FreshDeskTicketRes
     */
    spam?: boolean;
    /**
     *
     * @type {number}
     * @memberof FreshDeskTicketRes
     */
    status?: number;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    statusType?: FreshDeskTicketResStatusTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    subject?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketRes
     */
    tags?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof FreshDeskTicketRes
     */
    to_emails?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    unique_external_id?: string;
    /**
     *
     * @type {string}
     * @memberof FreshDeskTicketRes
     */
    updated_at?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshDeskTicketResPriorityTypeEnum {
    HIGH = "HIGH",
    LOW = "LOW",
    MEDIUM = "MEDIUM",
    UNKNOWN = "UNKNOWN",
    URGENT = "URGENT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshDeskTicketResStatusTypeEnum {
    CLOSED = "CLOSED",
    OPEN = "OPEN",
    PENDING = "PENDING",
    PENDINGONEWEEK = "PENDING_ONE_WEEK",
    PENDINGTWODAYS = "PENDING_TWO_DAYS",
    QUEUEDFORAUTOMATION = "QUEUED_FOR_AUTOMATION",
    RESOLVED = "RESOLVED",
    UNKNOWN = "UNKNOWN",
    WAITINGONATTORNEY = "WAITING_ON_ATTORNEY",
    WAITINGONCUSTOMER = "WAITING_ON_CUSTOMER",
    WAITINGONOTR = "WAITING_ON_OTR",
    WAITINGONTHIRDPARTY = "WAITING_ON_THIRD_PARTY"
}
/**
 *
 * @export
 * @interface FreshdeskAttachment
 */
export interface FreshdeskAttachment {
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachment
     */
    attachment_url?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachment
     */
    content_type?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof FreshdeskAttachment
     */
    created_at?: Timestamp;
    /**
     *
     * @type {number}
     * @memberof FreshdeskAttachment
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachment
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof FreshdeskAttachment
     */
    size?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof FreshdeskAttachment
     */
    updated_at?: Timestamp;
}
/**
 *
 * @export
 * @interface FreshdeskAttachmentReq
 */
export interface FreshdeskAttachmentReq {
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachmentReq
     */
    attachment_url?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachmentReq
     */
    content_type?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof FreshdeskAttachmentReq
     */
    created_at?: TimestampReq;
    /**
     *
     * @type {number}
     * @memberof FreshdeskAttachmentReq
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachmentReq
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof FreshdeskAttachmentReq
     */
    size?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof FreshdeskAttachmentReq
     */
    updated_at?: TimestampReq;
}
/**
 *
 * @export
 * @interface FreshdeskAttachmentRes
 */
export interface FreshdeskAttachmentRes {
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachmentRes
     */
    attachment_url?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachmentRes
     */
    content_type?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof FreshdeskAttachmentRes
     */
    created_at?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof FreshdeskAttachmentRes
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof FreshdeskAttachmentRes
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof FreshdeskAttachmentRes
     */
    size?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof FreshdeskAttachmentRes
     */
    updated_at?: TimestampRes;
}
/**
 *
 * @export
 * @interface FreshdeskTicketReferenceDomain
 */
export interface FreshdeskTicketReferenceDomain {
    /**
     *
     * @type {number}
     * @memberof FreshdeskTicketReferenceDomain
     */
    freshdeskTicketId?: number;
    /**
     *
     * @type {string}
     * @memberof FreshdeskTicketReferenceDomain
     */
    referenceEntityId?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskTicketReferenceDomain
     */
    referenceEntityType?: FreshdeskTicketReferenceDomainReferenceEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FreshdeskTicketReferenceDomain
     */
    ticketType?: FreshdeskTicketReferenceDomainTicketTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshdeskTicketReferenceDomainReferenceEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum FreshdeskTicketReferenceDomainTicketTypeEnum {
    CARDPROBLEM = "CARD_PROBLEM",
    POSTBOOKINGPAYMENTFAILURE = "POST_BOOKING_PAYMENT_FAILURE",
    PREBOOKINGPAYMENTFAILURE = "PRE_BOOKING_PAYMENT_FAILURE"
}
/**
 *
 * @export
 * @interface FreshdeskWebhookRequest
 */
export interface FreshdeskWebhookRequest {
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    agentEmail?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    mobile?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    requesterEmail?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    requesterFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    status?: string;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    subject?: string;
    /**
     *
     * @type {number}
     * @memberof FreshdeskWebhookRequest
     */
    ticketId?: number;
    /**
     *
     * @type {string}
     * @memberof FreshdeskWebhookRequest
     */
    ticketType?: string;
}
/**
 *
 * @export
 * @interface FuturePayment
 */
export interface FuturePayment {
    /**
     *
     * @type {number}
     * @memberof FuturePayment
     */
    amountDueInCents?: number;
    /**
     *
     * @type {string}
     * @memberof FuturePayment
     */
    dueDate?: string;
    /**
     *
     * @type {string}
     * @memberof FuturePayment
     */
    paymentStatus?: FuturePaymentPaymentStatusEnum;
    /**
     *
     * @type {string}
     * @memberof FuturePayment
     */
    updatedDueDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum FuturePaymentPaymentStatusEnum {
    AUTHORIZED = "AUTHORIZED",
    CANCELLED = "CANCELLED",
    ERROR = "ERROR",
    EXPIRED = "EXPIRED",
    PAID = "PAID",
    PENDINGLAWFIRMACCEPTANCE = "PENDING_LAWFIRM_ACCEPTANCE",
    REFUNDED = "REFUNDED",
    SCHEDULED = "SCHEDULED",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface GenerateTemplateRequest
 */
export interface GenerateTemplateRequest {
    /**
     *
     * @type {string}
     * @memberof GenerateTemplateRequest
     */
    caseId?: string;
    /**
     *
     * @type {number}
     * @memberof GenerateTemplateRequest
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof GenerateTemplateRequest
     */
    citationViolation?: string;
    /**
     *
     * @type {string}
     * @memberof GenerateTemplateRequest
     */
    emailTemplateId?: GenerateTemplateRequestEmailTemplateIdEnum;
    /**
     *
     * @type {number}
     * @memberof GenerateTemplateRequest
     */
    recipientUserId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GenerateTemplateRequestEmailTemplateIdEnum {
    AFTERNOONHELLO2 = "AFTERNOON_HELLO_2",
    ATTICUSATTORNEYCONTACT1 = "ATTICUS_ATTORNEY_CONTACT_1",
    CAMERATICKETNMV = "CAMERA_TICKET_NMV",
    CASECANCELLEDBYUSER = "CASE_CANCELLED_BY_USER",
    CASECANCELLEDDUPLICATE = "CASE_CANCELLED_DUPLICATE",
    CASECANCELLEDNMV = "CASE_CANCELLED_NMV",
    CASECANCELLEDNONPAYMENT = "CASE_CANCELLED_NON_PAYMENT",
    CASECANCELLEDNOLAWFIRM = "CASE_CANCELLED_NO_LAWFIRM",
    CASECANCELLEDOVERDUE = "CASE_CANCELLED_OVERDUE",
    CASECANCELLEDTOOSHORTNOTICE = "CASE_CANCELLED_TOO_SHORT_NOTICE",
    CASUALFIRSTV1 = "CASUAL_FIRST_V1",
    CASUALSECONDV1 = "CASUAL_SECOND_V1",
    FRIDAYINTRO = "FRIDAY_INTRO",
    INVALIDIMAGEUPLOAD1 = "INVALID_IMAGE_UPLOAD_1",
    LAWFIRMCONTACT10V1 = "LAWFIRM_CONTACT_10_V1",
    LAWFIRMCONTACT1V1 = "LAWFIRM_CONTACT_1_V1",
    LAWFIRMCONTACT2V1 = "LAWFIRM_CONTACT_2_V1",
    LAWFIRMCONTACT3V1 = "LAWFIRM_CONTACT_3_V1",
    LAWFIRMCONTACT4V1 = "LAWFIRM_CONTACT_4_V1",
    LAWFIRMCONTACT5V1 = "LAWFIRM_CONTACT_5_V1",
    LAWFIRMCONTACT6V1 = "LAWFIRM_CONTACT_6_V1",
    LAWFIRMCONTACT7V1 = "LAWFIRM_CONTACT_7_V1",
    LAWFIRMCONTACT8V1 = "LAWFIRM_CONTACT_8_V1",
    LAWFIRMCONTACT9V1 = "LAWFIRM_CONTACT_9_V1",
    LAWYERPOSTCOURTREMINDER = "LAWYER_POST_COURT_REMINDER",
    NOCOVERAGEAVAILABLE = "NO_COVERAGE_AVAILABLE",
    NOCOVERAGEAVAILABLEMISSINGCOURT = "NO_COVERAGE_AVAILABLE_MISSING_COURT",
    PARKINGTICKET = "PARKING_TICKET",
    POSTWIN = "POST_WIN",
    POSTWINLASTASK = "POST_WIN_LAST_ASK",
    POSTWINV2 = "POST_WIN_V2",
    SUNDAYAFTERNOONHELLO = "SUNDAY_AFTERNOON_HELLO",
    TICKETDUEWA = "TICKET_DUE_WA",
    TICKETEVALWITHCITATION = "TICKET_EVAL_WITH_CITATION",
    TICKETEVALWITHCITATION2NDFOLLOWUP = "TICKET_EVAL_WITH_CITATION_2ND_FOLLOW_UP",
    TICKETEVALWITHCITATIONCLOSEOUT = "TICKET_EVAL_WITH_CITATION_CLOSE_OUT"
}
/**
 *
 * @export
 * @interface GenericAdminListRequest
 */
export interface GenericAdminListRequest {
    /**
     *
     * @type {number}
     * @memberof GenericAdminListRequest
     */
    trailingDays?: number;
}
/**
 *
 * @export
 * @interface GeoRatesRequest
 */
export interface GeoRatesRequest {
    /**
     *
     * @type {string}
     * @memberof GeoRatesRequest
     */
    cdlStatus?: GeoRatesRequestCdlStatusEnum;
    /**
     *
     * @type {string}
     * @memberof GeoRatesRequest
     */
    courtDate?: string;
    /**
     *
     * @type {string}
     * @memberof GeoRatesRequest
     */
    courtId?: string;
    /**
     *
     * @type {number}
     * @memberof GeoRatesRequest
     */
    violationCount?: number;
    /**
     *
     * @type {Array<ViolationInputRequest>}
     * @memberof GeoRatesRequest
     */
    violations?: Array<ViolationInputRequest>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GeoRatesRequestCdlStatusEnum {
    CDLINCOMMERCIALVEHICLE = "CDL_IN_COMMERCIAL_VEHICLE",
    CDLINPERSONALVEHICLE = "CDL_IN_PERSONAL_VEHICLE",
    NOCDL = "NO_CDL"
}
/**
 *
 * @export
 * @interface GetActivityFeedResponse
 */
export interface GetActivityFeedResponse {
    /**
     *
     * @type {Array<ActivityFeedModel>}
     * @memberof GetActivityFeedResponse
     */
    activity?: Array<ActivityFeedModel>;
    /**
     *
     * @type {CursorModel}
     * @memberof GetActivityFeedResponse
     */
    cursor?: CursorModel;
}
/**
 *
 * @export
 * @interface GetAddressInnerResponse
 */
export interface GetAddressInnerResponse {
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    countyName?: string;
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof GetAddressInnerResponse
     */
    timeZoneName?: string;
}
/**
 *
 * @export
 * @interface GetAppConfigResponse
 */
export interface GetAppConfigResponse {
    /**
     *
     * @type {string}
     * @memberof GetAppConfigResponse
     */
    androidAppVersion?: string;
    /**
     *
     * @type {string}
     * @memberof GetAppConfigResponse
     */
    iosAppVersion?: string;
}
/**
 *
 * @export
 * @interface GetAppearanceAttorneysResponse
 */
export interface GetAppearanceAttorneysResponse {
    /**
     *
     * @type {Array<AppearanceAttorneyDomain>}
     * @memberof GetAppearanceAttorneysResponse
     */
    attorneys?: Array<AppearanceAttorneyDomain>;
}
/**
 *
 * @export
 * @interface GetAvailablePaymentPlansResponse
 */
export interface GetAvailablePaymentPlansResponse {
    /**
     *
     * @type {Array<AvailablePaymentPlan>}
     * @memberof GetAvailablePaymentPlansResponse
     */
    plans?: Array<AvailablePaymentPlan>;
}
/**
 *
 * @export
 * @interface GetBookingsRequest
 */
export interface GetBookingsRequest {
    /**
     *
     * @type {string}
     * @memberof GetBookingsRequest
     */
    endDate?: string;
    /**
     *
     * @type {string}
     * @memberof GetBookingsRequest
     */
    startDate?: string;
    /**
     *
     * @type {string}
     * @memberof GetBookingsRequest
     */
    timeZoneId?: string;
}
/**
 *
 * @export
 * @interface GetBookingsResponse
 */
export interface GetBookingsResponse {
    /**
     *
     * @type {Array<Booking>}
     * @memberof GetBookingsResponse
     */
    bookings?: Array<Booking>;
    /**
     *
     * @type {Array<LawfirmBookingSummary>}
     * @memberof GetBookingsResponse
     */
    bookingsByLawfirm?: Array<LawfirmBookingSummary>;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof GetBookingsResponse
     */
    bookingsByStatus?: {
        [key: string]: number;
    };
    /**
     *
     * @type {Array<BookingCancelation>}
     * @memberof GetBookingsResponse
     */
    cancelations?: Array<BookingCancelation>;
    /**
     *
     * @type {CaseBookingsStats}
     * @memberof GetBookingsResponse
     */
    stats?: CaseBookingsStats;
}
/**
 *
 * @export
 * @interface GetCaseActionResponse
 */
export interface GetCaseActionResponse {
    /**
     *
     * @type {Array<CaseActionDomainRes>}
     * @memberof GetCaseActionResponse
     */
    actions?: Array<CaseActionDomainRes>;
}
/**
 *
 * @export
 * @interface GetCaseActionTimelineResponse
 */
export interface GetCaseActionTimelineResponse {
    /**
     *
     * @type {Array<CaseActionDomainRes>}
     * @memberof GetCaseActionTimelineResponse
     */
    actionsNotTaken?: Array<CaseActionDomainRes>;
    /**
     *
     * @type {Array<CaseActionDomainRes>}
     * @memberof GetCaseActionTimelineResponse
     */
    actionsTaken?: Array<CaseActionDomainRes>;
}
/**
 *
 * @export
 * @interface GetCaseActionTypesResponse
 */
export interface GetCaseActionTypesResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof GetCaseActionTypesResponse
     */
    caseActionTypes?: Array<GetCaseActionTypesResponseCaseActionTypesEnum>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetCaseActionTypesResponseCaseActionTypesEnum {
    CITATIONDATAEXTRACTED = "CITATION_DATA_EXTRACTED",
    COURTDATEREMOVED = "COURT_DATE_REMOVED",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    DISCOVERYRECEIVED = "DISCOVERY_RECEIVED",
    DISCOVERYREQUESTED = "DISCOVERY_REQUESTED",
    FAILEDPAYMENTATTEMPT = "FAILED_PAYMENT_ATTEMPT",
    NOTICEOFAPPEARANCEFILED = "NOTICE_OF_APPEARANCE_FILED",
    OTHER = "OTHER",
    REVIEWEDBYLAWFIRM = "REVIEWED_BY_LAWFIRM",
    TICKETMAILEDTOCOURT = "TICKET_MAILED_TO_COURT"
}
/**
 *
 * @export
 * @interface GetCaseCostsAttorneyResponse
 */
export interface GetCaseCostsAttorneyResponse {
    /**
     *
     * @type {Array<FuturePayment>}
     * @memberof GetCaseCostsAttorneyResponse
     */
    futurePayments?: Array<FuturePayment>;
    /**
     *
     * @type {number}
     * @memberof GetCaseCostsAttorneyResponse
     */
    lawfirmAssumedCost?: number;
    /**
     *
     * @type {number}
     * @memberof GetCaseCostsAttorneyResponse
     */
    lawfirmEarningsForCase?: number;
    /**
     *
     * @type {Array<LineItem>}
     * @memberof GetCaseCostsAttorneyResponse
     */
    lineItems?: Array<LineItem>;
    /**
     *
     * @type {number}
     * @memberof GetCaseCostsAttorneyResponse
     */
    otrCommissionChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof GetCaseCostsAttorneyResponse
     */
    paymentProcessingFeeChargedToLawfirm?: number;
}
/**
 *
 * @export
 * @interface GetCaseDocumentResponse
 */
export interface GetCaseDocumentResponse {
    /**
     *
     * @type {Array<LawfirmCaseDocument>}
     * @memberof GetCaseDocumentResponse
     */
    documents?: Array<LawfirmCaseDocument>;
}
/**
 *
 * @export
 * @interface GetCaseFromCitationResponse
 */
export interface GetCaseFromCitationResponse {
    /**
     *
     * @type {CaseDomain}
     * @memberof GetCaseFromCitationResponse
     */
    theCase?: CaseDomain;
}
/**
 *
 * @export
 * @interface GetCaseMessagesResponse
 */
export interface GetCaseMessagesResponse {
    /**
     *
     * @type {Array<CaseMessageDomain>}
     * @memberof GetCaseMessagesResponse
     */
    messages?: Array<CaseMessageDomain>;
    /**
     *
     * @type {number}
     * @memberof GetCaseMessagesResponse
     */
    totalRecords?: number;
}
/**
 *
 * @export
 * @interface GetCaseNotesResponse
 */
export interface GetCaseNotesResponse {
    /**
     *
     * @type {CaseNotesDomain}
     * @memberof GetCaseNotesResponse
     */
    caseNotes?: CaseNotesDomain;
}
/**
 *
 * @export
 * @interface GetCasePaymentsResponse
 */
export interface GetCasePaymentsResponse {
    /**
     *
     * @type {Array<CasePaymentDomain>}
     * @memberof GetCasePaymentsResponse
     */
    payments?: Array<CasePaymentDomain>;
}
/**
 *
 * @export
 * @interface GetCaseResolutionStatusesResponse
 */
export interface GetCaseResolutionStatusesResponse {
    /**
     *
     * @type {Array<CaseStatusDomain>}
     * @memberof GetCaseResolutionStatusesResponse
     */
    statuses?: Array<CaseStatusDomain>;
}
/**
 *
 * @export
 * @interface GetCaseResponse
 */
export interface GetCaseResponse {
    /**
     *
     * @type {number}
     * @memberof GetCaseResponse
     */
    chanceOfSuccess?: number;
    /**
     *
     * @type {number}
     * @memberof GetCaseResponse
     */
    projectedInsuranceCostInCents?: number;
    /**
     *
     * @type {CaseDomain}
     * @memberof GetCaseResponse
     */
    theCase?: CaseDomain;
}
/**
 *
 * @export
 * @interface GetCasesWithCoverageObtainedResponse
 */
export interface GetCasesWithCoverageObtainedResponse {
    /**
     *
     * @type {Array<CaseWithCoverageObtained>}
     * @memberof GetCasesWithCoverageObtainedResponse
     */
    cases?: Array<CaseWithCoverageObtained>;
}
/**
 *
 * @export
 * @interface GetCasesWithMissingLawfirmPayoutsResponse
 */
export interface GetCasesWithMissingLawfirmPayoutsResponse {
    /**
     *
     * @type {number}
     * @memberof GetCasesWithMissingLawfirmPayoutsResponse
     */
    resultCount?: number;
    /**
     *
     * @type {Array<MissingLawfirmPayoutResult>}
     * @memberof GetCasesWithMissingLawfirmPayoutsResponse
     */
    results?: Array<MissingLawfirmPayoutResult>;
}
/**
 *
 * @export
 * @interface GetCasesWithOverduePaymentsResponse
 */
export interface GetCasesWithOverduePaymentsResponse {
    /**
     *
     * @type {Array<MissingPaymentDomain>}
     * @memberof GetCasesWithOverduePaymentsResponse
     */
    missingPayments?: Array<MissingPaymentDomain>;
    /**
     *
     * @type {number}
     * @memberof GetCasesWithOverduePaymentsResponse
     */
    resultCount?: number;
}
/**
 *
 * @export
 * @interface GetCitationPhoneLeadsRequest
 */
export interface GetCitationPhoneLeadsRequest {
    /**
     *
     * @type {number}
     * @memberof GetCitationPhoneLeadsRequest
     */
    trailingDays?: number;
}
/**
 *
 * @export
 * @interface GetCitationPhoneLeadsResponse
 */
export interface GetCitationPhoneLeadsResponse {
    /**
     *
     * @type {Array<ClientLeadDomain>}
     * @memberof GetCitationPhoneLeadsResponse
     */
    callList?: Array<ClientLeadDomain>;
}
/**
 *
 * @export
 * @interface GetCitationResponse
 */
export interface GetCitationResponse {
    /**
     *
     * @type {CitationDomain}
     * @memberof GetCitationResponse
     */
    citation?: CitationDomain;
}
/**
 *
 * @export
 * @interface GetCitationsResponse
 */
export interface GetCitationsResponse {
    /**
     *
     * @type {Array<CitationDomain>}
     * @memberof GetCitationsResponse
     */
    citations?: Array<CitationDomain>;
}
/**
 *
 * @export
 * @interface GetCitationsWithMissingFieldsRequest
 */
export interface GetCitationsWithMissingFieldsRequest {
    /**
     *
     * @type {number}
     * @memberof GetCitationsWithMissingFieldsRequest
     */
    numberOfDays?: number;
}
/**
 *
 * @export
 * @interface GetCitationsWithMissingFieldsResponse
 */
export interface GetCitationsWithMissingFieldsResponse {
    /**
     *
     * @type {Array<CitationWithMissingFields>}
     * @memberof GetCitationsWithMissingFieldsResponse
     */
    citations?: Array<CitationWithMissingFields>;
}
/**
 *
 * @export
 * @interface GetClientCasesResponse
 */
export interface GetClientCasesResponse {
    /**
     *
     * @type {Array<CaseDomain>}
     * @memberof GetClientCasesResponse
     */
    cases?: Array<CaseDomain>;
    /**
     *
     * @type {Array<CitationDomain>}
     * @memberof GetClientCasesResponse
     */
    citations?: Array<CitationDomain>;
    /**
     *
     * @type {number}
     * @memberof GetClientCasesResponse
     */
    numBookings?: number;
    /**
     *
     * @type {number}
     * @memberof GetClientCasesResponse
     */
    numCases?: number;
    /**
     *
     * @type {number}
     * @memberof GetClientCasesResponse
     */
    numCitationUploads?: number;
}
/**
 *
 * @export
 * @interface GetClientConfirmedUnpaidCasesResponse
 */
export interface GetClientConfirmedUnpaidCasesResponse {
    /**
     *
     * @type {Array<ClientConfirmedUnpaidCase>}
     * @memberof GetClientConfirmedUnpaidCasesResponse
     */
    cases?: Array<ClientConfirmedUnpaidCase>;
    /**
     *
     * @type {number}
     * @memberof GetClientConfirmedUnpaidCasesResponse
     */
    resultCount?: number;
}
/**
 *
 * @export
 * @interface GetCompetitionResponseModel
 */
export interface GetCompetitionResponseModel {
    /**
     *
     * @type {number}
     * @memberof GetCompetitionResponseModel
     */
    competitiveFeeMax?: number;
    /**
     *
     * @type {number}
     * @memberof GetCompetitionResponseModel
     */
    competitiveFeeMin?: number;
    /**
     *
     * @type {boolean}
     * @memberof GetCompetitionResponseModel
     */
    isCompetitive?: boolean;
    /**
     *
     * @type {number}
     * @memberof GetCompetitionResponseModel
     */
    lowestFee?: number;
}
/**
 *
 * @export
 * @interface GetCountOfMatchingUsersRequest
 */
export interface GetCountOfMatchingUsersRequest {
    /**
     *
     * @type {string}
     * @memberof GetCountOfMatchingUsersRequest
     */
    emailAddress?: string;
}
/**
 *
 * @export
 * @interface GetCountOfMatchingUsersResponse
 */
export interface GetCountOfMatchingUsersResponse {
    /**
     *
     * @type {number}
     * @memberof GetCountOfMatchingUsersResponse
     */
    numMatchingUsers?: number;
}
/**
 *
 * @export
 * @interface GetCountiesResponse
 */
export interface GetCountiesResponse {
    /**
     *
     * @type {Array<CountyDomain>}
     * @memberof GetCountiesResponse
     */
    counties?: Array<CountyDomain>;
}
/**
 *
 * @export
 * @interface GetCountryListResponse
 */
export interface GetCountryListResponse {
    /**
     *
     * @type {Array<CountryDomain>}
     * @memberof GetCountryListResponse
     */
    countryList?: Array<CountryDomain>;
}
/**
 *
 * @export
 * @interface GetCountryRegionsResponse
 */
export interface GetCountryRegionsResponse {
    /**
     *
     * @type {Array<CountryRegion>}
     * @memberof GetCountryRegionsResponse
     */
    regions?: Array<CountryRegion>;
}
/**
 *
 * @export
 * @interface GetCourtCoverageForCountyReportResponse
 */
export interface GetCourtCoverageForCountyReportResponse {
    /**
     *
     * @type {Array<CourtCoverageRecord>}
     * @memberof GetCourtCoverageForCountyReportResponse
     */
    records?: Array<CourtCoverageRecord>;
}
/**
 *
 * @export
 * @interface GetCourtCoverageForStateReportResponse
 */
export interface GetCourtCoverageForStateReportResponse {
    /**
     *
     * @type {number}
     * @memberof GetCourtCoverageForStateReportResponse
     */
    numCounties?: number;
    /**
     *
     * @type {Array<CourtCoverageCountyRecord>}
     * @memberof GetCourtCoverageForStateReportResponse
     */
    records?: Array<CourtCoverageCountyRecord>;
}
/**
 *
 * @export
 * @interface GetCourtCoverageReportResponse
 */
export interface GetCourtCoverageReportResponse {
    /**
     *
     * @type {Array<CourtCoverageStateRecord>}
     * @memberof GetCourtCoverageReportResponse
     */
    stateRecords?: Array<CourtCoverageStateRecord>;
}
/**
 *
 * @export
 * @interface GetCourtResponse
 */
export interface GetCourtResponse {
    /**
     *
     * @type {CourtResponseModel}
     * @memberof GetCourtResponse
     */
    court?: CourtResponseModel;
}
/**
 *
 * @export
 * @interface GetCourtsByQueryResponse
 */
export interface GetCourtsByQueryResponse {
    /**
     *
     * @type {Array<CourtDomainRes>}
     * @memberof GetCourtsByQueryResponse
     */
    courts?: Array<CourtDomainRes>;
    /**
     *
     * @type {number}
     * @memberof GetCourtsByQueryResponse
     */
    numRecords?: number;
}
/**
 *
 * @export
 * @interface GetCourtsInnerResponse
 */
export interface GetCourtsInnerResponse {
    /**
     *
     * @type {GetAddressInnerResponse}
     * @memberof GetCourtsInnerResponse
     */
    address?: GetAddressInnerResponse;
    /**
     *
     * @type {string}
     * @memberof GetCourtsInnerResponse
     */
    courtCode?: string;
    /**
     *
     * @type {number}
     * @memberof GetCourtsInnerResponse
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof GetCourtsInnerResponse
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof GetCourtsInnerResponse
     */
    courtNameAdditional?: string;
}
/**
 *
 * @export
 * @interface GetCurrentUserResponse
 */
export interface GetCurrentUserResponse {
    /**
     *
     * @type {boolean}
     * @memberof GetCurrentUserResponse
     */
    isUserAuthenticated?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetCurrentUserResponse
     */
    isUserLoggedIn?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetCurrentUserResponse
     */
    isUserRememberMeAuthenticated?: boolean;
    /**
     *
     * @type {UserDomain}
     * @memberof GetCurrentUserResponse
     */
    user?: UserDomain;
}
/**
 *
 * @export
 * @interface GetDeclinedCasesRequest
 */
export interface GetDeclinedCasesRequest {
    /**
     *
     * @type {boolean}
     * @memberof GetDeclinedCasesRequest
     */
    loadFreshdeskTicketDetails?: boolean;
}
/**
 *
 * @export
 * @interface GetDeclinedCasesResponse
 */
export interface GetDeclinedCasesResponse {
    /**
     *
     * @type {Array<CaseDomain>}
     * @memberof GetDeclinedCasesResponse
     */
    declinedCases?: Array<CaseDomain>;
}
/**
 *
 * @export
 * @interface GetDocumentsRequest
 */
export interface GetDocumentsRequest {
    /**
     *
     * @type {string}
     * @memberof GetDocumentsRequest
     */
    caseId?: string;
}
/**
 *
 * @export
 * @interface GetEmailTemplateResponse
 */
export interface GetEmailTemplateResponse {
    /**
     *
     * @type {string}
     * @memberof GetEmailTemplateResponse
     */
    templateName?: string;
    /**
     *
     * @type {string}
     * @memberof GetEmailTemplateResponse
     */
    templateText?: string;
}
/**
 *
 * @export
 * @interface GetHouseHoldMateModel
 */
export interface GetHouseHoldMateModel {
    /**
     *
     * @type {string}
     * @memberof GetHouseHoldMateModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof GetHouseHoldMateModel
     */
    fullName?: string;
    /**
     *
     * @type {string}
     * @memberof GetHouseHoldMateModel
     */
    inviteStatus?: GetHouseHoldMateModelInviteStatusEnum;
    /**
     *
     * @type {string}
     * @memberof GetHouseHoldMateModel
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof GetHouseHoldMateModel
     */
    relationshipType?: GetHouseHoldMateModelRelationshipTypeEnum;
    /**
     *
     * @type {number}
     * @memberof GetHouseHoldMateModel
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetHouseHoldMateModelInviteStatusEnum {
    CANCELLED = "CANCELLED",
    PENDING = "PENDING",
    VERIFIED = "VERIFIED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetHouseHoldMateModelRelationshipTypeEnum {
    SELF = "SELF",
    SIBLING = "SIBLING",
    SPOUSE = "SPOUSE",
    TEENAGER = "TEENAGER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface GetHouseholdMatesResponse
 */
export interface GetHouseholdMatesResponse {
    /**
     *
     * @type {Array<GetHouseHoldMateModel>}
     * @memberof GetHouseholdMatesResponse
     */
    mates?: Array<GetHouseHoldMateModel>;
}
/**
 *
 * @export
 * @interface GetInvalidCasesWithStripeChargeResponse
 */
export interface GetInvalidCasesWithStripeChargeResponse {
    /**
     *
     * @type {Array<CaseDomain>}
     * @memberof GetInvalidCasesWithStripeChargeResponse
     */
    cases?: Array<CaseDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmAddressesResponse
 */
export interface GetLawfirmAddressesResponse {
    /**
     *
     * @type {Array<AddressDomain>}
     * @memberof GetLawfirmAddressesResponse
     */
    addresses?: Array<AddressDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmCaseStatsResponse
 */
export interface GetLawfirmCaseStatsResponse {
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof GetLawfirmCaseStatsResponse
     */
    caseCountByStatusMap?: {
        [key: string]: number;
    };
    /**
     *
     * @type {number}
     * @memberof GetLawfirmCaseStatsResponse
     */
    numBookedCases?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmCaseStatsResponse
     */
    numResolvedCases?: number;
}
/**
 *
 * @export
 * @interface GetLawfirmCasesResponse
 */
export interface GetLawfirmCasesResponse {
    /**
     *
     * @type {Array<CaseDomain>}
     * @memberof GetLawfirmCasesResponse
     */
    cases?: Array<CaseDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmCoverageReportResponse
 */
export interface GetLawfirmCoverageReportResponse {
    /**
     *
     * @type {number}
     * @memberof GetLawfirmCoverageReportResponse
     */
    numRecords?: number;
    /**
     *
     * @type {Array<LawfirmCoverageRecord>}
     * @memberof GetLawfirmCoverageReportResponse
     */
    records?: Array<LawfirmCoverageRecord>;
}
/**
 *
 * @export
 * @interface GetLawfirmCoverageResponse
 */
export interface GetLawfirmCoverageResponse {
    /**
     *
     * @type {Array<LawfirmCourtCoverageDomain>}
     * @memberof GetLawfirmCoverageResponse
     */
    coverageList?: Array<LawfirmCourtCoverageDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmFeeCoverageModel
 */
export interface GetLawfirmFeeCoverageModel {
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    county?: string;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFeeCoverageModel
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    courtName?: string;
    /**
     *
     * @type {Array<GetLawfirmFeeModel>}
     * @memberof GetLawfirmFeeCoverageModel
     */
    fees?: Array<GetLawfirmFeeModel>;
    /**
     *
     * @type {boolean}
     * @memberof GetLawfirmFeeCoverageModel
     */
    isDeleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface GetLawfirmFeeCoverageResponse
 */
export interface GetLawfirmFeeCoverageResponse {
    /**
     *
     * @type {Array<GetLawfirmFeeCoverageModel>}
     * @memberof GetLawfirmFeeCoverageResponse
     */
    coverage?: Array<GetLawfirmFeeCoverageModel>;
}
/**
 *
 * @export
 * @interface GetLawfirmFeeModel
 */
export interface GetLawfirmFeeModel {
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    accountFee?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeModel
     */
    classification?: GetLawfirmFeeModelClassificationEnum;
    /**
     *
     * @type {GetCompetitionResponseModel}
     * @memberof GetLawfirmFeeModel
     */
    competition?: GetCompetitionResponseModel;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    courtFee?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    courtId?: number;
    /**
     *
     * @type {boolean}
     * @memberof GetLawfirmFeeModel
     */
    isDeleted?: boolean;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    lawfirmFee?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeModel
     */
    refundEligibility?: GetLawfirmFeeModelRefundEligibilityEnum;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    violationId?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmFeeModel
     */
    violationName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmFeeModelClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmFeeModelRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface GetLawfirmFeesResponse
 */
export interface GetLawfirmFeesResponse {
    /**
     *
     * @type {Array<LawfirmFeeDomain>}
     * @memberof GetLawfirmFeesResponse
     */
    fees?: Array<LawfirmFeeDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmFinancialTransactionsResponse
 */
export interface GetLawfirmFinancialTransactionsResponse {
    /**
     *
     * @type {Array<FinancialTransaction>}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    futureTransactions?: Array<FinancialTransaction>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numFeeRefunds?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numFees?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numFutureFees?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numFuturePayouts?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numFutureTransactions?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numPayouts?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numReversals?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    numTransactions?: number;
    /**
     *
     * @type {Array<FinancialTransaction>}
     * @memberof GetLawfirmFinancialTransactionsResponse
     */
    transactions?: Array<FinancialTransaction>;
}
/**
 *
 * @export
 * @interface GetLawfirmInboxMessagesResponse
 */
export interface GetLawfirmInboxMessagesResponse {
    /**
     *
     * @type {Array<LawfirmInboxMessageDomain>}
     * @memberof GetLawfirmInboxMessagesResponse
     */
    messages?: Array<LawfirmInboxMessageDomain>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmInboxMessagesResponse
     */
    numMessages?: number;
}
/**
 *
 * @export
 * @interface GetLawfirmJobTitleResponse
 */
export interface GetLawfirmJobTitleResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof GetLawfirmJobTitleResponse
     */
    jobTitles?: Array<GetLawfirmJobTitleResponseJobTitlesEnum>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmJobTitleResponseJobTitlesEnum {
    ACCOUNTANT = "ACCOUNTANT",
    ATTORNEY = "ATTORNEY",
    ATTORNEYASSOCIATE = "ATTORNEY_ASSOCIATE",
    ATTORNEYCOUNSEL = "ATTORNEY_COUNSEL",
    ATTORNEYMANAGINGPARTNER = "ATTORNEY_MANAGING_PARTNER",
    ATTORNEYPARTNER = "ATTORNEY_PARTNER",
    ATTORNEYSTAFF = "ATTORNEY_STAFF",
    CUSTOMERSERVICEREP = "CUSTOMER_SERVICE_REP",
    LEGALASSISTANT = "LEGAL_ASSISTANT",
    LEGALINTERN = "LEGAL_INTERN",
    LEGALSECRETARY = "LEGAL_SECRETARY",
    OTHER = "OTHER",
    PARALEGAL = "PARALEGAL"
}
/**
 *
 * @export
 * @interface GetLawfirmLawyersResponse
 */
export interface GetLawfirmLawyersResponse {
    /**
     *
     * @type {Array<LawyerModel>}
     * @memberof GetLawfirmLawyersResponse
     */
    lawyers?: Array<LawyerModel>;
}
/**
 *
 * @export
 * @interface GetLawfirmLeadsRequest
 */
export interface GetLawfirmLeadsRequest {
    /**
     *
     * @type {string}
     * @memberof GetLawfirmLeadsRequest
     */
    orderBy?: string;
}
/**
 *
 * @export
 * @interface GetLawfirmLeadsResponse
 */
export interface GetLawfirmLeadsResponse {
    /**
     *
     * @type {Array<LawfirmLeadDomain>}
     * @memberof GetLawfirmLeadsResponse
     */
    lawfirmLeads?: Array<LawfirmLeadDomain>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmLeadsResponse
     */
    numRecords?: number;
}
/**
 *
 * @export
 * @interface GetLawfirmModel
 */
export interface GetLawfirmModel {
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    aboutUsBlurb?: string;
    /**
     *
     * @type {AddressDomain}
     * @memberof GetLawfirmModel
     */
    address?: AddressDomain;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmModel
     */
    caseAssignmentPriority?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    coverPhotoUrl?: string;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmModel
     */
    createdBy?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    establishedDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmModel
     */
    establishedYear?: number;
    /**
     *
     * @type {boolean}
     * @memberof GetLawfirmModel
     */
    isTestLawfirm?: boolean;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmModel
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    lawfirmPaymentModel?: GetLawfirmModelLawfirmPaymentModelEnum;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    lawfirmState?: GetLawfirmModelLawfirmStateEnum;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    membershipStartDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    otrNotes?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    primaryEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    primaryPhoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {Array<LawfirmRedirectModel>}
     * @memberof GetLawfirmModel
     */
    redirects?: Array<LawfirmRedirectModel>;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    seoUrl?: string;
    /**
     *
     * @type {LawfirmSettingsDomainRes}
     * @memberof GetLawfirmModel
     */
    settings?: LawfirmSettingsDomainRes;
    /**
     *
     * @type {Array<string>}
     * @memberof GetLawfirmModel
     */
    supportedStates?: Array<GetLawfirmModelSupportedStatesEnum>;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    tagLine?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmModel
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmModelLawfirmPaymentModelEnum {
    DESTINATIONACCOUNT = "DESTINATION_ACCOUNT",
    SEPARATECHARGE = "SEPARATE_CHARGE",
    TRANSFERDEDUCTION = "TRANSFER_DEDUCTION"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmModelLawfirmStateEnum {
    ACCOUNTCLOSED = "ACCOUNT_CLOSED",
    DUPLICATE = "DUPLICATE",
    ESTABLISHED = "ESTABLISHED",
    FUTURELEAD = "FUTURE_LEAD",
    INTRIAL = "IN_TRIAL",
    LAWFIRMINTERESTED = "LAWFIRM_INTERESTED",
    LAWFIRMLEAD = "LAWFIRM_LEAD",
    LAWFIRMNOTINTERESTED = "LAWFIRM_NOT_INTERESTED",
    NOTINTERESTEDFEESPLITTINGETHICS = "NOT_INTERESTED_FEE_SPLITTING_ETHICS",
    NOTINTERESTEDREFUNDETHICS = "NOT_INTERESTED_REFUND_ETHICS",
    ONBOARDING = "ONBOARDING",
    TEMPORARILYTURNEDOFF = "TEMPORARILY_TURNED_OFF",
    TERMINATEDFRAUD = "TERMINATED_FRAUD",
    TERMINATEDPOORSERVICE = "TERMINATED_POOR_SERVICE",
    TERMINATEDPOORSUCCESS = "TERMINATED_POOR_SUCCESS",
    UNDERREVIEW = "UNDER_REVIEW"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmModelSupportedStatesEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface GetLawfirmPaymentMethodsResponse
 */
export interface GetLawfirmPaymentMethodsResponse {
    /**
     *
     * @type {Array<StripePaymentSourceDomain>}
     * @memberof GetLawfirmPaymentMethodsResponse
     */
    paymentMethods?: Array<StripePaymentSourceDomain>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmPaymentMethodsResponse
     */
    totalRecords?: number;
}
/**
 *
 * @export
 * @interface GetLawfirmPayoutReversalsResponse
 */
export interface GetLawfirmPayoutReversalsResponse {
    /**
     *
     * @type {Array<LawfirmPayoutDomain>}
     * @memberof GetLawfirmPayoutReversalsResponse
     */
    reversals?: Array<LawfirmPayoutDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmPayoutsResponse
 */
export interface GetLawfirmPayoutsResponse {
    /**
     *
     * @type {Array<LawfirmPayoutDomain>}
     * @memberof GetLawfirmPayoutsResponse
     */
    payouts?: Array<LawfirmPayoutDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmResponse
 */
export interface GetLawfirmResponse {
    /**
     *
     * @type {GetLawfirmModel}
     * @memberof GetLawfirmResponse
     */
    lawfirm?: GetLawfirmModel;
}
/**
 *
 * @export
 * @interface GetLawfirmSettingsResponse
 */
export interface GetLawfirmSettingsResponse {
    /**
     *
     * @type {LawfirmSettingsDomainRes}
     * @memberof GetLawfirmSettingsResponse
     */
    settings?: LawfirmSettingsDomainRes;
}
/**
 *
 * @export
 * @interface GetLawfirmSummaryCaseRequest
 */
export interface GetLawfirmSummaryCaseRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    caseStatusCategories?: Array<GetLawfirmSummaryCaseRequestCaseStatusCategoriesEnum>;
    /**
     *
     * @type {Array<string>}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    caseStatuses?: Array<GetLawfirmSummaryCaseRequestCaseStatusesEnum>;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    countyFilter?: string;
    /**
     *
     * @type {string}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    courtFilter?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    excludedCaseStatuses?: Array<GetLawfirmSummaryCaseRequestExcludedCaseStatusesEnum>;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    order?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof GetLawfirmSummaryCaseRequest
     */
    searchValue?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmSummaryCaseRequestCaseStatusCategoriesEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmSummaryCaseRequestCaseStatusesEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmSummaryCaseRequestExcludedCaseStatusesEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface GetLawfirmSummaryCasesResponse
 */
export interface GetLawfirmSummaryCasesResponse {
    /**
     *
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    activeCasesCount?: number;
    /**
     *
     * @type {Array<CaseSummaryDomain>}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    cases?: Array<CaseSummaryDomain>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    numMatchingCases?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    pendingCasesCount?: number;
}
/**
 *
 * @export
 * @interface GetLawfirmSupportedStatesResponse
 */
export interface GetLawfirmSupportedStatesResponse {
    /**
     *
     * @type {Array<USStateDomain>}
     * @memberof GetLawfirmSupportedStatesResponse
     */
    states?: Array<USStateDomain>;
}
/**
 *
 * @export
 * @interface GetLawfirmTransactionsForCaseResponse
 */
export interface GetLawfirmTransactionsForCaseResponse {
    /**
     *
     * @type {Array<FinancialTransaction>}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    futureTransactions?: Array<FinancialTransaction>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    lawfirmAssumedCost?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    lawfirmEarningsForCase?: number;
    /**
     *
     * @type {Array<LineItem>}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    lineItems?: Array<LineItem>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    otrMarketingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {Array<FinancialTransaction>}
     * @memberof GetLawfirmTransactionsForCaseResponse
     */
    transactions?: Array<FinancialTransaction>;
}
/**
 *
 * @export
 * @interface GetLawfirmsResponse
 */
export interface GetLawfirmsResponse {
    /**
     *
     * @type {Array<GetLawfirmModel>}
     * @memberof GetLawfirmsResponse
     */
    lawfirms?: Array<GetLawfirmModel>;
    /**
     *
     * @type {number}
     * @memberof GetLawfirmsResponse
     */
    numRecords?: number;
}
/**
 *
 * @export
 * @interface GetLineItemTypesResponse
 */
export interface GetLineItemTypesResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof GetLineItemTypesResponse
     */
    lineItemTypes?: Array<GetLineItemTypesResponseLineItemTypesEnum>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLineItemTypesResponseLineItemTypesEnum {
    ACCIDENTFEE = "ACCIDENT_FEE",
    BASELEGALFEE = "BASE_LEGAL_FEE",
    BONDFEE = "BOND_FEE",
    BOOKINGFEE = "BOOKING_FEE",
    CDLFEE = "CDL_FEE",
    DISPUTEFEE = "DISPUTE_FEE",
    FINEPAYMENT = "FINE_PAYMENT",
    FTAFEE = "FTA_FEE",
    LATEFEE = "LATE_FEE",
    MBGREFUND = "MBG_REFUND",
    MVSFEE = "MVS_FEE",
    OTHER = "OTHER",
    OTRCREDIT = "OTR_CREDIT",
    PAYMENTPLANSERVICEFEE = "PAYMENT_PLAN_SERVICE_FEE",
    WARRANTFEE = "WARRANT_FEE"
}
/**
 *
 * @export
 * @interface GetLineItemsResponse
 */
export interface GetLineItemsResponse {
    /**
     *
     * @type {Array<CaseLineItemDomainRes>}
     * @memberof GetLineItemsResponse
     */
    lineItems?: Array<CaseLineItemDomainRes>;
    /**
     *
     * @type {CaseLineItemsSummary}
     * @memberof GetLineItemsResponse
     */
    lineItemsSummary?: CaseLineItemsSummary;
}
/**
 *
 * @export
 * @interface GetListOfCitationsWithMissingCourtResponse
 */
export interface GetListOfCitationsWithMissingCourtResponse {
    /**
     *
     * @type {Array<CitationWithMissingCourt>}
     * @memberof GetListOfCitationsWithMissingCourtResponse
     */
    citations?: Array<CitationWithMissingCourt>;
}
/**
 *
 * @export
 * @interface GetLocationResponse
 */
export interface GetLocationResponse {
    /**
     *
     * @type {string}
     * @memberof GetLocationResponse
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof GetLocationResponse
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof GetLocationResponse
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof GetLocationResponse
     */
    subRegion?: string;
    /**
     *
     * @type {boolean}
     * @memberof GetLocationResponse
     */
    subscriptionBillingEnabled?: boolean;
}
/**
 *
 * @export
 * @interface GetLostCasesWithTransferNotReversedRequest
 */
export interface GetLostCasesWithTransferNotReversedRequest {
    /**
     *
     * @type {TimestampReq}
     * @memberof GetLostCasesWithTransferNotReversedRequest
     */
    fromDate?: TimestampReq;
    /**
     *
     * @type {number}
     * @memberof GetLostCasesWithTransferNotReversedRequest
     */
    maxRecords?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof GetLostCasesWithTransferNotReversedRequest
     */
    toDate?: TimestampReq;
}
/**
 *
 * @export
 * @interface GetLostCasesWithTransferNotReversedResponse
 */
export interface GetLostCasesWithTransferNotReversedResponse {
    /**
     *
     * @type {Array<LostCaseWithTransferNotReversed>}
     * @memberof GetLostCasesWithTransferNotReversedResponse
     */
    cases?: Array<LostCaseWithTransferNotReversed>;
}
/**
 *
 * @export
 * @interface GetNoViolationCitationsResponse
 */
export interface GetNoViolationCitationsResponse {
    /**
     *
     * @type {Array<NoViolationCitation>}
     * @memberof GetNoViolationCitationsResponse
     */
    citations?: Array<NoViolationCitation>;
}
/**
 *
 * @export
 * @interface GetOutgoingContactsResponse
 */
export interface GetOutgoingContactsResponse {
    /**
     *
     * @type {Array<OutgoingContactDomain>}
     * @memberof GetOutgoingContactsResponse
     */
    contacts?: Array<OutgoingContactDomain>;
}
/**
 *
 * @export
 * @interface GetOverduePaymentsResponse
 */
export interface GetOverduePaymentsResponse {
    /**
     *
     * @type {number}
     * @memberof GetOverduePaymentsResponse
     */
    overdueBalanceInCents?: number;
    /**
     *
     * @type {Array<CustomerOverduePayment>}
     * @memberof GetOverduePaymentsResponse
     */
    overduePayments?: Array<CustomerOverduePayment>;
}
/**
 *
 * @export
 * @interface GetPaymentMethodsForUserResponse
 */
export interface GetPaymentMethodsForUserResponse {
    /**
     *
     * @type {Array<StripePaymentSourceDomain>}
     * @memberof GetPaymentMethodsForUserResponse
     */
    paymentMethods?: Array<StripePaymentSourceDomain>;
    /**
     *
     * @type {number}
     * @memberof GetPaymentMethodsForUserResponse
     */
    totalRecords?: number;
}
/**
 *
 * @export
 * @interface GetPaymentModelTypesResponse
 */
export interface GetPaymentModelTypesResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof GetPaymentModelTypesResponse
     */
    models?: Array<GetPaymentModelTypesResponseModelsEnum>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetPaymentModelTypesResponseModelsEnum {
    DESTINATIONACCOUNT = "DESTINATION_ACCOUNT",
    SEPARATECHARGE = "SEPARATE_CHARGE",
    TRANSFERDEDUCTION = "TRANSFER_DEDUCTION"
}
/**
 *
 * @export
 * @interface GetPenaltyType
 */
export interface GetPenaltyType {
    /**
     *
     * @type {string}
     * @memberof GetPenaltyType
     */
    type?: GetPenaltyTypeTypeEnum;
    /**
     *
     * @type {number}
     * @memberof GetPenaltyType
     */
    typeId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetPenaltyTypeTypeEnum {
    DEMERITPOINTS = "DEMERIT_POINTS",
    INCARCERATIONMAXDAYS = "INCARCERATION_MAX_DAYS",
    INCARCERATIONMINDAYS = "INCARCERATION_MIN_DAYS",
    INSURANCEPOINTS = "INSURANCE_POINTS",
    INSURANCERATEINCREASE = "INSURANCE_RATE_INCREASE",
    LICENSEREVOCATIONMAXDAYS = "LICENSE_REVOCATION_MAX_DAYS",
    LICENSEREVOCATIONMINDAYS = "LICENSE_REVOCATION_MIN_DAYS",
    LICENSESUSPENSIONMAXDAYS = "LICENSE_SUSPENSION_MAX_DAYS",
    LICENSESUSPENSIONMINDAYS = "LICENSE_SUSPENSION_MIN_DAYS",
    MANDATORYCOURTAPPEARANCE = "MANDATORY_COURT_APPEARANCE",
    MANDATORYCOURTAPPEARANCEWITHATTORNEY = "MANDATORY_COURT_APPEARANCE_WITH_ATTORNEY",
    MAXBAILAMOUNT = "MAX_BAIL_AMOUNT",
    MINBAILAMOUNT = "MIN_BAIL_AMOUNT",
    PROBATIONINDAYS = "PROBATION_IN_DAYS",
    TOTALBAILAMOUNT = "TOTAL_BAIL_AMOUNT"
}
/**
 *
 * @export
 * @interface GetPenaltyTypesResponse
 */
export interface GetPenaltyTypesResponse {
    /**
     *
     * @type {Array<GetPenaltyType>}
     * @memberof GetPenaltyTypesResponse
     */
    penaltyTypes?: Array<GetPenaltyType>;
}
/**
 *
 * @export
 * @interface GetPendingCasesResponse
 */
export interface GetPendingCasesResponse {
    /**
     *
     * @type {Array<CaseDomain>}
     * @memberof GetPendingCasesResponse
     */
    pendingCases?: Array<CaseDomain>;
}
/**
 *
 * @export
 * @interface GetPendingTicketReviewsRequest
 */
export interface GetPendingTicketReviewsRequest {
    /**
     *
     * @type {TimestampReq}
     * @memberof GetPendingTicketReviewsRequest
     */
    fromDate?: TimestampReq;
    /**
     *
     * @type {number}
     * @memberof GetPendingTicketReviewsRequest
     */
    maxRecords?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof GetPendingTicketReviewsRequest
     */
    toDate?: TimestampReq;
}
/**
 *
 * @export
 * @interface GetPendingTicketReviewsResponse
 */
export interface GetPendingTicketReviewsResponse {
    /**
     *
     * @type {Array<TicketReviewRequest>}
     * @memberof GetPendingTicketReviewsResponse
     */
    requests?: Array<TicketReviewRequest>;
}
/**
 *
 * @export
 * @interface GetPotentialCustomersRequest
 */
export interface GetPotentialCustomersRequest {
    /**
     *
     * @type {string}
     * @memberof GetPotentialCustomersRequest
     */
    endDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof GetPotentialCustomersRequest
     */
    includeDismissedCitations?: boolean;
    /**
     *
     * @type {string}
     * @memberof GetPotentialCustomersRequest
     */
    orderBy?: string;
    /**
     *
     * @type {string}
     * @memberof GetPotentialCustomersRequest
     */
    startDate?: string;
}
/**
 *
 * @export
 * @interface GetPotentialCustomersResponse
 */
export interface GetPotentialCustomersResponse {
    /**
     *
     * @type {number}
     * @memberof GetPotentialCustomersResponse
     */
    numRecords?: number;
    /**
     *
     * @type {Array<PotentialCustomerDomain>}
     * @memberof GetPotentialCustomersResponse
     */
    potentialCustomers?: Array<PotentialCustomerDomain>;
}
/**
 *
 * @export
 * @interface GetRedirectUrlResponse
 */
export interface GetRedirectUrlResponse {
    /**
     *
     * @type {number}
     * @memberof GetRedirectUrlResponse
     */
    httpCode?: number;
    /**
     *
     * @type {string}
     * @memberof GetRedirectUrlResponse
     */
    landingPageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof GetRedirectUrlResponse
     */
    redirectUrl?: string;
    /**
     *
     * @type {string}
     * @memberof GetRedirectUrlResponse
     */
    startDateUtc?: string;
}
/**
 *
 * @export
 * @interface GetReferralCodeResponse
 */
export interface GetReferralCodeResponse {
    /**
     *
     * @type {string}
     * @memberof GetReferralCodeResponse
     */
    endDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof GetReferralCodeResponse
     */
    isCodeActive?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetReferralCodeResponse
     */
    isCodeApproved?: boolean;
    /**
     *
     * @type {number}
     * @memberof GetReferralCodeResponse
     */
    numberOfReferrals?: number;
    /**
     *
     * @type {string}
     * @memberof GetReferralCodeResponse
     */
    ownerEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof GetReferralCodeResponse
     */
    ownerType?: GetReferralCodeResponseOwnerTypeEnum;
    /**
     *
     * @type {string}
     * @memberof GetReferralCodeResponse
     */
    refereeCreditType?: GetReferralCodeResponseRefereeCreditTypeEnum;
    /**
     *
     * @type {number}
     * @memberof GetReferralCodeResponse
     */
    refereeCreditValue?: number;
    /**
     *
     * @type {string}
     * @memberof GetReferralCodeResponse
     */
    referralCode?: string;
    /**
     *
     * @type {number}
     * @memberof GetReferralCodeResponse
     */
    referralCountLimit?: number;
    /**
     *
     * @type {string}
     * @memberof GetReferralCodeResponse
     */
    startDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetReferralCodeResponseOwnerTypeEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetReferralCodeResponseRefereeCreditTypeEnum {
    CENTSVALUE = "CENTS_VALUE",
    NOCREDIT = "NO_CREDIT",
    PERCENTAGEDISCOUNT = "PERCENTAGE_DISCOUNT"
}
/**
 *
 * @export
 * @interface GetReferralCodesResponse
 */
export interface GetReferralCodesResponse {
    /**
     *
     * @type {Array<GetReferralCodeResponse>}
     * @memberof GetReferralCodesResponse
     */
    referralCodes?: Array<GetReferralCodeResponse>;
}
/**
 *
 * @export
 * @interface GetReferralsHistoryResponse
 */
export interface GetReferralsHistoryResponse {
    /**
     *
     * @type {Array<ReferralResponse>}
     * @memberof GetReferralsHistoryResponse
     */
    referrals?: Array<ReferralResponse>;
}
/**
 *
 * @export
 * @interface GetRegionsWithViolationsResponse
 */
export interface GetRegionsWithViolationsResponse {
    /**
     *
     * @type {Array<AvailableRegion>}
     * @memberof GetRegionsWithViolationsResponse
     */
    regions?: Array<AvailableRegion>;
}
/**
 *
 * @export
 * @interface GetStripeChargeResponse
 */
export interface GetStripeChargeResponse {
    /**
     *
     * @type {StripeChargeDomain}
     * @memberof GetStripeChargeResponse
     */
    stripeCharge?: StripeChargeDomain;
}
/**
 *
 * @export
 * @interface GetStripeChargesResponse
 */
export interface GetStripeChargesResponse {
    /**
     *
     * @type {Array<StripeChargeDomain>}
     * @memberof GetStripeChargesResponse
     */
    stripeCharges?: Array<StripeChargeDomain>;
}
/**
 *
 * @export
 * @interface GetStripeConnectedAccountsResponse
 */
export interface GetStripeConnectedAccountsResponse {
    /**
     *
     * @type {Array<StripeConnectedAccountDomain>}
     * @memberof GetStripeConnectedAccountsResponse
     */
    stripeConnectedAccounts?: Array<StripeConnectedAccountDomain>;
}
/**
 *
 * @export
 * @interface GetSupportTicketsResponse
 */
export interface GetSupportTicketsResponse {
    /**
     *
     * @type {Array<FreshDeskTicket>}
     * @memberof GetSupportTicketsResponse
     */
    supportTickets?: Array<FreshDeskTicket>;
}
/**
 *
 * @export
 * @interface GetTicketReviewResponse
 */
export interface GetTicketReviewResponse {
    /**
     *
     * @type {TicketReviewRequestRes}
     * @memberof GetTicketReviewResponse
     */
    ticketReview?: TicketReviewRequestRes;
}
/**
 *
 * @export
 * @interface GetTrafficViolationModel
 */
export interface GetTrafficViolationModel {
    /**
     *
     * @type {string}
     * @memberof GetTrafficViolationModel
     */
    classDescription?: string;
    /**
     *
     * @type {boolean}
     * @memberof GetTrafficViolationModel
     */
    criminal?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetTrafficViolationModel
     */
    enabledForCustomers?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetTrafficViolationModel
     */
    enabledForLawfirms?: boolean;
    /**
     *
     * @type {Array<PenaltyModel>}
     * @memberof GetTrafficViolationModel
     */
    penalties?: Array<PenaltyModel>;
    /**
     *
     * @type {string}
     * @memberof GetTrafficViolationModel
     */
    trafficViolationDesc?: string;
    /**
     *
     * @type {number}
     * @memberof GetTrafficViolationModel
     */
    trafficViolationTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof GetTrafficViolationModel
     */
    userFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof GetTrafficViolationModel
     */
    userFriendlyShortForm?: string;
    /**
     *
     * @type {string}
     * @memberof GetTrafficViolationModel
     */
    violationClassification?: GetTrafficViolationModelViolationClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof GetTrafficViolationModel
     */
    violationCode?: string;
    /**
     *
     * @type {boolean}
     * @memberof GetTrafficViolationModel
     */
    wobblerToCriminal?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetTrafficViolationModelViolationClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface GetTrafficViolationTypesResponse
 */
export interface GetTrafficViolationTypesResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof GetTrafficViolationTypesResponse
     */
    exclusionPatterns?: Array<string>;
    /**
     *
     * @type {Array<GetTrafficViolationModel>}
     * @memberof GetTrafficViolationTypesResponse
     */
    violationTypes?: Array<GetTrafficViolationModel>;
}
/**
 *
 * @export
 * @interface GetUserAddressesResponse
 */
export interface GetUserAddressesResponse {
    /**
     *
     * @type {Array<AddressDomain>}
     * @memberof GetUserAddressesResponse
     */
    addresses?: Array<AddressDomain>;
}
/**
 *
 * @export
 * @interface GetUserCasesResponse
 */
export interface GetUserCasesResponse {
    /**
     *
     * @type {Array<CaseDomain>}
     * @memberof GetUserCasesResponse
     */
    cases?: Array<CaseDomain>;
    /**
     *
     * @type {Array<CitationDomain>}
     * @memberof GetUserCasesResponse
     */
    citations?: Array<CitationDomain>;
    /**
     *
     * @type {number}
     * @memberof GetUserCasesResponse
     */
    numBookings?: number;
    /**
     *
     * @type {number}
     * @memberof GetUserCasesResponse
     */
    numCitationUploads?: number;
}
/**
 *
 * @export
 * @interface GetUserDetailsResponse
 */
export interface GetUserDetailsResponse {
    /**
     *
     * @type {string}
     * @memberof GetUserDetailsResponse
     */
    mergeReportJson?: string;
    /**
     *
     * @type {UserDomain}
     * @memberof GetUserDetailsResponse
     */
    user?: UserDomain;
}
/**
 *
 * @export
 * @interface GetUserRefLinksResponse
 */
export interface GetUserRefLinksResponse {
    /**
     *
     * @type {Array<UserRefLinkDomain>}
     * @memberof GetUserRefLinksResponse
     */
    refLinks?: Array<UserRefLinkDomain>;
}
/**
 *
 * @export
 * @interface GetUserReferralSourceTypesResponse
 */
export interface GetUserReferralSourceTypesResponse {
    /**
     *
     * @type {Array<UserReferralSourceTypeModel>}
     * @memberof GetUserReferralSourceTypesResponse
     */
    sources?: Array<UserReferralSourceTypeModel>;
}
/**
 *
 * @export
 * @interface GetUserRegistrationsRequest
 */
export interface GetUserRegistrationsRequest {
    /**
     *
     * @type {string}
     * @memberof GetUserRegistrationsRequest
     */
    endDate?: string;
    /**
     *
     * @type {string}
     * @memberof GetUserRegistrationsRequest
     */
    startDate?: string;
    /**
     *
     * @type {string}
     * @memberof GetUserRegistrationsRequest
     */
    timeZoneId?: string;
}
/**
 *
 * @export
 * @interface GetUserRegistrationsResponse
 */
export interface GetUserRegistrationsResponse {
    /**
     *
     * @type {UserRegistrationStats}
     * @memberof GetUserRegistrationsResponse
     */
    stats?: UserRegistrationStats;
    /**
     *
     * @type {Array<UserDomain>}
     * @memberof GetUserRegistrationsResponse
     */
    userRegistrations?: Array<UserDomain>;
}
/**
 *
 * @export
 * @interface GetUserResponse
 */
export interface GetUserResponse {
    /**
     *
     * @type {UserDomain}
     * @memberof GetUserResponse
     */
    user?: UserDomain;
}
/**
 *
 * @export
 * @interface GetUserStripeAccountResponse
 */
export interface GetUserStripeAccountResponse {
    /**
     *
     * @type {StripeCustomerAccountDomain}
     * @memberof GetUserStripeAccountResponse
     */
    stripeAccount?: StripeCustomerAccountDomain;
}
/**
 *
 * @export
 * @interface GraphRequest
 */
export interface GraphRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof GraphRequest
     */
    caseStatues?: Array<GraphRequestCaseStatuesEnum>;
    /**
     *
     * @type {string}
     * @memberof GraphRequest
     */
    endDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof GraphRequest
     */
    includeDismissedContacts?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GraphRequest
     */
    includeOutgoingContacts?: boolean;
    /**
     *
     * @type {string}
     * @memberof GraphRequest
     */
    startDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GraphRequestCaseStatuesEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface HandleOrphanedStripeChargeRequest
 */
export interface HandleOrphanedStripeChargeRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof HandleOrphanedStripeChargeRequest
     */
    stripeChargeIds?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof HandleOrphanedStripeChargeRequest
     */
    throwExceptionOnFailure?: boolean;
}
/**
 *
 * @export
 * @interface HandleOrphanedStripeChargeResponse
 */
export interface HandleOrphanedStripeChargeResponse {
    /**
     *
     * @type {number}
     * @memberof HandleOrphanedStripeChargeResponse
     */
    numFailures?: number;
    /**
     *
     * @type {number}
     * @memberof HandleOrphanedStripeChargeResponse
     */
    numSuccesses?: number;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof HandleOrphanedStripeChargeResponse
     */
    results?: {
        [key: string]: string;
    };
}
/**
 *
 * @export
 * @interface InitiateCaseAndChargeCustomerRequest
 */
export interface InitiateCaseAndChargeCustomerRequest {
    /**
     *
     * @type {string}
     * @memberof InitiateCaseAndChargeCustomerRequest
     */
    cardId?: string;
    /**
     *
     * @type {string}
     * @memberof InitiateCaseAndChargeCustomerRequest
     */
    paymentPlanType?: InitiateCaseAndChargeCustomerRequestPaymentPlanTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum InitiateCaseAndChargeCustomerRequestPaymentPlanTypeEnum {
    ALLUPFRONT = "ALL_UPFRONT",
    THREEPAYMENTSHALFFIRST = "THREE_PAYMENTS_HALF_FIRST",
    TWOPAYMENTSMONTHLY = "TWO_PAYMENTS_MONTHLY"
}
/**
 *
 * @export
 * @interface InitiateCaseAndChargeCustomerResponse
 */
export interface InitiateCaseAndChargeCustomerResponse {
    /**
     *
     * @type {number}
     * @memberof InitiateCaseAndChargeCustomerResponse
     */
    otre?: number;
    /**
     *
     * @type {number}
     * @memberof InitiateCaseAndChargeCustomerResponse
     */
    rs?: number;
}
/**
 *
 * @export
 * @interface InsertCaseLineItemResponse
 */
export interface InsertCaseLineItemResponse {
    /**
     *
     * @type {string}
     * @memberof InsertCaseLineItemResponse
     */
    lineItemId?: string;
}
/**
 *
 * @export
 * @interface InsertInvoiceLineItemRequest
 */
export interface InsertInvoiceLineItemRequest {
    /**
     *
     * @type {LineItemRequest}
     * @memberof InsertInvoiceLineItemRequest
     */
    lineItem?: LineItemRequest;
}
/**
 *
 * @export
 * @interface InviteHouseholdMateRequest
 */
export interface InviteHouseholdMateRequest {
    /**
     *
     * @type {string}
     * @memberof InviteHouseholdMateRequest
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof InviteHouseholdMateRequest
     */
    fullName?: string;
    /**
     *
     * @type {string}
     * @memberof InviteHouseholdMateRequest
     */
    relationshipType?: InviteHouseholdMateRequestRelationshipTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum InviteHouseholdMateRequestRelationshipTypeEnum {
    SELF = "SELF",
    SIBLING = "SIBLING",
    SPOUSE = "SPOUSE",
    TEENAGER = "TEENAGER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface IsRefundEligibleResponse
 */
export interface IsRefundEligibleResponse {
    /**
     *
     * @type {string}
     * @memberof IsRefundEligibleResponse
     */
    refundEligibilityType?: IsRefundEligibleResponseRefundEligibilityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof IsRefundEligibleResponse
     */
    uiReasonMsg?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum IsRefundEligibleResponseRefundEligibilityTypeEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface IsUserLoggedInResponse
 */
export interface IsUserLoggedInResponse {
    /**
     *
     * @type {boolean}
     * @memberof IsUserLoggedInResponse
     */
    isUserLoggedIn?: boolean;
    /**
     *
     * @type {number}
     * @memberof IsUserLoggedInResponse
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface LawfirmAuditEventModel
 */
export interface LawfirmAuditEventModel {
    /**
     *
     * @type {string}
     * @memberof LawfirmAuditEventModel
     */
    authorName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmAuditEventModel
     */
    clientType?: LawfirmAuditEventModelClientTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmAuditEventModel
     */
    event?: LawfirmAuditEventModelEventEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmAuditEventModel
     */
    eventDate?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmAuditEventModel
     */
    eventId?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmAuditEventModel
     */
    lawfirmEventId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmAuditEventModel
     */
    newValue?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmAuditEventModel
     */
    oldValue?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmAuditEventModel
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmAuditEventModelClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmAuditEventModelEventEnum {
    CASEBOOKING = "CASE_BOOKING",
    CASEMATCH = "CASE_MATCH",
    CITATIONUPLOAD = "CITATION_UPLOAD",
    LAWFIRMACCOUNTPRIORITY = "LAWFIRM_ACCOUNT_PRIORITY",
    LAWFIRMACCOUNTSTATUS = "LAWFIRM_ACCOUNT_STATUS",
    LAWFIRMDAILYCAPACITY = "LAWFIRM_DAILY_CAPACITY",
    LAWFIRMTOTALCAPACITY = "LAWFIRM_TOTAL_CAPACITY",
    SAVEVACATIONMODEENDDATE = "SAVE_VACATION_MODE_END_DATE",
    SAVEVACATIONMODEREASON = "SAVE_VACATION_MODE_REASON",
    VACATIONMODETOGGLE = "VACATION_MODE_TOGGLE"
}
/**
 *
 * @export
 * @interface LawfirmBookingSummary
 */
export interface LawfirmBookingSummary {
    /**
     *
     * @type {number}
     * @memberof LawfirmBookingSummary
     */
    bookingsCount?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmBookingSummary
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmBookingSummary
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmBookingSummary
     */
    lawfirmTransactions?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmBookingSummary
     */
    otrPercent?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmBookingSummary
     */
    otrRevenue?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmBookingSummary
     */
    state?: LawfirmBookingSummaryStateEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmBookingSummaryStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface LawfirmCaseDocument
 */
export interface LawfirmCaseDocument {
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDocument
     */
    caseDocId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDocument
     */
    clientDocRequirement?: LawfirmCaseDocumentClientDocRequirementEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDocument
     */
    docDate?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDocument
     */
    docType?: LawfirmCaseDocumentDocTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDocument
     */
    docUrl?: string;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmCaseDocument
     */
    hasClientAgreed?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDocumentClientDocRequirementEnum {
    ACK = "ACK",
    NONE = "NONE",
    NOTARY = "NOTARY",
    SIGNATURE = "SIGNATURE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDocumentDocTypeEnum {
    ENGAGEMENTLETTER = "ENGAGEMENT_LETTER",
    OTHERDOCUMENT = "OTHER_DOCUMENT",
    OTHERIMAGE = "OTHER_IMAGE"
}
/**
 *
 * @export
 * @interface LawfirmCaseDomain
 */
export interface LawfirmCaseDomain {
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    caseDecisionStatus?: LawfirmCaseDomainCaseDecisionStatusEnum;
    /**
     *
     * @type {FreshDeskTicket}
     * @memberof LawfirmCaseDomain
     */
    clientDeclineTicket?: FreshDeskTicket;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    declineReason?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCaseDomain
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof LawfirmCaseDomain
     */
    lawfirmDecisionDateUtc?: Timestamp;
    /**
     *
     * @type {FreshDeskTicket}
     * @memberof LawfirmCaseDomain
     */
    lawfirmDeclineTicket?: FreshDeskTicket;
    /**
     *
     * @type {number}
     * @memberof LawfirmCaseDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    lawfirmPrimaryEmail?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof LawfirmCaseDomain
     */
    lawfirmReceiptDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    obfuscatedPictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomain
     */
    refundOwner?: LawfirmCaseDomainRefundOwnerEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDomainCaseDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDomainRefundOwnerEnum {
    LAWFIRM = "LAWFIRM",
    NONE = "NONE",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface LawfirmCaseDomainReq
 */
export interface LawfirmCaseDomainReq {
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    caseDecisionStatus?: LawfirmCaseDomainReqCaseDecisionStatusEnum;
    /**
     *
     * @type {FreshDeskTicketReq}
     * @memberof LawfirmCaseDomainReq
     */
    clientDeclineTicket?: FreshDeskTicketReq;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    declineReason?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmDecisionDateUtc?: TimestampReq;
    /**
     *
     * @type {FreshDeskTicketReq}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmDeclineTicket?: FreshDeskTicketReq;
    /**
     *
     * @type {number}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmPrimaryEmail?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof LawfirmCaseDomainReq
     */
    lawfirmReceiptDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    obfuscatedPictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainReq
     */
    refundOwner?: LawfirmCaseDomainReqRefundOwnerEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDomainReqCaseDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDomainReqRefundOwnerEnum {
    LAWFIRM = "LAWFIRM",
    NONE = "NONE",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface LawfirmCaseDomainRes
 */
export interface LawfirmCaseDomainRes {
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    caseDecisionStatus?: LawfirmCaseDomainResCaseDecisionStatusEnum;
    /**
     *
     * @type {FreshDeskTicketRes}
     * @memberof LawfirmCaseDomainRes
     */
    clientDeclineTicket?: FreshDeskTicketRes;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    declineReason?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmDecisionDateUtc?: TimestampRes;
    /**
     *
     * @type {FreshDeskTicketRes}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmDeclineTicket?: FreshDeskTicketRes;
    /**
     *
     * @type {number}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmPrimaryEmail?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof LawfirmCaseDomainRes
     */
    lawfirmReceiptDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    obfuscatedPictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmCaseDomainRes
     */
    refundOwner?: LawfirmCaseDomainResRefundOwnerEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDomainResCaseDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmCaseDomainResRefundOwnerEnum {
    LAWFIRM = "LAWFIRM",
    NONE = "NONE",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface LawfirmCourtCoverageDomain
 */
export interface LawfirmCourtCoverageDomain {
    /**
     *
     * @type {string}
     * @memberof LawfirmCourtCoverageDomain
     */
    city?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    competitiveFeeMax?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    competitiveFeeMin?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCourtCoverageDomain
     */
    county?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCourtCoverageDomain
     */
    courtName?: string;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmCourtCoverageDomain
     */
    isCompetitive?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmCourtCoverageDomain
     */
    isDeleted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmCourtCoverageDomain
     */
    isRefundOffered?: boolean;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    lawfirmFee?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    lowestFee?: number;
    /**
     *
     * @type {CountryRegion}
     * @memberof LawfirmCourtCoverageDomain
     */
    region?: CountryRegion;
    /**
     *
     * @type {string}
     * @memberof LawfirmCourtCoverageDomain
     */
    state?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    xtCompetitiveFee?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    xtCompetitiveFeeMax?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCourtCoverageDomain
     */
    xtCompetitiveFeeMin?: number;
}
/**
 *
 * @export
 * @interface LawfirmCoverageRecord
 */
export interface LawfirmCoverageRecord {
    /**
     *
     * @type {number}
     * @memberof LawfirmCoverageRecord
     */
    caseAssignmentPriority?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCoverageRecord
     */
    countyId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCoverageRecord
     */
    countyName?: string;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmCoverageRecord
     */
    isVacationMode?: boolean;
    /**
     *
     * @type {Timestamp}
     * @memberof LawfirmCoverageRecord
     */
    latestCaseAssignmentDateUtc?: Timestamp;
    /**
     *
     * @type {number}
     * @memberof LawfirmCoverageRecord
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCoverageRecord
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmCoverageRecord
     */
    maxCaseCapacity?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCoverageRecord
     */
    numActiveCases?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmCoverageRecord
     */
    numCourtsCovered?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmCoverageRecord
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface LawfirmDocument
 */
export interface LawfirmDocument {
    /**
     *
     * @type {string}
     * @memberof LawfirmDocument
     */
    clientDocRequirement?: LawfirmDocumentClientDocRequirementEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocument
     */
    docDate?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocument
     */
    docExt?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocument
     */
    docId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocument
     */
    docType?: LawfirmDocumentDocTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocument
     */
    docUrl?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmDocumentClientDocRequirementEnum {
    ACK = "ACK",
    NONE = "NONE",
    NOTARY = "NOTARY",
    SIGNATURE = "SIGNATURE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmDocumentDocTypeEnum {
    ENGAGEMENTLETTER = "ENGAGEMENT_LETTER",
    OTHERDOCUMENT = "OTHER_DOCUMENT",
    OTHERIMAGE = "OTHER_IMAGE"
}
/**
 *
 * @export
 * @interface LawfirmDocumentResponse
 */
export interface LawfirmDocumentResponse {
    /**
     *
     * @type {Array<LawfirmDocument>}
     * @memberof LawfirmDocumentResponse
     */
    documents?: Array<LawfirmDocument>;
}
/**
 *
 * @export
 * @interface LawfirmDocumentTemplate
 */
export interface LawfirmDocumentTemplate {
    /**
     *
     * @type {string}
     * @memberof LawfirmDocumentTemplate
     */
    clientDocRequirement?: LawfirmDocumentTemplateClientDocRequirementEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocumentTemplate
     */
    docDate?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocumentTemplate
     */
    docExt?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocumentTemplate
     */
    docType?: LawfirmDocumentTemplateDocTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmDocumentTemplate
     */
    textProvidedByLawfirm?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmDocumentTemplateClientDocRequirementEnum {
    ACK = "ACK",
    NONE = "NONE",
    NOTARY = "NOTARY",
    SIGNATURE = "SIGNATURE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmDocumentTemplateDocTypeEnum {
    ENGAGEMENTLETTER = "ENGAGEMENT_LETTER",
    OTHERDOCUMENT = "OTHER_DOCUMENT",
    OTHERIMAGE = "OTHER_IMAGE"
}
/**
 *
 * @export
 * @interface LawfirmDocumentTemplateResponse
 */
export interface LawfirmDocumentTemplateResponse {
    /**
     *
     * @type {Array<LawfirmDocumentTemplate>}
     * @memberof LawfirmDocumentTemplateResponse
     */
    documents?: Array<LawfirmDocumentTemplate>;
}
/**
 *
 * @export
 * @interface LawfirmFeeDomain
 */
export interface LawfirmFeeDomain {
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    dueDate?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    lawfirmFeeId?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    note?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    otrAmount?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    processingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    processingFeeCharged?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    sourceCasePaymentId?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmFeeDomain
     */
    stripeAmount?: number;
    /**
     *
     * @type {StripeApplicationFeeDomain}
     * @memberof LawfirmFeeDomain
     */
    stripeApplicationFee?: StripeApplicationFeeDomain;
    /**
     *
     * @type {StripePaymentDomain}
     * @memberof LawfirmFeeDomain
     */
    stripePayment?: StripePaymentDomain;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    transactionDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    transactionMethod?: LawfirmFeeDomainTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    transactionReferenceId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmFeeDomain
     */
    updatedDueDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmFeeDomainTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface LawfirmInboxMessageDomain
 */
export interface LawfirmInboxMessageDomain {
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseStatus?: LawfirmInboxMessageDomainCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseStatusCategory?: LawfirmInboxMessageDomainCaseStatusCategoryEnum;
    /**
     *
     * @type {PureDate}
     * @memberof LawfirmInboxMessageDomain
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {TimestampRes}
     * @memberof LawfirmInboxMessageDomain
     */
    citationIssueDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    clientFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    clientLastName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    courtName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    lawfirmCaseDecisionStatus?: LawfirmInboxMessageDomainLawfirmCaseDecisionStatusEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    messageBody?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof LawfirmInboxMessageDomain
     */
    messageSentDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    profilePictureUrl?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmInboxMessageDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmInboxMessageDomainCaseStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmInboxMessageDomainLawfirmCaseDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
 *
 * @export
 * @interface LawfirmLeadDomain
 */
export interface LawfirmLeadDomain {
    /**
     *
     * @type {boolean}
     * @memberof LawfirmLeadDomain
     */
    isLawyerEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmLeadDomain
     */
    isLawyerEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmLeadDomain
     */
    isTestLawfirm?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmLeadDomain
     */
    isTestLawyer?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmLeadDomain
     */
    isVacationMode?: boolean;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawfirmAddressState?: LawfirmLeadDomainLawfirmAddressStateEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawfirmCity?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmLeadDomain
     */
    lawfirmCreatedByUserId?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmLeadDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawfirmPostalCode?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawfirmState?: LawfirmLeadDomainLawfirmStateEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawyerEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawyerFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    lawyerLastName?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmLeadDomain
     */
    lawyerUserId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    leadOwnerFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmLeadDomain
     */
    leadOwnerLastName?: string;
    /**
     *
     * @type {Array<OutgoingContactDomain>}
     * @memberof LawfirmLeadDomain
     */
    outgoingContacts?: Array<OutgoingContactDomain>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmLeadDomainLawfirmAddressStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmLeadDomainLawfirmStateEnum {
    ACCOUNTCLOSED = "ACCOUNT_CLOSED",
    DUPLICATE = "DUPLICATE",
    ESTABLISHED = "ESTABLISHED",
    FUTURELEAD = "FUTURE_LEAD",
    INTRIAL = "IN_TRIAL",
    LAWFIRMINTERESTED = "LAWFIRM_INTERESTED",
    LAWFIRMLEAD = "LAWFIRM_LEAD",
    LAWFIRMNOTINTERESTED = "LAWFIRM_NOT_INTERESTED",
    NOTINTERESTEDFEESPLITTINGETHICS = "NOT_INTERESTED_FEE_SPLITTING_ETHICS",
    NOTINTERESTEDREFUNDETHICS = "NOT_INTERESTED_REFUND_ETHICS",
    ONBOARDING = "ONBOARDING",
    TEMPORARILYTURNEDOFF = "TEMPORARILY_TURNED_OFF",
    TERMINATEDFRAUD = "TERMINATED_FRAUD",
    TERMINATEDPOORSERVICE = "TERMINATED_POOR_SERVICE",
    TERMINATEDPOORSUCCESS = "TERMINATED_POOR_SUCCESS",
    UNDERREVIEW = "UNDER_REVIEW"
}
/**
 *
 * @export
 * @interface LawfirmPayoutDomain
 */
export interface LawfirmPayoutDomain {
    /**
     *
     * @type {number}
     * @memberof LawfirmPayoutDomain
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    dueDate?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmPayoutDomain
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmPayoutDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    lawfirmPayoutId?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmPayoutDomain
     */
    processingFeeActual?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmPayoutDomain
     */
    processingFeeCharged?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    sourceCasePaymentId?: string;
    /**
     *
     * @type {StripeTransferDomain}
     * @memberof LawfirmPayoutDomain
     */
    stripeTransfer?: StripeTransferDomain;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    transactionDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    transactionMethod?: LawfirmPayoutDomainTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    transactionReferenceId?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmPayoutDomain
     */
    updatedDueDate?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmPayoutDomainTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface LawfirmPictureRequest
 */
export interface LawfirmPictureRequest {
    /**
     *
     * @type {string}
     * @memberof LawfirmPictureRequest
     */
    coverPhotoBase64ImageData?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmPictureRequest
     */
    profileBase64ImageData?: string;
}
/**
 *
 * @export
 * @interface LawfirmRatesResponse
 */
export interface LawfirmRatesResponse {
    /**
     *
     * @type {boolean}
     * @memberof LawfirmRatesResponse
     */
    acceptsPaymentPlans?: boolean;
    /**
     *
     * @type {number}
     * @memberof LawfirmRatesResponse
     */
    capacityLeft?: number;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmRatesResponse
     */
    chosenLawfirm?: boolean;
    /**
     *
     * @type {string}
     * @memberof LawfirmRatesResponse
     */
    feeLevel?: LawfirmRatesResponseFeeLevelEnum;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmRatesResponse
     */
    handlesAccidents?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmRatesResponse
     */
    handlesPastDue?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof LawfirmRatesResponse
     */
    ineligibleMatchReasons?: Array<LawfirmRatesResponseIneligibleMatchReasonsEnum>;
    /**
     *
     * @type {number}
     * @memberof LawfirmRatesResponse
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmRatesResponse
     */
    lawfirmName?: string;
    /**
     *
     * @type {Array<LineItem>}
     * @memberof LawfirmRatesResponse
     */
    lineItems?: Array<LineItem>;
    /**
     *
     * @type {string}
     * @memberof LawfirmRatesResponse
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmRatesResponse
     */
    primaryEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmRatesResponse
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmRatesResponse
     */
    rank?: number;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmRatesResponse
     */
    refundEligible?: boolean;
    /**
     *
     * @type {number}
     * @memberof LawfirmRatesResponse
     */
    successRate?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmRatesResponse
     */
    totalLegalFee?: number;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmRatesResponse
     */
    vacationModeOn?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmRatesResponseFeeLevelEnum {
    ACCOUNTCLASSFEE = "ACCOUNT_CLASS_FEE",
    ACCOUNTVIOLATIONFEE = "ACCOUNT_VIOLATION_FEE",
    COURTFEE = "COURT_FEE",
    COURTVIOLATIONFEE = "COURT_VIOLATION_FEE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmRatesResponseIneligibleMatchReasonsEnum {
    DAILYCAPACITYBREACHED = "DAILY_CAPACITY_BREACHED",
    ONVACATION = "ON_VACATION",
    OUTOFCAPACITY = "OUT_OF_CAPACITY",
    OUTPRICED = "OUT_PRICED",
    OUTRANKED = "OUT_RANKED"
}
/**
 *
 * @export
 * @interface LawfirmRedirectModel
 */
export interface LawfirmRedirectModel {
    /**
     *
     * @type {string}
     * @memberof LawfirmRedirectModel
     */
    landingPageType?: LawfirmRedirectModelLandingPageTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmRedirectModel
     */
    landingPageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmRedirectModel
     */
    redirectUrl?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmRedirectModelLandingPageTypeEnum {
    DEBUG = "DEBUG",
    SEO = "SEO",
    VANITY = "VANITY"
}
/**
 *
 * @export
 * @interface LawfirmSettingsDomainReq
 */
export interface LawfirmSettingsDomainReq {
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainReq
     */
    acceptsAccidents?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainReq
     */
    acceptsPastDue?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainReq
     */
    acceptsPaymentPlans?: boolean;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainReq
     */
    defaultTrafficTicketFee?: number;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainReq
     */
    isVacationMode?: boolean;
    /**
     *
     * @type {TimestampReq}
     * @memberof LawfirmSettingsDomainReq
     */
    latestCaseAssignmentDateUtc?: TimestampReq;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainReq
     */
    maxCaseCapacity?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainReq
     */
    maxCaseCapacityPerDay?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainReq
     */
    mvsRecipient?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainReq
     */
    referralFee?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainReq
     */
    referralFeeType?: LawfirmSettingsDomainReqReferralFeeTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainReq
     */
    vacationModeEndDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainReq
     */
    vacationModeReason?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmSettingsDomainReqReferralFeeTypeEnum {
    FLATFEEINCENTS = "FLAT_FEE_IN_CENTS",
    PERCENT = "PERCENT"
}
/**
 *
 * @export
 * @interface LawfirmSettingsDomainRes
 */
export interface LawfirmSettingsDomainRes {
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainRes
     */
    acceptsAccidents?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainRes
     */
    acceptsPastDue?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainRes
     */
    acceptsPaymentPlans?: boolean;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainRes
     */
    defaultTrafficTicketFee?: number;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmSettingsDomainRes
     */
    isVacationMode?: boolean;
    /**
     *
     * @type {TimestampRes}
     * @memberof LawfirmSettingsDomainRes
     */
    latestCaseAssignmentDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainRes
     */
    maxCaseCapacity?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainRes
     */
    maxCaseCapacityPerDay?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainRes
     */
    mvsRecipient?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmSettingsDomainRes
     */
    referralFee?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainRes
     */
    referralFeeType?: LawfirmSettingsDomainResReferralFeeTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainRes
     */
    vacationModeEndDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmSettingsDomainRes
     */
    vacationModeReason?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmSettingsDomainResReferralFeeTypeEnum {
    FLATFEEINCENTS = "FLAT_FEE_IN_CENTS",
    PERCENT = "PERCENT"
}
/**
 *
 * @export
 * @interface LawfirmStorefrontModel
 */
export interface LawfirmStorefrontModel {
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    aboutUsBlurb?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmStorefrontModel
     */
    activeCaseCount?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmStorefrontModel
     */
    averageRating?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    coverPhotoUrl?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmStorefrontModel
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    lawfirmState?: LawfirmStorefrontModelLawfirmStateEnum;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {number}
     * @memberof LawfirmStorefrontModel
     */
    resolvedCaseCount?: number;
    /**
     *
     * @type {number}
     * @memberof LawfirmStorefrontModel
     */
    reviewCount?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    reviewToDisplay?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    reviewerName?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    seoUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    tagLine?: string;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmStorefrontModel
     */
    vacationModeOn?: boolean;
    /**
     *
     * @type {string}
     * @memberof LawfirmStorefrontModel
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawfirmStorefrontModelLawfirmStateEnum {
    ACCOUNTCLOSED = "ACCOUNT_CLOSED",
    DUPLICATE = "DUPLICATE",
    ESTABLISHED = "ESTABLISHED",
    FUTURELEAD = "FUTURE_LEAD",
    INTRIAL = "IN_TRIAL",
    LAWFIRMINTERESTED = "LAWFIRM_INTERESTED",
    LAWFIRMLEAD = "LAWFIRM_LEAD",
    LAWFIRMNOTINTERESTED = "LAWFIRM_NOT_INTERESTED",
    NOTINTERESTEDFEESPLITTINGETHICS = "NOT_INTERESTED_FEE_SPLITTING_ETHICS",
    NOTINTERESTEDREFUNDETHICS = "NOT_INTERESTED_REFUND_ETHICS",
    ONBOARDING = "ONBOARDING",
    TEMPORARILYTURNEDOFF = "TEMPORARILY_TURNED_OFF",
    TERMINATEDFRAUD = "TERMINATED_FRAUD",
    TERMINATEDPOORSERVICE = "TERMINATED_POOR_SERVICE",
    TERMINATEDPOORSUCCESS = "TERMINATED_POOR_SUCCESS",
    UNDERREVIEW = "UNDER_REVIEW"
}
/**
 *
 * @export
 * @interface LawfirmVacationRequest
 */
export interface LawfirmVacationRequest {
    /**
     *
     * @type {number}
     * @memberof LawfirmVacationRequest
     */
    localTimezoneOffsetInHours?: number;
    /**
     *
     * @type {string}
     * @memberof LawfirmVacationRequest
     */
    vacationEndDateUtc?: string;
    /**
     *
     * @type {boolean}
     * @memberof LawfirmVacationRequest
     */
    vacationModeEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof LawfirmVacationRequest
     */
    vacationReason?: string;
}
/**
 *
 * @export
 * @interface LawfirmsRatesResponse
 */
export interface LawfirmsRatesResponse {
    /**
     *
     * @type {Array<LawfirmRatesResponse>}
     * @memberof LawfirmsRatesResponse
     */
    rates?: Array<LawfirmRatesResponse>;
}
/**
 *
 * @export
 * @interface LawyerLicenseModel
 */
export interface LawyerLicenseModel {
    /**
     *
     * @type {string}
     * @memberof LawyerLicenseModel
     */
    barLicenseIssueDate?: string;
    /**
     *
     * @type {number}
     * @memberof LawyerLicenseModel
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof LawyerLicenseModel
     */
    licenseType?: LawyerLicenseModelLicenseTypeEnum;
    /**
     *
     * @type {string}
     * @memberof LawyerLicenseModel
     */
    regionCode?: LawyerLicenseModelRegionCodeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawyerLicenseModelLicenseTypeEnum {
    BAR = "BAR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawyerLicenseModelRegionCodeEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface LawyerModel
 */
export interface LawyerModel {
    /**
     *
     * @type {TimestampRes}
     * @memberof LawyerModel
     */
    creationDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    firstname?: string;
    /**
     *
     * @type {boolean}
     * @memberof LawyerModel
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawyerModel
     */
    isLawfirmAccessGranted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof LawyerModel
     */
    isUserAccountEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    jobTitle?: LawyerModelJobTitleEnum;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    lawSchool?: string;
    /**
     *
     * @type {number}
     * @memberof LawyerModel
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    licensedDateUtc?: string;
    /**
     *
     * @type {Array<LawyerLicenseModel>}
     * @memberof LawyerModel
     */
    licenses?: Array<LawyerLicenseModel>;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    otherJobTitle?: string;
    /**
     *
     * @type {Array<PhoneNumberDomain>}
     * @memberof LawyerModel
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
    /**
     *
     * @type {string}
     * @memberof LawyerModel
     */
    profilePicture?: string;
    /**
     *
     * @type {number}
     * @memberof LawyerModel
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LawyerModelJobTitleEnum {
    ACCOUNTANT = "ACCOUNTANT",
    ATTORNEY = "ATTORNEY",
    ATTORNEYASSOCIATE = "ATTORNEY_ASSOCIATE",
    ATTORNEYCOUNSEL = "ATTORNEY_COUNSEL",
    ATTORNEYMANAGINGPARTNER = "ATTORNEY_MANAGING_PARTNER",
    ATTORNEYPARTNER = "ATTORNEY_PARTNER",
    ATTORNEYSTAFF = "ATTORNEY_STAFF",
    CUSTOMERSERVICEREP = "CUSTOMER_SERVICE_REP",
    LEGALASSISTANT = "LEGAL_ASSISTANT",
    LEGALINTERN = "LEGAL_INTERN",
    LEGALSECRETARY = "LEGAL_SECRETARY",
    OTHER = "OTHER",
    PARALEGAL = "PARALEGAL"
}
/**
 *
 * @export
 * @interface LineItem
 */
export interface LineItem {
    /**
     *
     * @type {string}
     * @memberof LineItem
     */
    additionalDescription?: string;
    /**
     *
     * @type {number}
     * @memberof LineItem
     */
    feeAmount?: number;
    /**
     *
     * @type {string}
     * @memberof LineItem
     */
    lineItem?: LineItemLineItemEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LineItemLineItemEnum {
    ACCIDENTFEE = "ACCIDENT_FEE",
    BASELEGALFEE = "BASE_LEGAL_FEE",
    BONDFEE = "BOND_FEE",
    BOOKINGFEE = "BOOKING_FEE",
    CDLFEE = "CDL_FEE",
    DISPUTEFEE = "DISPUTE_FEE",
    FINEPAYMENT = "FINE_PAYMENT",
    FTAFEE = "FTA_FEE",
    LATEFEE = "LATE_FEE",
    MBGREFUND = "MBG_REFUND",
    MVSFEE = "MVS_FEE",
    OTHER = "OTHER",
    OTRCREDIT = "OTR_CREDIT",
    PAYMENTPLANSERVICEFEE = "PAYMENT_PLAN_SERVICE_FEE",
    WARRANTFEE = "WARRANT_FEE"
}
/**
 *
 * @export
 * @interface LineItemModel
 */
export interface LineItemModel {
    /**
     *
     * @type {string}
     * @memberof LineItemModel
     */
    additionalDescription?: string;
    /**
     *
     * @type {number}
     * @memberof LineItemModel
     */
    feeAmount?: number;
    /**
     *
     * @type {string}
     * @memberof LineItemModel
     */
    feeDescription?: string;
    /**
     *
     * @type {string}
     * @memberof LineItemModel
     */
    lineItemOwner?: LineItemModelLineItemOwnerEnum;
    /**
     *
     * @type {string}
     * @memberof LineItemModel
     */
    lineItemType?: LineItemModelLineItemTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LineItemModelLineItemOwnerEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LineItemModelLineItemTypeEnum {
    ACCIDENTFEE = "ACCIDENT_FEE",
    BASELEGALFEE = "BASE_LEGAL_FEE",
    BONDFEE = "BOND_FEE",
    BOOKINGFEE = "BOOKING_FEE",
    CDLFEE = "CDL_FEE",
    DISPUTEFEE = "DISPUTE_FEE",
    FINEPAYMENT = "FINE_PAYMENT",
    FTAFEE = "FTA_FEE",
    LATEFEE = "LATE_FEE",
    MBGREFUND = "MBG_REFUND",
    MVSFEE = "MVS_FEE",
    OTHER = "OTHER",
    OTRCREDIT = "OTR_CREDIT",
    PAYMENTPLANSERVICEFEE = "PAYMENT_PLAN_SERVICE_FEE",
    WARRANTFEE = "WARRANT_FEE"
}
/**
 *
 * @export
 * @interface LineItemRequest
 */
export interface LineItemRequest {
    /**
     *
     * @type {string}
     * @memberof LineItemRequest
     */
    additionalDescription?: string;
    /**
     *
     * @type {string}
     * @memberof LineItemRequest
     */
    chargeDescription?: string;
    /**
     *
     * @type {number}
     * @memberof LineItemRequest
     */
    feeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof LineItemRequest
     */
    lawfirmReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {string}
     * @memberof LineItemRequest
     */
    lineItemOwner?: LineItemRequestLineItemOwnerEnum;
    /**
     *
     * @type {string}
     * @memberof LineItemRequest
     */
    lineItemType?: LineItemRequestLineItemTypeEnum;
    /**
     *
     * @type {number}
     * @memberof LineItemRequest
     */
    otrMarketingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {number}
     * @memberof LineItemRequest
     */
    otrReferralCodeAdjustmentInCents?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LineItemRequestLineItemOwnerEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum LineItemRequestLineItemTypeEnum {
    ACCIDENTFEE = "ACCIDENT_FEE",
    BASELEGALFEE = "BASE_LEGAL_FEE",
    BONDFEE = "BOND_FEE",
    BOOKINGFEE = "BOOKING_FEE",
    CDLFEE = "CDL_FEE",
    DISPUTEFEE = "DISPUTE_FEE",
    FINEPAYMENT = "FINE_PAYMENT",
    FTAFEE = "FTA_FEE",
    LATEFEE = "LATE_FEE",
    MBGREFUND = "MBG_REFUND",
    MVSFEE = "MVS_FEE",
    OTHER = "OTHER",
    OTRCREDIT = "OTR_CREDIT",
    PAYMENTPLANSERVICEFEE = "PAYMENT_PLAN_SERVICE_FEE",
    WARRANTFEE = "WARRANT_FEE"
}
/**
 *
 * @export
 * @interface ListBillingProductsResponse
 */
export interface ListBillingProductsResponse {
    /**
     *
     * @type {Array<BillingProductModel>}
     * @memberof ListBillingProductsResponse
     */
    products?: Array<BillingProductModel>;
}
/**
 *
 * @export
 * @interface ListBillingSubscriptionsResponse
 */
export interface ListBillingSubscriptionsResponse {
    /**
     *
     * @type {Array<BillingSubscriptionModel>}
     * @memberof ListBillingSubscriptionsResponse
     */
    subscriptions?: Array<BillingSubscriptionModel>;
}
/**
 *
 * @export
 * @interface ListContactTimelineResponse
 */
export interface ListContactTimelineResponse {
    /**
     *
     * @type {Array<ContactTimelineResponse>}
     * @memberof ListContactTimelineResponse
     */
    contacts?: Array<ContactTimelineResponse>;
}
/**
 *
 * @export
 * @interface ListCostItemsForCustomerResponse
 */
export interface ListCostItemsForCustomerResponse {
    /**
     *
     * @type {number}
     * @memberof ListCostItemsForCustomerResponse
     */
    clientBaseCostInCents?: number;
    /**
     *
     * @type {number}
     * @memberof ListCostItemsForCustomerResponse
     */
    clientTotalCostInCents?: number;
    /**
     *
     * @type {Array<CasePaymentModel>}
     * @memberof ListCostItemsForCustomerResponse
     */
    futurePayments?: Array<CasePaymentModel>;
    /**
     *
     * @type {Array<LineItemModel>}
     * @memberof ListCostItemsForCustomerResponse
     */
    lineItems?: Array<LineItemModel>;
    /**
     *
     * @type {number}
     * @memberof ListCostItemsForCustomerResponse
     */
    totalRefCodeAdjustmentInCents?: number;
}
/**
 *
 * @export
 * @interface ListDashboardCasesResponse
 */
export interface ListDashboardCasesResponse {
    /**
     *
     * @type {Array<DashboardCaseModel>}
     * @memberof ListDashboardCasesResponse
     */
    cases?: Array<DashboardCaseModel>;
    /**
     *
     * @type {string}
     * @memberof ListDashboardCasesResponse
     */
    previousPageToken?: string;
}
/**
 *
 * @export
 * @interface ListEligibleStatusResponse
 */
export interface ListEligibleStatusResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof ListEligibleStatusResponse
     */
    statuses?: Array<ListEligibleStatusResponseStatusesEnum>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListEligibleStatusResponseStatusesEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface ListLawfirmAuditEventsByCursorResponse
 */
export interface ListLawfirmAuditEventsByCursorResponse {
    /**
     *
     * @type {CursorModel}
     * @memberof ListLawfirmAuditEventsByCursorResponse
     */
    cursorModel?: CursorModel;
    /**
     *
     * @type {Array<LawfirmAuditEventModel>}
     * @memberof ListLawfirmAuditEventsByCursorResponse
     */
    models?: Array<LawfirmAuditEventModel>;
    /**
     *
     * @type {number}
     * @memberof ListLawfirmAuditEventsByCursorResponse
     */
    totalRecords?: number;
}
/**
 *
 * @export
 * @interface ListLawfirmStorefrontsResponse
 */
export interface ListLawfirmStorefrontsResponse {
    /**
     *
     * @type {Array<LawfirmStorefrontModel>}
     * @memberof ListLawfirmStorefrontsResponse
     */
    storefronts?: Array<LawfirmStorefrontModel>;
    /**
     *
     * @type {number}
     * @memberof ListLawfirmStorefrontsResponse
     */
    totalPages?: number;
    /**
     *
     * @type {number}
     * @memberof ListLawfirmStorefrontsResponse
     */
    totalRecords?: number;
}
/**
 *
 * @export
 * @interface ListLawfirmSurchargeModel
 */
export interface ListLawfirmSurchargeModel {
    /**
     *
     * @type {string}
     * @memberof ListLawfirmSurchargeModel
     */
    feature?: ListLawfirmSurchargeModelFeatureEnum;
    /**
     *
     * @type {string}
     * @memberof ListLawfirmSurchargeModel
     */
    feeType?: ListLawfirmSurchargeModelFeeTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ListLawfirmSurchargeModel
     */
    feeValue?: string;
    /**
     *
     * @type {number}
     * @memberof ListLawfirmSurchargeModel
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof ListLawfirmSurchargeModel
     */
    isEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof ListLawfirmSurchargeModel
     */
    refundEligibility?: ListLawfirmSurchargeModelRefundEligibilityEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListLawfirmSurchargeModelFeatureEnum {
    BLACKBOX = "BLACK_BOX",
    STATEPAGE = "STATE_PAGE",
    STOREFRONT = "STOREFRONT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListLawfirmSurchargeModelFeeTypeEnum {
    FLATFEEINCENTS = "FLAT_FEE_IN_CENTS",
    FORMULA = "FORMULA",
    PERCENT = "PERCENT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListLawfirmSurchargeModelRefundEligibilityEnum {
    DEFAULT = "DEFAULT",
    NONREFUNDABLE = "NON_REFUNDABLE",
    SURCHARGEONLY = "SURCHARGE_ONLY"
}
/**
 *
 * @export
 * @interface ListLawfirmSurchargeTypeModel
 */
export interface ListLawfirmSurchargeTypeModel {
    /**
     *
     * @type {Array<ListLawfirmSurchargeModel>}
     * @memberof ListLawfirmSurchargeTypeModel
     */
    fees?: Array<ListLawfirmSurchargeModel>;
    /**
     *
     * @type {string}
     * @memberof ListLawfirmSurchargeTypeModel
     */
    type?: ListLawfirmSurchargeTypeModelTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListLawfirmSurchargeTypeModelTypeEnum {
    CDL = "CDL",
    FAILURETOAPPEAR = "FAILURE_TO_APPEAR",
    LATE = "LATE",
    MULTIPLEVIOLATIONS = "MULTIPLE_VIOLATIONS",
    OUTOFSTATE = "OUT_OF_STATE",
    SHORTNOTICE = "SHORT_NOTICE",
    WARRANT = "WARRANT"
}
/**
 *
 * @export
 * @interface ListLawfirmSurchargesResponse
 */
export interface ListLawfirmSurchargesResponse {
    /**
     *
     * @type {Array<ListLawfirmSurchargeTypeModel>}
     * @memberof ListLawfirmSurchargesResponse
     */
    surcharges?: Array<ListLawfirmSurchargeTypeModel>;
}
/**
 *
 * @export
 * @interface ListReferralsResponse
 */
export interface ListReferralsResponse {
    /**
     *
     * @type {AggregateReferralCredit}
     * @memberof ListReferralsResponse
     */
    aggregates?: AggregateReferralCredit;
    /**
     *
     * @type {Array<ReferralResponseByUser>}
     * @memberof ListReferralsResponse
     */
    referralsPerUser?: Array<ReferralResponseByUser>;
}
/**
 *
 * @export
 * @interface ListReviewsResponse
 */
export interface ListReviewsResponse {
    /**
     *
     * @type {AggregateRatingMetrics}
     * @memberof ListReviewsResponse
     */
    aggregates?: AggregateRatingMetrics;
    /**
     *
     * @type {CursorModel}
     * @memberof ListReviewsResponse
     */
    cursorModel?: CursorModel;
    /**
     *
     * @type {Array<CustomerReview>}
     * @memberof ListReviewsResponse
     */
    reviews?: Array<CustomerReview>;
}
/**
 *
 * @export
 * @interface ListSubscriptionInvoicesResponse
 */
export interface ListSubscriptionInvoicesResponse {
    /**
     *
     * @type {Array<BillingInvoiceModel>}
     * @memberof ListSubscriptionInvoicesResponse
     */
    invoices?: Array<BillingInvoiceModel>;
}
/**
 *
 * @export
 * @interface ListViolationClassificationResponse
 */
export interface ListViolationClassificationResponse {
    /**
     *
     * @type {Array<ViolationClassificationModel>}
     * @memberof ListViolationClassificationResponse
     */
    models?: Array<ViolationClassificationModel>;
}
/**
 *
 * @export
 * @interface LobEvent
 */
export interface LobEvent {
    /**
     *
     * @type {boolean}
     * @memberof LobEvent
     */
    enabled_for_test?: boolean;
    /**
     *
     * @type {string}
     * @memberof LobEvent
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof LobEvent
     */
    resource?: string;
}
/**
 *
 * @export
 * @interface LobEventRequest
 */
export interface LobEventRequest {
    /**
     *
     * @type {string}
     * @memberof LobEventRequest
     */
    date_created?: string;
    /**
     *
     * @type {LobEvent}
     * @memberof LobEventRequest
     */
    event_type?: LobEvent;
    /**
     *
     * @type {string}
     * @memberof LobEventRequest
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof LobEventRequest
     */
    reference_id?: string;
}
/**
 *
 * @export
 * @interface LobMailingAddress
 */
export interface LobMailingAddress {
    /**
     *
     * @type {string}
     * @memberof LobMailingAddress
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof LobMailingAddress
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof LobMailingAddress
     */
    line1?: string;
    /**
     *
     * @type {string}
     * @memberof LobMailingAddress
     */
    line2?: string;
    /**
     *
     * @type {string}
     * @memberof LobMailingAddress
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof LobMailingAddress
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface LocalTime
 */
export interface LocalTime {
    /**
     *
     * @type {number}
     * @memberof LocalTime
     */
    hour?: number;
    /**
     *
     * @type {number}
     * @memberof LocalTime
     */
    minute?: number;
    /**
     *
     * @type {number}
     * @memberof LocalTime
     */
    nano?: number;
    /**
     *
     * @type {number}
     * @memberof LocalTime
     */
    second?: number;
}
/**
 *
 * @export
 * @interface LostCaseWithTransferNotReversed
 */
export interface LostCaseWithTransferNotReversed {
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    actualCustomerCost?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    amountRefunded?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    applicationFeeRefundAmount?: number;
    /**
     *
     * @type {string}
     * @memberof LostCaseWithTransferNotReversed
     */
    caseId?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof LostCaseWithTransferNotReversed
     */
    caseResolutionDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof LostCaseWithTransferNotReversed
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof LostCaseWithTransferNotReversed
     */
    lastName?: string;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    lawfirmGrossRevenue?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof LostCaseWithTransferNotReversed
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    originalApplicationFee?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    originalCustomerCost?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    originalTransferAmount?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    otrIncome?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    platformFee?: number;
    /**
     *
     * @type {string}
     * @memberof LostCaseWithTransferNotReversed
     */
    refundOwner?: LostCaseWithTransferNotReversedRefundOwnerEnum;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    stripeFee?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    transferAmountRefunded?: number;
    /**
     *
     * @type {number}
     * @memberof LostCaseWithTransferNotReversed
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum LostCaseWithTransferNotReversedRefundOwnerEnum {
    LAWFIRM = "LAWFIRM",
    NONE = "NONE",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface MarkCaseAsResolvedRequest
 */
export interface MarkCaseAsResolvedRequest {
    /**
     *
     * @type {number}
     * @memberof MarkCaseAsResolvedRequest
     */
    adjustedFineAmount?: number;
    /**
     *
     * @type {number}
     * @memberof MarkCaseAsResolvedRequest
     */
    adjustedPointCount?: number;
    /**
     *
     * @type {number}
     * @memberof MarkCaseAsResolvedRequest
     */
    originalPointCount?: number;
    /**
     *
     * @type {string}
     * @memberof MarkCaseAsResolvedRequest
     */
    resolutionStatus?: MarkCaseAsResolvedRequestResolutionStatusEnum;
    /**
     *
     * @type {string}
     * @memberof MarkCaseAsResolvedRequest
     */
    resolutionSummary?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum MarkCaseAsResolvedRequestResolutionStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface MarkCaseAsResolvedResponse
 */
export interface MarkCaseAsResolvedResponse {
    /**
     *
     * @type {string}
     * @memberof MarkCaseAsResolvedResponse
     */
    caseStatus?: MarkCaseAsResolvedResponseCaseStatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof MarkCaseAsResolvedResponse
     */
    isDeprecated?: boolean;
    /**
     *
     * @type {string}
     * @memberof MarkCaseAsResolvedResponse
     */
    lawfirmFriendlyDescription?: string;
    /**
     *
     * @type {string}
     * @memberof MarkCaseAsResolvedResponse
     */
    lawfirmFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof MarkCaseAsResolvedResponse
     */
    statusCategory?: MarkCaseAsResolvedResponseStatusCategoryEnum;
    /**
     *
     * @type {number}
     * @memberof MarkCaseAsResolvedResponse
     */
    statusId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum MarkCaseAsResolvedResponseCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum MarkCaseAsResolvedResponseStatusCategoryEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface MatchCaseResponse
 */
export interface MatchCaseResponse {
    /**
     *
     * @type {number}
     * @memberof MatchCaseResponse
     */
    chanceOfSuccess?: number;
    /**
     *
     * @type {number}
     * @memberof MatchCaseResponse
     */
    projectedInsuranceCostInCents?: number;
    /**
     *
     * @type {MatchInnerCaseResponse}
     * @memberof MatchCaseResponse
     */
    theCase?: MatchInnerCaseResponse;
}
/**
 *
 * @export
 * @interface MatchCitationResponse
 */
export interface MatchCitationResponse {
    /**
     *
     * @type {AddressDomain}
     * @memberof MatchCitationResponse
     */
    address?: AddressDomain;
    /**
     *
     * @type {number}
     * @memberof MatchCitationResponse
     */
    citationId?: number;
    /**
     *
     * @type {PureDate}
     * @memberof MatchCitationResponse
     */
    citationIssueDate?: PureDate;
    /**
     *
     * @type {Timestamp}
     * @memberof MatchCitationResponse
     */
    citationIssueDateUTC?: Timestamp;
    /**
     *
     * @type {CourtDomain}
     * @memberof MatchCitationResponse
     */
    court?: CourtDomain;
    /**
     *
     * @type {number}
     * @memberof MatchCitationResponse
     */
    fineAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof MatchCitationResponse
     */
    involvesAccident?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof MatchCitationResponse
     */
    isDeleted?: boolean;
    /**
     *
     * @type {string}
     * @memberof MatchCitationResponse
     */
    ticketImageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof MatchCitationResponse
     */
    ticketNumber?: string;
    /**
     *
     * @type {Array<ViolationResponse>}
     * @memberof MatchCitationResponse
     */
    violations?: Array<ViolationResponse>;
}
/**
 *
 * @export
 * @interface MatchInnerCaseResponse
 */
export interface MatchInnerCaseResponse {
    /**
     *
     * @type {string}
     * @memberof MatchInnerCaseResponse
     */
    caseId?: string;
    /**
     *
     * @type {MatchCitationResponse}
     * @memberof MatchInnerCaseResponse
     */
    citation?: MatchCitationResponse;
    /**
     *
     * @type {MatchLawfirmCaseResponse}
     * @memberof MatchInnerCaseResponse
     */
    lawfirmCaseDecision?: MatchLawfirmCaseResponse;
    /**
     *
     * @type {boolean}
     * @memberof MatchInnerCaseResponse
     */
    lawfirmCodeApplied?: boolean;
    /**
     *
     * @type {Array<CaseViolationPenalty>}
     * @memberof MatchInnerCaseResponse
     */
    maxPenalties?: Array<CaseViolationPenalty>;
    /**
     *
     * @type {string}
     * @memberof MatchInnerCaseResponse
     */
    referralCodeOwner?: MatchInnerCaseResponseReferralCodeOwnerEnum;
    /**
     *
     * @type {string}
     * @memberof MatchInnerCaseResponse
     */
    refundEligibility?: MatchInnerCaseResponseRefundEligibilityEnum;
    /**
     *
     * @type {string}
     * @memberof MatchInnerCaseResponse
     */
    uiReasonMsg?: string;
    /**
     *
     * @type {number}
     * @memberof MatchInnerCaseResponse
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum MatchInnerCaseResponseReferralCodeOwnerEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum MatchInnerCaseResponseRefundEligibilityEnum {
    FULLREFUND = "FULL_REFUND",
    NOREFUND = "NO_REFUND",
    PARTIALREFUND = "PARTIAL_REFUND"
}
/**
 *
 * @export
 * @interface MatchLawfirmCaseResponse
 */
export interface MatchLawfirmCaseResponse {
    /**
     *
     * @type {number}
     * @memberof MatchLawfirmCaseResponse
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof MatchLawfirmCaseResponse
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof MatchLawfirmCaseResponse
     */
    obfuscatedPictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof MatchLawfirmCaseResponse
     */
    profilePictureUrl?: string;
}
/**
 *
 * @export
 * @interface MergeStatusReport
 */
export interface MergeStatusReport {
    /**
     *
     * @type {Array<MergeTableChange>}
     * @memberof MergeStatusReport
     */
    otherChanges?: Array<MergeTableChange>;
    /**
     *
     * @type {Array<MergeTableRecord>}
     * @memberof MergeStatusReport
     */
    tableMerges?: Array<MergeTableRecord>;
}
/**
 *
 * @export
 * @interface MergeTableChange
 */
export interface MergeTableChange {
    /**
     *
     * @type {string}
     * @memberof MergeTableChange
     */
    message?: string;
}
/**
 *
 * @export
 * @interface MergeTableRecord
 */
export interface MergeTableRecord {
    /**
     *
     * @type {string}
     * @memberof MergeTableRecord
     */
    tableName?: string;
    /**
     *
     * @type {number}
     * @memberof MergeTableRecord
     */
    updateRowCount?: number;
}
/**
 *
 * @export
 * @interface MergeTicketResponse
 */
export interface MergeTicketResponse {
    /**
     *
     * @type {boolean}
     * @memberof MergeTicketResponse
     */
    isSuccess?: boolean;
    /**
     *
     * @type {string}
     * @memberof MergeTicketResponse
     */
    log?: string;
    /**
     *
     * @type {string}
     * @memberof MergeTicketResponse
     */
    reason?: string;
}
/**
 *
 * @export
 * @interface MergeUserRequest
 */
export interface MergeUserRequest {
    /**
     *
     * @type {string}
     * @memberof MergeUserRequest
     */
    formerUserId?: string;
    /**
     *
     * @type {boolean}
     * @memberof MergeUserRequest
     */
    rollback?: boolean;
}
/**
 *
 * @export
 * @interface MergeUserResponse
 */
export interface MergeUserResponse {
    /**
     *
     * @type {MergeStatusReport}
     * @memberof MergeUserResponse
     */
    report?: MergeStatusReport;
}
/**
 *
 * @export
 * @interface MessageInputModel
 */
export interface MessageInputModel {
    /**
     *
     * @type {string}
     * @memberof MessageInputModel
     */
    author?: MessageInputModelAuthorEnum;
    /**
     *
     * @type {string}
     * @memberof MessageInputModel
     */
    encodedMediaData?: string;
    /**
     *
     * @type {string}
     * @memberof MessageInputModel
     */
    mediaType?: MessageInputModelMediaTypeEnum;
    /**
     *
     * @type {string}
     * @memberof MessageInputModel
     */
    messageBody?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum MessageInputModelAuthorEnum {
    ADMIN = "ADMIN",
    DEFENDANT = "DEFENDANT",
    LAWYER = "LAWYER",
    PARTNER = "PARTNER",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum MessageInputModelMediaTypeEnum {
    IMAGE = "IMAGE",
    PDF = "PDF"
}
/**
 *
 * @export
 * @interface MissingLawfirmPayoutResult
 */
export interface MissingLawfirmPayoutResult {
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    bookingConfirmedDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    caseStatus?: MissingLawfirmPayoutResultCaseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    lawfirmDecisionDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof MissingLawfirmPayoutResult
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    lawfirmName?: string;
    /**
     *
     * @type {number}
     * @memberof MissingLawfirmPayoutResult
     */
    numTransfers?: number;
    /**
     *
     * @type {number}
     * @memberof MissingLawfirmPayoutResult
     */
    outstandingTransferAmount?: number;
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    state?: MissingLawfirmPayoutResultStateEnum;
    /**
     *
     * @type {number}
     * @memberof MissingLawfirmPayoutResult
     */
    transferredAmount?: number;
    /**
     *
     * @type {number}
     * @memberof MissingLawfirmPayoutResult
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof MissingLawfirmPayoutResult
     */
    userName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum MissingLawfirmPayoutResultCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum MissingLawfirmPayoutResultStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface MissingPaymentDomain
 */
export interface MissingPaymentDomain {
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    bookingConfirmedDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    caseStatus?: MissingPaymentDomainCaseStatusEnum;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    caseSubtotal?: number;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    chargeAttempts?: number;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    disputedAmount?: number;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    dueLater?: number;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    lastAttemptDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    lawfirmDecisionDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    mostRecentChargeError?: string;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    mostRecentDueDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    overdue?: number;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    totalPaid?: number;
    /**
     *
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    userName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum MissingPaymentDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface NewUser
 */
export interface NewUser {
    /**
     *
     * @type {string}
     * @memberof NewUser
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof NewUser
     */
    firstname?: string;
    /**
     *
     * @type {boolean}
     * @memberof NewUser
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {string}
     * @memberof NewUser
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof NewUser
     */
    loginProvider?: NewUserLoginProviderEnum;
    /**
     *
     * @type {string}
     * @memberof NewUser
     */
    password?: string;
    /**
     *
     * @type {Array<PhoneNumberDomain>}
     * @memberof NewUser
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NewUserLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
 *
 * @export
 * @interface NewUserResponse
 */
export interface NewUserResponse {
    /**
     *
     * @type {string}
     * @memberof NewUserResponse
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof NewUserResponse
     */
    firstname?: string;
    /**
     *
     * @type {boolean}
     * @memberof NewUserResponse
     */
    isTestUser?: boolean;
    /**
     *
     * @type {string}
     * @memberof NewUserResponse
     */
    lastname?: string;
    /**
     *
     * @type {number}
     * @memberof NewUserResponse
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface NoLawyerAvailableRequest
 */
export interface NoLawyerAvailableRequest {
    /**
     *
     * @type {string}
     * @memberof NoLawyerAvailableRequest
     */
    offerPrice?: string;
    /**
     *
     * @type {string}
     * @memberof NoLawyerAvailableRequest
     */
    phoneNumber?: string;
}
/**
 *
 * @export
 * @interface NoViolationCitation
 */
export interface NoViolationCitation {
    /**
     *
     * @type {string}
     * @memberof NoViolationCitation
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof NoViolationCitation
     */
    caseStatus?: NoViolationCitationCaseStatusEnum;
    /**
     *
     * @type {number}
     * @memberof NoViolationCitation
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof NoViolationCitation
     */
    regionCode?: string;
    /**
     *
     * @type {string}
     * @memberof NoViolationCitation
     */
    unsignedImageUrl?: string;
    /**
     *
     * @type {string}
     * @memberof NoViolationCitation
     */
    uploadDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof NoViolationCitation
     */
    userId?: number;
    /**
     *
     * @type {Array<ViolationInput>}
     * @memberof NoViolationCitation
     */
    violations?: Array<ViolationInput>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NoViolationCitationCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
 *
 * @export
 * @interface NoteAuthor
 */
export interface NoteAuthor {
    /**
     *
     * @type {string}
     * @memberof NoteAuthor
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof NoteAuthor
     */
    lastName?: string;
    /**
     *
     * @type {number}
     * @memberof NoteAuthor
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface NoteDomain
 */
export interface NoteDomain {
    /**
     *
     * @type {NoteAuthor}
     * @memberof NoteDomain
     */
    author?: NoteAuthor;
    /**
     *
     * @type {Timestamp}
     * @memberof NoteDomain
     */
    deletedDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof NoteDomain
     */
    note?: string;
    /**
     *
     * @type {number}
     * @memberof NoteDomain
     */
    noteId?: number;
    /**
     *
     * @type {string}
     * @memberof NoteDomain
     */
    noteType?: NoteDomainNoteTypeEnum;
    /**
     *
     * @type {Timestamp}
     * @memberof NoteDomain
     */
    postedDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof NoteDomain
     */
    referenceId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NoteDomainNoteTypeEnum {
    PHONELEAD = "PHONE_LEAD"
}
/**
 *
 * @export
 * @interface NotificationEvent
 */
export interface NotificationEvent {
    /**
     *
     * @type {string}
     * @memberof NotificationEvent
     */
    eventDate?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationEvent
     */
    fullName?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationEvent
     */
    message?: string;
    /**
     *
     * @type {number}
     * @memberof NotificationEvent
     */
    notificationId?: number;
    /**
     *
     * @type {string}
     * @memberof NotificationEvent
     */
    referenceId?: string;
    /**
     *
     * @type {number}
     * @memberof NotificationEvent
     */
    unreadCount?: number;
}
/**
 *
 * @export
 * @interface NotificationEvents
 */
export interface NotificationEvents {
    /**
     *
     * @type {{ [key: string]: Array<NotificationEvent>; }}
     * @memberof NotificationEvents
     */
    events?: {
        [key: string]: Array<NotificationEvent>;
    };
    /**
     *
     * @type {number}
     * @memberof NotificationEvents
     */
    totalUnreadCount?: number;
}
/**
 *
 * @export
 * @interface OutgoingContactDomain
 */
export interface OutgoingContactDomain {
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    actionType?: string;
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    caseId?: string;
    /**
     *
     * @type {number}
     * @memberof OutgoingContactDomain
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    contactSentDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof OutgoingContactDomain
     */
    emailTemplateId?: number;
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    emailTemplateName?: string;
    /**
     *
     * @type {number}
     * @memberof OutgoingContactDomain
     */
    outgoingContactId?: number;
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    recipientEmailAddress?: string;
    /**
     *
     * @type {number}
     * @memberof OutgoingContactDomain
     */
    recipientUserId?: number;
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    senderFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof OutgoingContactDomain
     */
    senderLastName?: string;
    /**
     *
     * @type {number}
     * @memberof OutgoingContactDomain
     */
    senderUserId?: number;
}
/**
 *
 * @export
 * @interface Penalty
 */
export interface Penalty {
    /**
     *
     * @type {string}
     * @memberof Penalty
     */
    additionalTip?: string;
    /**
     *
     * @type {string}
     * @memberof Penalty
     */
    penaltyFriendlyDescription?: string;
    /**
     *
     * @type {boolean}
     * @memberof Penalty
     */
    penaltyMerged?: boolean;
    /**
     *
     * @type {string}
     * @memberof Penalty
     */
    penaltyType?: PenaltyPenaltyTypeEnum;
    /**
     *
     * @type {number}
     * @memberof Penalty
     */
    penaltyTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof Penalty
     */
    penaltyValue?: string;
    /**
     *
     * @type {string}
     * @memberof Penalty
     */
    vectorImageUrl?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PenaltyPenaltyTypeEnum {
    DEMERITPOINTS = "DEMERIT_POINTS",
    INCARCERATIONMAXDAYS = "INCARCERATION_MAX_DAYS",
    INCARCERATIONMINDAYS = "INCARCERATION_MIN_DAYS",
    INSURANCEPOINTS = "INSURANCE_POINTS",
    INSURANCERATEINCREASE = "INSURANCE_RATE_INCREASE",
    LICENSEREVOCATIONMAXDAYS = "LICENSE_REVOCATION_MAX_DAYS",
    LICENSEREVOCATIONMINDAYS = "LICENSE_REVOCATION_MIN_DAYS",
    LICENSESUSPENSIONMAXDAYS = "LICENSE_SUSPENSION_MAX_DAYS",
    LICENSESUSPENSIONMINDAYS = "LICENSE_SUSPENSION_MIN_DAYS",
    MANDATORYCOURTAPPEARANCE = "MANDATORY_COURT_APPEARANCE",
    MANDATORYCOURTAPPEARANCEWITHATTORNEY = "MANDATORY_COURT_APPEARANCE_WITH_ATTORNEY",
    MAXBAILAMOUNT = "MAX_BAIL_AMOUNT",
    MINBAILAMOUNT = "MIN_BAIL_AMOUNT",
    PROBATIONINDAYS = "PROBATION_IN_DAYS",
    TOTALBAILAMOUNT = "TOTAL_BAIL_AMOUNT"
}
/**
 *
 * @export
 * @interface PenaltyModel
 */
export interface PenaltyModel {
    /**
     *
     * @type {string}
     * @memberof PenaltyModel
     */
    additionalTip?: string;
    /**
     *
     * @type {string}
     * @memberof PenaltyModel
     */
    penaltyDataType?: string;
    /**
     *
     * @type {string}
     * @memberof PenaltyModel
     */
    penaltyFriendlyDescription?: string;
    /**
     *
     * @type {string}
     * @memberof PenaltyModel
     */
    penaltyType?: PenaltyModelPenaltyTypeEnum;
    /**
     *
     * @type {number}
     * @memberof PenaltyModel
     */
    penaltyTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof PenaltyModel
     */
    penaltyValue?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PenaltyModelPenaltyTypeEnum {
    DEMERITPOINTS = "DEMERIT_POINTS",
    INCARCERATIONMAXDAYS = "INCARCERATION_MAX_DAYS",
    INCARCERATIONMINDAYS = "INCARCERATION_MIN_DAYS",
    INSURANCEPOINTS = "INSURANCE_POINTS",
    INSURANCERATEINCREASE = "INSURANCE_RATE_INCREASE",
    LICENSEREVOCATIONMAXDAYS = "LICENSE_REVOCATION_MAX_DAYS",
    LICENSEREVOCATIONMINDAYS = "LICENSE_REVOCATION_MIN_DAYS",
    LICENSESUSPENSIONMAXDAYS = "LICENSE_SUSPENSION_MAX_DAYS",
    LICENSESUSPENSIONMINDAYS = "LICENSE_SUSPENSION_MIN_DAYS",
    MANDATORYCOURTAPPEARANCE = "MANDATORY_COURT_APPEARANCE",
    MANDATORYCOURTAPPEARANCEWITHATTORNEY = "MANDATORY_COURT_APPEARANCE_WITH_ATTORNEY",
    MAXBAILAMOUNT = "MAX_BAIL_AMOUNT",
    MINBAILAMOUNT = "MIN_BAIL_AMOUNT",
    PROBATIONINDAYS = "PROBATION_IN_DAYS",
    TOTALBAILAMOUNT = "TOTAL_BAIL_AMOUNT"
}
/**
 *
 * @export
 * @interface PenaltyRequest
 */
export interface PenaltyRequest {
    /**
     *
     * @type {number}
     * @memberof PenaltyRequest
     */
    penaltyTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof PenaltyRequest
     */
    penaltyValue?: string;
}
/**
 *
 * @export
 * @interface PersistTicketEvaluationRequest
 */
export interface PersistTicketEvaluationRequest {
    /**
     *
     * @type {number}
     * @memberof PersistTicketEvaluationRequest
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof PersistTicketEvaluationRequest
     */
    citationState?: string;
    /**
     *
     * @type {string}
     * @memberof PersistTicketEvaluationRequest
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof PersistTicketEvaluationRequest
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof PersistTicketEvaluationRequest
     */
    source?: PersistTicketEvaluationRequestSourceEnum;
    /**
     *
     * @type {TimestampReq}
     * @memberof PersistTicketEvaluationRequest
     */
    submissionDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof PersistTicketEvaluationRequest
     */
    visitorName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PersistTicketEvaluationRequestSourceEnum {
    OTREXITPOPUP = "OTR_EXIT_POPUP",
    QUARANTINELANDINGPAGE = "QUARANTINE_LANDING_PAGE",
    TICKETREVIEWPAGE = "TICKET_REVIEW_PAGE"
}
/**
 *
 * @export
 * @interface PhoneNumberDomain
 */
export interface PhoneNumberDomain {
    /**
     *
     * @type {Timestamp}
     * @memberof PhoneNumberDomain
     */
    creationDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomain
     */
    entityType?: PhoneNumberDomainEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomain
     */
    extension?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof PhoneNumberDomain
     */
    lastUpdatedDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomain
     */
    phoneNumber?: string;
    /**
     *
     * @type {number}
     * @memberof PhoneNumberDomain
     */
    phoneNumberId?: number;
    /**
     *
     * @type {number}
     * @memberof PhoneNumberDomain
     */
    referenceId?: number;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomain
     */
    type?: PhoneNumberDomainTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PhoneNumberDomainEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PhoneNumberDomainTypeEnum {
    HOME = "HOME",
    MOBILE = "MOBILE",
    NOTSPECIFIED = "NOT_SPECIFIED",
    OFFICE = "OFFICE"
}
/**
 *
 * @export
 * @interface PhoneNumberDomainReq
 */
export interface PhoneNumberDomainReq {
    /**
     *
     * @type {TimestampReq}
     * @memberof PhoneNumberDomainReq
     */
    creationDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainReq
     */
    entityType?: PhoneNumberDomainReqEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainReq
     */
    extension?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof PhoneNumberDomainReq
     */
    lastUpdatedDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainReq
     */
    phoneNumber?: string;
    /**
     *
     * @type {number}
     * @memberof PhoneNumberDomainReq
     */
    phoneNumberId?: number;
    /**
     *
     * @type {number}
     * @memberof PhoneNumberDomainReq
     */
    referenceId?: number;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainReq
     */
    type?: PhoneNumberDomainReqTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PhoneNumberDomainReqEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PhoneNumberDomainReqTypeEnum {
    HOME = "HOME",
    MOBILE = "MOBILE",
    NOTSPECIFIED = "NOT_SPECIFIED",
    OFFICE = "OFFICE"
}
/**
 *
 * @export
 * @interface PhoneNumberDomainRes
 */
export interface PhoneNumberDomainRes {
    /**
     *
     * @type {TimestampRes}
     * @memberof PhoneNumberDomainRes
     */
    creationDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainRes
     */
    entityType?: PhoneNumberDomainResEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainRes
     */
    extension?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof PhoneNumberDomainRes
     */
    lastUpdatedDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainRes
     */
    phoneNumber?: string;
    /**
     *
     * @type {number}
     * @memberof PhoneNumberDomainRes
     */
    phoneNumberId?: number;
    /**
     *
     * @type {number}
     * @memberof PhoneNumberDomainRes
     */
    referenceId?: number;
    /**
     *
     * @type {string}
     * @memberof PhoneNumberDomainRes
     */
    type?: PhoneNumberDomainResTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PhoneNumberDomainResEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PhoneNumberDomainResTypeEnum {
    HOME = "HOME",
    MOBILE = "MOBILE",
    NOTSPECIFIED = "NOT_SPECIFIED",
    OFFICE = "OFFICE"
}
/**
 *
 * @export
 * @interface PostCourtCoverageRequest
 */
export interface PostCourtCoverageRequest {
    /**
     *
     * @type {Array<AddCourtCoverageRequest>}
     * @memberof PostCourtCoverageRequest
     */
    courts?: Array<AddCourtCoverageRequest>;
}
/**
 *
 * @export
 * @interface PostFeedbackRequest
 */
export interface PostFeedbackRequest {
    /**
     *
     * @type {FeedbackDomain}
     * @memberof PostFeedbackRequest
     */
    feedback?: FeedbackDomain;
}
/**
 *
 * @export
 * @interface PotentialCustomerDomain
 */
export interface PotentialCustomerDomain {
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    caseStatus?: PotentialCustomerDomainCaseStatusEnum;
    /**
     *
     * @type {number}
     * @memberof PotentialCustomerDomain
     */
    caseStatusId?: number;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    caseStatusName?: string;
    /**
     *
     * @type {number}
     * @memberof PotentialCustomerDomain
     */
    citationId?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof PotentialCustomerDomain
     */
    citationIssueDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    citationState?: PotentialCustomerDomainCitationStateEnum;
    /**
     *
     * @type {TimestampRes}
     * @memberof PotentialCustomerDomain
     */
    citationSubmitDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    clientFirstName?: string;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    clientLastName?: string;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    courtCity?: string;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    courtCounty?: string;
    /**
     *
     * @type {number}
     * @memberof PotentialCustomerDomain
     */
    courtId?: number;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    courtName?: string;
    /**
     *
     * @type {boolean}
     * @memberof PotentialCustomerDomain
     */
    hasDuplicateSubmission?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PotentialCustomerDomain
     */
    isCitationDismissedFromContactList?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PotentialCustomerDomain
     */
    isUnwantedDuplicate?: boolean;
    /**
     *
     * @type {TimestampRes}
     * @memberof PotentialCustomerDomain
     */
    lastBookingDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof PotentialCustomerDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof PotentialCustomerDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {Array<OutgoingContactDomain>}
     * @memberof PotentialCustomerDomain
     */
    outgoingContacts?: Array<OutgoingContactDomain>;
    /**
     *
     * @type {number}
     * @memberof PotentialCustomerDomain
     */
    ticketsFought?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof PotentialCustomerDomain
     */
    userCreationDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof PotentialCustomerDomain
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PotentialCustomerDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PotentialCustomerDomainCitationStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
 *
 * @export
 * @interface PreviewDocumentRequest
 */
export interface PreviewDocumentRequest {
    /**
     *
     * @type {string}
     * @memberof PreviewDocumentRequest
     */
    clientName?: string;
    /**
     *
     * @type {string}
     * @memberof PreviewDocumentRequest
     */
    legalFee?: string;
    /**
     *
     * @type {string}
     * @memberof PreviewDocumentRequest
     */
    textProvidedByLawfirm?: string;
}
/**
 *
 * @export
 * @interface PriceMatchRequest
 */
export interface PriceMatchRequest {
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    attorneyContactInfo?: string;
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    attorneyName?: string;
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    clientName?: string;
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    details?: string;
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    priceToMatch?: string;
    /**
     *
     * @type {string}
     * @memberof PriceMatchRequest
     */
    website?: string;
}
/**
 *
 * @export
 * @interface PriceMatchResponse
 */
export interface PriceMatchResponse {
    /**
     *
     * @type {string}
     * @memberof PriceMatchResponse
     */
    matchedLawfirm?: string;
    /**
     *
     * @type {number}
     * @memberof PriceMatchResponse
     */
    matchedPrice?: number;
    /**
     *
     * @type {string}
     * @memberof PriceMatchResponse
     */
    priceMatchStatus?: PriceMatchResponsePriceMatchStatusEnum;
    /**
     *
     * @type {string}
     * @memberof PriceMatchResponse
     */
    referralCode?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PriceMatchResponsePriceMatchStatusEnum {
    COMPLETE = "COMPLETE",
    PENDING = "PENDING",
    REJECTED = "REJECTED"
}
/**
 *
 * @export
 * @interface PublishReferralContactsResponse
 */
export interface PublishReferralContactsResponse {
    /**
     *
     * @type {Array<ReferralContactStatus>}
     * @memberof PublishReferralContactsResponse
     */
    contacts?: Array<ReferralContactStatus>;
}
/**
 *
 * @export
 * @interface PublishReferralRequest
 */
export interface PublishReferralRequest {
    /**
     *
     * @type {Array<ReferralContact>}
     * @memberof PublishReferralRequest
     */
    contacts?: Array<ReferralContact>;
    /**
     *
     * @type {boolean}
     * @memberof PublishReferralRequest
     */
    dryRun?: boolean;
}
/**
 *
 * @export
 * @interface PureDate
 */
export interface PureDate {
    /**
     *
     * @type {string}
     * @memberof PureDate
     */
    date?: string;
}
/**
 *
 * @export
 * @interface PushNotificationRegistrationRequest
 */
export interface PushNotificationRegistrationRequest {
    /**
     *
     * @type {string}
     * @memberof PushNotificationRegistrationRequest
     */
    deviceToken?: string;
    /**
     *
     * @type {string}
     * @memberof PushNotificationRegistrationRequest
     */
    platformType?: PushNotificationRegistrationRequestPlatformTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PushNotificationRegistrationRequestPlatformTypeEnum {
    ANDROID = "ANDROID",
    IOS = "IOS",
    WEBAPP = "WEBAPP"
}
/**
 *
 * @export
 * @interface PushNotificationRequest
 */
export interface PushNotificationRequest {
    /**
     *
     * @type {string}
     * @memberof PushNotificationRequest
     */
    messageBody?: string;
    /**
     *
     * @type {string}
     * @memberof PushNotificationRequest
     */
    pageType?: PushNotificationRequestPageTypeEnum;
    /**
     *
     * @type {string}
     * @memberof PushNotificationRequest
     */
    platformType?: PushNotificationRequestPlatformTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PushNotificationRequestPageTypeEnum {
    CASEACTION = "CASE_ACTION",
    CASEMESSAGES = "CASE_MESSAGES",
    CASESTATUS = "CASE_STATUS",
    COURTDATESCHEDULED = "COURT_DATE_SCHEDULED",
    NEWTICKET = "NEW_TICKET",
    PROFILE = "PROFILE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PushNotificationRequestPlatformTypeEnum {
    ANDROID = "ANDROID",
    IOS = "IOS",
    WEBAPP = "WEBAPP"
}
/**
 *
 * @export
 * @interface PutDocumentRequest
 */
export interface PutDocumentRequest {
    /**
     *
     * @type {string}
     * @memberof PutDocumentRequest
     */
    clientDocReq?: PutDocumentRequestClientDocReqEnum;
    /**
     *
     * @type {string}
     * @memberof PutDocumentRequest
     */
    docType?: PutDocumentRequestDocTypeEnum;
    /**
     *
     * @type {string}
     * @memberof PutDocumentRequest
     */
    textProvidedByLawfirm?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PutDocumentRequestClientDocReqEnum {
    ACK = "ACK",
    NONE = "NONE",
    NOTARY = "NOTARY",
    SIGNATURE = "SIGNATURE"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PutDocumentRequestDocTypeEnum {
    ENGAGEMENTLETTER = "ENGAGEMENT_LETTER",
    OTHERDOCUMENT = "OTHER_DOCUMENT",
    OTHERIMAGE = "OTHER_IMAGE"
}
/**
 *
 * @export
 * @interface ReferralContact
 */
export interface ReferralContact {
    /**
     *
     * @type {string}
     * @memberof ReferralContact
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof ReferralContact
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof ReferralContact
     */
    lastName?: string;
}
/**
 *
 * @export
 * @interface ReferralContactStatus
 */
export interface ReferralContactStatus {
    /**
     *
     * @type {string}
     * @memberof ReferralContactStatus
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof ReferralContactStatus
     */
    errorType?: ReferralContactStatusErrorTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof ReferralContactStatus
     */
    successful?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralContactStatusErrorTypeEnum {
    EMAILALREADYEXISTS = "EMAIL_ALREADY_EXISTS",
    EMAILNOTSENT = "EMAIL_NOT_SENT",
    INVALIDEMAIL = "INVALID_EMAIL"
}
/**
 *
 * @export
 * @interface ReferralResponse
 */
export interface ReferralResponse {
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    caseId?: string;
    /**
     *
     * @type {boolean}
     * @memberof ReferralResponse
     */
    caseResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralCode?: string;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralCreditStatus?: ReferralResponseReferralCreditStatusEnum;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralCreditType?: ReferralResponseReferralCreditTypeEnum;
    /**
     *
     * @type {number}
     * @memberof ReferralResponse
     */
    referralCreditValue?: number;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralDate?: string;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralEvent?: ReferralResponseReferralEventEnum;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralExpirationDate?: string;
    /**
     *
     * @type {number}
     * @memberof ReferralResponse
     */
    referralId?: number;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralPaymentStatus?: ReferralResponseReferralPaymentStatusEnum;
    /**
     *
     * @type {string}
     * @memberof ReferralResponse
     */
    referralSourceType?: ReferralResponseReferralSourceTypeEnum;
    /**
     *
     * @type {UserDetails}
     * @memberof ReferralResponse
     */
    referredUser?: UserDetails;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralResponseReferralCreditStatusEnum {
    APPLIED = "APPLIED",
    CASECANCELLED = "CASE_CANCELLED",
    CONFIRMED = "CONFIRMED",
    NOTIFIED = "NOTIFIED",
    SAVED = "SAVED",
    SUPERSEDED = "SUPERSEDED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralResponseReferralCreditTypeEnum {
    CENTSVALUE = "CENTS_VALUE",
    NOCREDIT = "NO_CREDIT",
    PERCENTAGEDISCOUNT = "PERCENTAGE_DISCOUNT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralResponseReferralEventEnum {
    CASEBOOKING = "CASE_BOOKING",
    CASEMATCH = "CASE_MATCH",
    INVITE = "INVITE",
    REGISTRATION = "REGISTRATION"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralResponseReferralPaymentStatusEnum {
    ERROR = "ERROR",
    NONE = "NONE",
    PAIDOUT = "PAID_OUT",
    PENDINGACCOUNTVERIFICATION = "PENDING_ACCOUNT_VERIFICATION",
    PENDINGCASERESOLUTION = "PENDING_CASE_RESOLUTION"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralResponseReferralSourceTypeEnum {
    BILLBOARDS = "BILLBOARDS",
    CHECKOUTCODE = "CHECKOUT_CODE",
    DMVCOM = "DMV_COM",
    DMVORG = "DMV_ORG",
    DWA = "DWA",
    FACEBOOK = "FACEBOOK",
    FRIENDORFAMILY = "FRIEND_OR_FAMILY",
    GOOGLESEARCH = "GOOGLE_SEARCH",
    INFLUENCERAFFILIATE = "INFLUENCER_AFFILIATE",
    KICKBACKAPP = "KICKBACK_APP",
    OTHER = "OTHER",
    RADIO = "RADIO",
    REDDIT = "REDDIT",
    THESMOKINGTIRE = "THE_SMOKING_TIRE",
    UNKNOWN = "UNKNOWN",
    VINWIKI = "VINWIKI",
    YOUTUBEAD = "YOUTUBE_AD"
}
/**
 *
 * @export
 * @interface ReferralResponseByUser
 */
export interface ReferralResponseByUser {
    /**
     *
     * @type {string}
     * @memberof ReferralResponseByUser
     */
    latestCreditStatus?: ReferralResponseByUserLatestCreditStatusEnum;
    /**
     *
     * @type {number}
     * @memberof ReferralResponseByUser
     */
    refereeUserId?: number;
    /**
     *
     * @type {Array<ReferralResponse>}
     * @memberof ReferralResponseByUser
     */
    referrals?: Array<ReferralResponse>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReferralResponseByUserLatestCreditStatusEnum {
    APPLIED = "APPLIED",
    CASECANCELLED = "CASE_CANCELLED",
    CONFIRMED = "CONFIRMED",
    NOTIFIED = "NOTIFIED",
    SAVED = "SAVED",
    SUPERSEDED = "SUPERSEDED"
}
/**
 *
 * @export
 * @interface RefundCasePaymentRequest
 */
export interface RefundCasePaymentRequest {
    /**
     *
     * @type {number}
     * @memberof RefundCasePaymentRequest
     */
    refundAmount?: number;
    /**
     *
     * @type {string}
     * @memberof RefundCasePaymentRequest
     */
    refundNote?: string;
    /**
     *
     * @type {boolean}
     * @memberof RefundCasePaymentRequest
     */
    refundOTRFees?: boolean;
    /**
     *
     * @type {string}
     * @memberof RefundCasePaymentRequest
     */
    refundReasonType?: RefundCasePaymentRequestRefundReasonTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof RefundCasePaymentRequest
     */
    reverseLawfirmPayout?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum RefundCasePaymentRequestRefundReasonTypeEnum {
    CANCELATION = "CANCELATION",
    CLIENTDISPUTEDCHARGE = "CLIENT_DISPUTED_CHARGE",
    DUPLICATECASE = "DUPLICATE_CASE",
    LOSTCASE = "LOST_CASE",
    OTHER = "OTHER"
}
/**
 *
 * @export
 * @interface RefundLawfirmFeeRequest
 */
export interface RefundLawfirmFeeRequest {
    /**
     *
     * @type {number}
     * @memberof RefundLawfirmFeeRequest
     */
    otrRefundAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof RefundLawfirmFeeRequest
     */
    overrideRefundOwner?: boolean;
    /**
     *
     * @type {number}
     * @memberof RefundLawfirmFeeRequest
     */
    refundAmount?: number;
    /**
     *
     * @type {string}
     * @memberof RefundLawfirmFeeRequest
     */
    refundNote?: string;
    /**
     *
     * @type {string}
     * @memberof RefundLawfirmFeeRequest
     */
    refundReason?: RefundLawfirmFeeRequestRefundReasonEnum;
    /**
     *
     * @type {number}
     * @memberof RefundLawfirmFeeRequest
     */
    stripeRefundAmount?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum RefundLawfirmFeeRequestRefundReasonEnum {
    CANCELATION = "CANCELATION",
    CLIENTDISPUTEDCHARGE = "CLIENT_DISPUTED_CHARGE",
    DUPLICATECASE = "DUPLICATE_CASE",
    LOSTCASE = "LOST_CASE",
    OTHER = "OTHER"
}
/**
 *
 * @export
 * @interface RegisterNewUserRequest
 */
export interface RegisterNewUserRequest {
    /**
     *
     * @type {string}
     * @memberof RegisterNewUserRequest
     */
    clientType?: RegisterNewUserRequestClientTypeEnum;
    /**
     *
     * @type {string}
     * @memberof RegisterNewUserRequest
     */
    fingerPrintId?: string;
    /**
     *
     * @type {string}
     * @memberof RegisterNewUserRequest
     */
    httpReferrer?: string;
    /**
     *
     * @type {boolean}
     * @memberof RegisterNewUserRequest
     */
    isAutoLogin?: boolean;
    /**
     *
     * @type {string}
     * @memberof RegisterNewUserRequest
     */
    otherNote?: string;
    /**
     *
     * @type {string}
     * @memberof RegisterNewUserRequest
     */
    referralCode?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof RegisterNewUserRequest
     */
    referralSourceData?: {
        [key: string]: object;
    };
    /**
     *
     * @type {string}
     * @memberof RegisterNewUserRequest
     */
    roleType?: RegisterNewUserRequestRoleTypeEnum;
    /**
     *
     * @type {NewUser}
     * @memberof RegisterNewUserRequest
     */
    user?: NewUser;
    /**
     *
     * @type {number}
     * @memberof RegisterNewUserRequest
     */
    userReferralSourceTypeId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum RegisterNewUserRequestClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum RegisterNewUserRequestRoleTypeEnum {
    ADMIN = "ADMIN",
    DEFENDANT = "DEFENDANT",
    LAWYER = "LAWYER",
    PARTNER = "PARTNER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface RegisterNewUserResponse
 */
export interface RegisterNewUserResponse {
    /**
     *
     * @type {boolean}
     * @memberof RegisterNewUserResponse
     */
    newAccount?: boolean;
    /**
     *
     * @type {NewUserResponse}
     * @memberof RegisterNewUserResponse
     */
    user?: NewUserResponse;
    /**
     *
     * @type {boolean}
     * @memberof RegisterNewUserResponse
     */
    userLoggedIn?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof RegisterNewUserResponse
     */
    userRememberMeAuthenticated?: boolean;
}
/**
 *
 * @export
 * @interface RemoveCoverageRequest
 */
export interface RemoveCoverageRequest {
    /**
     *
     * @type {Array<CoverageToRemove>}
     * @memberof RemoveCoverageRequest
     */
    coverage?: Array<CoverageToRemove>;
}
/**
 *
 * @export
 * @interface RemoveLawfirmSurchargeRequest
 */
export interface RemoveLawfirmSurchargeRequest {
    /**
     *
     * @type {Array<number>}
     * @memberof RemoveLawfirmSurchargeRequest
     */
    surchargeIds?: Array<number>;
}
/**
 *
 * @export
 * @interface ReplyToReviewRequest
 */
export interface ReplyToReviewRequest {
    /**
     *
     * @type {string}
     * @memberof ReplyToReviewRequest
     */
    copy?: string;
    /**
     *
     * @type {number}
     * @memberof ReplyToReviewRequest
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface ReplyToTicketRequest
 */
export interface ReplyToTicketRequest {
    /**
     *
     * @type {string}
     * @memberof ReplyToTicketRequest
     */
    htmlReply?: string;
    /**
     *
     * @type {string}
     * @memberof ReplyToTicketRequest
     */
    newTicketStatus?: ReplyToTicketRequestNewTicketStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReplyToTicketRequestNewTicketStatusEnum {
    CLOSED = "CLOSED",
    OPEN = "OPEN",
    PENDING = "PENDING",
    PENDINGONEWEEK = "PENDING_ONE_WEEK",
    PENDINGTWODAYS = "PENDING_TWO_DAYS",
    QUEUEDFORAUTOMATION = "QUEUED_FOR_AUTOMATION",
    RESOLVED = "RESOLVED",
    UNKNOWN = "UNKNOWN",
    WAITINGONATTORNEY = "WAITING_ON_ATTORNEY",
    WAITINGONCUSTOMER = "WAITING_ON_CUSTOMER",
    WAITINGONOTR = "WAITING_ON_OTR",
    WAITINGONTHIRDPARTY = "WAITING_ON_THIRD_PARTY"
}
/**
 *
 * @export
 * @interface RescheduleTaskRequest
 */
export interface RescheduleTaskRequest {
    /**
     *
     * @type {string}
     * @memberof RescheduleTaskRequest
     */
    runAtDateUtc?: string;
}
/**
 *
 * @export
 * @interface ResetFeeForLawfirmModel
 */
export interface ResetFeeForLawfirmModel {
    /**
     *
     * @type {number}
     * @memberof ResetFeeForLawfirmModel
     */
    courtId?: number;
}
/**
 *
 * @export
 * @interface ResetFeesForLawfirmRequest
 */
export interface ResetFeesForLawfirmRequest {
    /**
     *
     * @type {Array<ResetViolationModel>}
     * @memberof ResetFeesForLawfirmRequest
     */
    models?: Array<ResetViolationModel>;
}
/**
 *
 * @export
 * @interface ResetFeesForLawfirmResponse
 */
export interface ResetFeesForLawfirmResponse {
    /**
     *
     * @type {Array<ResetFeeForLawfirmModel>}
     * @memberof ResetFeesForLawfirmResponse
     */
    models?: Array<ResetFeeForLawfirmModel>;
}
/**
 *
 * @export
 * @interface ResetUserPasswordRequest
 */
export interface ResetUserPasswordRequest {
    /**
     *
     * @type {string}
     * @memberof ResetUserPasswordRequest
     */
    newPasswordPlainText?: string;
    /**
     *
     * @type {number}
     * @memberof ResetUserPasswordRequest
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface ResetViolationModel
 */
export interface ResetViolationModel {
    /**
     *
     * @type {string}
     * @memberof ResetViolationModel
     */
    violationClass?: ResetViolationModelViolationClassEnum;
    /**
     *
     * @type {number}
     * @memberof ResetViolationModel
     */
    violationId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ResetViolationModelViolationClassEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface Results
 */
export interface Results {
    /**
     *
     * @type {Array<{ [key: string]: object; }>}
     * @memberof Results
     */
    resultSet?: Array<{
        [key: string]: object;
    }>;
}
/**
 *
 * @export
 * @interface ReverseLawfirmPayoutRequest
 */
export interface ReverseLawfirmPayoutRequest {
    /**
     *
     * @type {boolean}
     * @memberof ReverseLawfirmPayoutRequest
     */
    overrideRefundOwner?: boolean;
    /**
     *
     * @type {number}
     * @memberof ReverseLawfirmPayoutRequest
     */
    reversalAmount?: number;
    /**
     *
     * @type {string}
     * @memberof ReverseLawfirmPayoutRequest
     */
    reversalNote?: string;
    /**
     *
     * @type {string}
     * @memberof ReverseLawfirmPayoutRequest
     */
    reversalReason?: ReverseLawfirmPayoutRequestReversalReasonEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ReverseLawfirmPayoutRequestReversalReasonEnum {
    CANCELATION = "CANCELATION",
    CLIENTDISPUTEDCHARGE = "CLIENT_DISPUTED_CHARGE",
    DUPLICATECASE = "DUPLICATE_CASE",
    LOSTCASE = "LOST_CASE",
    OTHER = "OTHER"
}
/**
 *
 * @export
 * @interface ReviewCommentModel
 */
export interface ReviewCommentModel {
    /**
     *
     * @type {string}
     * @memberof ReviewCommentModel
     */
    authorName?: string;
    /**
     *
     * @type {string}
     * @memberof ReviewCommentModel
     */
    commentDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof ReviewCommentModel
     */
    copy?: string;
    /**
     *
     * @type {number}
     * @memberof ReviewCommentModel
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof ReviewCommentModel
     */
    profilePictureUrl?: string;
}
/**
 *
 * @export
 * @interface ReviewRatingModel
 */
export interface ReviewRatingModel {
    /**
     *
     * @type {number}
     * @memberof ReviewRatingModel
     */
    communicationRating?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewRatingModel
     */
    outcomeRating?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewRatingModel
     */
    overallRating?: number;
}
/**
 *
 * @export
 * @interface ReviewVoteAggregateModel
 */
export interface ReviewVoteAggregateModel {
    /**
     *
     * @type {number}
     * @memberof ReviewVoteAggregateModel
     */
    helpfulCount?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewVoteAggregateModel
     */
    notHelpfulCount?: number;
}
/**
 *
 * @export
 * @interface SNSNotificationRequest
 */
export interface SNSNotificationRequest {
    /**
     *
     * @type {string}
     * @memberof SNSNotificationRequest
     */
    Message?: string;
    /**
     *
     * @type {string}
     * @memberof SNSNotificationRequest
     */
    SubscribeURL?: string;
    /**
     *
     * @type {string}
     * @memberof SNSNotificationRequest
     */
    Type?: string;
    /**
     *
     * @type {string}
     * @memberof SNSNotificationRequest
     */
    UnsubscribeURL?: string;
}
/**
 *
 * @export
 * @interface SSLCertificateResponse
 */
export interface SSLCertificateResponse {
    /**
     *
     * @type {string}
     * @memberof SSLCertificateResponse
     */
    rawPublicCert?: string;
}
/**
 *
 * @export
 * @interface SaveCaseNotesRequest
 */
export interface SaveCaseNotesRequest {
    /**
     *
     * @type {CaseNotesDomain}
     * @memberof SaveCaseNotesRequest
     */
    caseNotes?: CaseNotesDomain;
}
/**
 *
 * @export
 * @interface SaveLawfirmSurchargeModel
 */
export interface SaveLawfirmSurchargeModel {
    /**
     *
     * @type {string}
     * @memberof SaveLawfirmSurchargeModel
     */
    featureType?: SaveLawfirmSurchargeModelFeatureTypeEnum;
    /**
     *
     * @type {string}
     * @memberof SaveLawfirmSurchargeModel
     */
    feeType?: SaveLawfirmSurchargeModelFeeTypeEnum;
    /**
     *
     * @type {string}
     * @memberof SaveLawfirmSurchargeModel
     */
    feeValue?: string;
    /**
     *
     * @type {boolean}
     * @memberof SaveLawfirmSurchargeModel
     */
    isEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof SaveLawfirmSurchargeModel
     */
    refundEligibility?: SaveLawfirmSurchargeModelRefundEligibilityEnum;
    /**
     *
     * @type {number}
     * @memberof SaveLawfirmSurchargeModel
     */
    surchargeId?: number;
    /**
     *
     * @type {string}
     * @memberof SaveLawfirmSurchargeModel
     */
    surchargeType?: SaveLawfirmSurchargeModelSurchargeTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawfirmSurchargeModelFeatureTypeEnum {
    BLACKBOX = "BLACK_BOX",
    STATEPAGE = "STATE_PAGE",
    STOREFRONT = "STOREFRONT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawfirmSurchargeModelFeeTypeEnum {
    FLATFEEINCENTS = "FLAT_FEE_IN_CENTS",
    FORMULA = "FORMULA",
    PERCENT = "PERCENT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawfirmSurchargeModelRefundEligibilityEnum {
    DEFAULT = "DEFAULT",
    NONREFUNDABLE = "NON_REFUNDABLE",
    SURCHARGEONLY = "SURCHARGE_ONLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawfirmSurchargeModelSurchargeTypeEnum {
    CDL = "CDL",
    FAILURETOAPPEAR = "FAILURE_TO_APPEAR",
    LATE = "LATE",
    MULTIPLEVIOLATIONS = "MULTIPLE_VIOLATIONS",
    OUTOFSTATE = "OUT_OF_STATE",
    SHORTNOTICE = "SHORT_NOTICE",
    WARRANT = "WARRANT"
}
/**
 *
 * @export
 * @interface SaveLawfirmSurchargesRequest
 */
export interface SaveLawfirmSurchargesRequest {
    /**
     *
     * @type {Array<SaveLawfirmSurchargeModel>}
     * @memberof SaveLawfirmSurchargesRequest
     */
    surcharges?: Array<SaveLawfirmSurchargeModel>;
}
/**
 *
 * @export
 * @interface SaveLawyerLeadRequest
 */
export interface SaveLawyerLeadRequest {
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    firstname?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    leadProvidedSource?: SaveLawyerLeadRequestLeadProvidedSourceEnum;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLeadRequest
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawyerLeadRequestLeadProvidedSourceEnum {
    DIRECTMAIL = "DIRECT_MAIL",
    EMAILAD = "EMAIL_AD",
    GOOGLEAD = "GOOGLE_AD",
    NMA = "NMA",
    OTHER = "OTHER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface SaveLawyerLicenseModel
 */
export interface SaveLawyerLicenseModel {
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLicenseModel
     */
    barLicenseIssueDate?: string;
    /**
     *
     * @type {number}
     * @memberof SaveLawyerLicenseModel
     */
    lawyerLicenseId?: number;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLicenseModel
     */
    regionCode?: SaveLawyerLicenseModelRegionCodeEnum;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerLicenseModel
     */
    type?: SaveLawyerLicenseModelTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawyerLicenseModelRegionCodeEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawyerLicenseModelTypeEnum {
    BAR = "BAR"
}
/**
 *
 * @export
 * @interface SaveLawyerLicensesRequest
 */
export interface SaveLawyerLicensesRequest {
    /**
     *
     * @type {Array<SaveLawyerLicenseModel>}
     * @memberof SaveLawyerLicensesRequest
     */
    licenses?: Array<SaveLawyerLicenseModel>;
}
/**
 *
 * @export
 * @interface SaveLawyerRequest
 */
export interface SaveLawyerRequest {
    /**
     *
     * @type {string}
     * @memberof SaveLawyerRequest
     */
    jobTitle?: SaveLawyerRequestJobTitleEnum;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerRequest
     */
    lawSchool?: string;
    /**
     *
     * @type {number}
     * @memberof SaveLawyerRequest
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerRequest
     */
    licensedDate?: string;
    /**
     *
     * @type {string}
     * @memberof SaveLawyerRequest
     */
    otherJobTitle?: string;
    /**
     *
     * @type {number}
     * @memberof SaveLawyerRequest
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SaveLawyerRequestJobTitleEnum {
    ACCOUNTANT = "ACCOUNTANT",
    ATTORNEY = "ATTORNEY",
    ATTORNEYASSOCIATE = "ATTORNEY_ASSOCIATE",
    ATTORNEYCOUNSEL = "ATTORNEY_COUNSEL",
    ATTORNEYMANAGINGPARTNER = "ATTORNEY_MANAGING_PARTNER",
    ATTORNEYPARTNER = "ATTORNEY_PARTNER",
    ATTORNEYSTAFF = "ATTORNEY_STAFF",
    CUSTOMERSERVICEREP = "CUSTOMER_SERVICE_REP",
    LEGALASSISTANT = "LEGAL_ASSISTANT",
    LEGALINTERN = "LEGAL_INTERN",
    LEGALSECRETARY = "LEGAL_SECRETARY",
    OTHER = "OTHER",
    PARALEGAL = "PARALEGAL"
}
/**
 *
 * @export
 * @interface ScheduleNewPaymentRequest
 */
export interface ScheduleNewPaymentRequest {
    /**
     *
     * @type {number}
     * @memberof ScheduleNewPaymentRequest
     */
    baseFeeInCents?: number;
    /**
     *
     * @type {string}
     * @memberof ScheduleNewPaymentRequest
     */
    chargeRunAtDate?: string;
    /**
     *
     * @type {number}
     * @memberof ScheduleNewPaymentRequest
     */
    lawfirmReferralCodeAdjustment?: number;
    /**
     *
     * @type {number}
     * @memberof ScheduleNewPaymentRequest
     */
    otrMarketingFee?: number;
    /**
     *
     * @type {number}
     * @memberof ScheduleNewPaymentRequest
     */
    otrReferralCodeAdjustment?: number;
    /**
     *
     * @type {string}
     * @memberof ScheduleNewPaymentRequest
     */
    recipient?: ScheduleNewPaymentRequestRecipientEnum;
    /**
     *
     * @type {string}
     * @memberof ScheduleNewPaymentRequest
     */
    transactionMethod?: ScheduleNewPaymentRequestTransactionMethodEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ScheduleNewPaymentRequestRecipientEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ScheduleNewPaymentRequestTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface ScheduledTaskGetResponse
 */
export interface ScheduledTaskGetResponse {
    /**
     *
     * @type {Array<ScheduledTaskResponse>}
     * @memberof ScheduledTaskGetResponse
     */
    tasks?: Array<ScheduledTaskResponse>;
}
/**
 *
 * @export
 * @interface ScheduledTaskResponse
 */
export interface ScheduledTaskResponse {
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    completionDate?: string;
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    errorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    runAtDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskId?: string;
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskReferenceId?: string;
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskStatus?: ScheduledTaskResponseTaskStatusEnum;
    /**
     *
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskType?: ScheduledTaskResponseTaskTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ScheduledTaskResponseTaskStatusEnum {
    CANCELLED = "CANCELLED",
    COMPLETE = "COMPLETE",
    ERROR = "ERROR",
    INPROGRESS = "IN_PROGRESS",
    NOOPERATION = "NO_OPERATION",
    QUEUED = "QUEUED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ScheduledTaskResponseTaskTypeEnum {
    EMAILFOLLOWUPTASK = "EMAIL_FOLLOW_UP_TASK",
    PAYINSTALLMENTTASK = "PAY_INSTALLMENT_TASK",
    PDFTOIMAGETASK = "PDF_TO_IMAGE_TASK",
    TICKETREVIEWTASK = "TICKET_REVIEW_TASK",
    VALIDATESUBSCRIPTIONTASK = "VALIDATE_SUBSCRIPTION_TASK"
}
/**
 *
 * @export
 * @interface SendConsolidatedEmailToUser
 */
export interface SendConsolidatedEmailToUser {
    /**
     *
     * @type {boolean}
     * @memberof SendConsolidatedEmailToUser
     */
    bypassDedupe?: boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof SendConsolidatedEmailToUser
     */
    citationIds?: Array<number>;
    /**
     *
     * @type {string}
     * @memberof SendConsolidatedEmailToUser
     */
    emailTemplateId?: SendConsolidatedEmailToUserEmailTemplateIdEnum;
    /**
     *
     * @type {string}
     * @memberof SendConsolidatedEmailToUser
     */
    fromEmailAddress?: string;
    /**
     *
     * @type {number}
     * @memberof SendConsolidatedEmailToUser
     */
    userIdToContact?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SendConsolidatedEmailToUserEmailTemplateIdEnum {
    AFTERNOONHELLO2 = "AFTERNOON_HELLO_2",
    ATTICUSATTORNEYCONTACT1 = "ATTICUS_ATTORNEY_CONTACT_1",
    CAMERATICKETNMV = "CAMERA_TICKET_NMV",
    CASECANCELLEDBYUSER = "CASE_CANCELLED_BY_USER",
    CASECANCELLEDDUPLICATE = "CASE_CANCELLED_DUPLICATE",
    CASECANCELLEDNMV = "CASE_CANCELLED_NMV",
    CASECANCELLEDNONPAYMENT = "CASE_CANCELLED_NON_PAYMENT",
    CASECANCELLEDNOLAWFIRM = "CASE_CANCELLED_NO_LAWFIRM",
    CASECANCELLEDOVERDUE = "CASE_CANCELLED_OVERDUE",
    CASECANCELLEDTOOSHORTNOTICE = "CASE_CANCELLED_TOO_SHORT_NOTICE",
    CASUALFIRSTV1 = "CASUAL_FIRST_V1",
    CASUALSECONDV1 = "CASUAL_SECOND_V1",
    FRIDAYINTRO = "FRIDAY_INTRO",
    INVALIDIMAGEUPLOAD1 = "INVALID_IMAGE_UPLOAD_1",
    LAWFIRMCONTACT10V1 = "LAWFIRM_CONTACT_10_V1",
    LAWFIRMCONTACT1V1 = "LAWFIRM_CONTACT_1_V1",
    LAWFIRMCONTACT2V1 = "LAWFIRM_CONTACT_2_V1",
    LAWFIRMCONTACT3V1 = "LAWFIRM_CONTACT_3_V1",
    LAWFIRMCONTACT4V1 = "LAWFIRM_CONTACT_4_V1",
    LAWFIRMCONTACT5V1 = "LAWFIRM_CONTACT_5_V1",
    LAWFIRMCONTACT6V1 = "LAWFIRM_CONTACT_6_V1",
    LAWFIRMCONTACT7V1 = "LAWFIRM_CONTACT_7_V1",
    LAWFIRMCONTACT8V1 = "LAWFIRM_CONTACT_8_V1",
    LAWFIRMCONTACT9V1 = "LAWFIRM_CONTACT_9_V1",
    LAWYERPOSTCOURTREMINDER = "LAWYER_POST_COURT_REMINDER",
    NOCOVERAGEAVAILABLE = "NO_COVERAGE_AVAILABLE",
    NOCOVERAGEAVAILABLEMISSINGCOURT = "NO_COVERAGE_AVAILABLE_MISSING_COURT",
    PARKINGTICKET = "PARKING_TICKET",
    POSTWIN = "POST_WIN",
    POSTWINLASTASK = "POST_WIN_LAST_ASK",
    POSTWINV2 = "POST_WIN_V2",
    SUNDAYAFTERNOONHELLO = "SUNDAY_AFTERNOON_HELLO",
    TICKETDUEWA = "TICKET_DUE_WA",
    TICKETEVALWITHCITATION = "TICKET_EVAL_WITH_CITATION",
    TICKETEVALWITHCITATION2NDFOLLOWUP = "TICKET_EVAL_WITH_CITATION_2ND_FOLLOW_UP",
    TICKETEVALWITHCITATIONCLOSEOUT = "TICKET_EVAL_WITH_CITATION_CLOSE_OUT"
}
/**
 *
 * @export
 * @interface SendDirectCheckResponse
 */
export interface SendDirectCheckResponse {
    /**
     *
     * @type {string}
     * @memberof SendDirectCheckResponse
     */
    carrier?: string;
    /**
     *
     * @type {number}
     * @memberof SendDirectCheckResponse
     */
    checkAmount?: number;
    /**
     *
     * @type {string}
     * @memberof SendDirectCheckResponse
     */
    estimatedDeliveryDate?: string;
    /**
     *
     * @type {string}
     * @memberof SendDirectCheckResponse
     */
    externalCheckId?: string;
    /**
     *
     * @type {string}
     * @memberof SendDirectCheckResponse
     */
    sendDate?: string;
    /**
     *
     * @type {string}
     * @memberof SendDirectCheckResponse
     */
    trackingNumber?: string;
}
/**
 *
 * @export
 * @interface SendDirectMailResponse
 */
export interface SendDirectMailResponse {
    /**
     *
     * @type {DirectMailContact}
     * @memberof SendDirectMailResponse
     */
    sentMail?: DirectMailContact;
}
/**
 *
 * @export
 * @interface SendDirectReferralCheckRequest
 */
export interface SendDirectReferralCheckRequest {
    /**
     *
     * @type {LobMailingAddress}
     * @memberof SendDirectReferralCheckRequest
     */
    address?: LobMailingAddress;
    /**
     *
     * @type {string}
     * @memberof SendDirectReferralCheckRequest
     */
    fullNameOverride?: string;
}
/**
 *
 * @export
 * @interface SendEmailToUserRequest
 */
export interface SendEmailToUserRequest {
    /**
     *
     * @type {string}
     * @memberof SendEmailToUserRequest
     */
    actionType?: string;
    /**
     *
     * @type {number}
     * @memberof SendEmailToUserRequest
     */
    agentId?: number;
    /**
     *
     * @type {number}
     * @memberof SendEmailToUserRequest
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof SendEmailToUserRequest
     */
    emailTemplateId?: SendEmailToUserRequestEmailTemplateIdEnum;
    /**
     *
     * @type {string}
     * @memberof SendEmailToUserRequest
     */
    fromEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof SendEmailToUserRequest
     */
    reviewPlatform?: SendEmailToUserRequestReviewPlatformEnum;
    /**
     *
     * @type {number}
     * @memberof SendEmailToUserRequest
     */
    userIdToContact?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SendEmailToUserRequestEmailTemplateIdEnum {
    AFTERNOONHELLO2 = "AFTERNOON_HELLO_2",
    ATTICUSATTORNEYCONTACT1 = "ATTICUS_ATTORNEY_CONTACT_1",
    CAMERATICKETNMV = "CAMERA_TICKET_NMV",
    CASECANCELLEDBYUSER = "CASE_CANCELLED_BY_USER",
    CASECANCELLEDDUPLICATE = "CASE_CANCELLED_DUPLICATE",
    CASECANCELLEDNMV = "CASE_CANCELLED_NMV",
    CASECANCELLEDNONPAYMENT = "CASE_CANCELLED_NON_PAYMENT",
    CASECANCELLEDNOLAWFIRM = "CASE_CANCELLED_NO_LAWFIRM",
    CASECANCELLEDOVERDUE = "CASE_CANCELLED_OVERDUE",
    CASECANCELLEDTOOSHORTNOTICE = "CASE_CANCELLED_TOO_SHORT_NOTICE",
    CASUALFIRSTV1 = "CASUAL_FIRST_V1",
    CASUALSECONDV1 = "CASUAL_SECOND_V1",
    FRIDAYINTRO = "FRIDAY_INTRO",
    INVALIDIMAGEUPLOAD1 = "INVALID_IMAGE_UPLOAD_1",
    LAWFIRMCONTACT10V1 = "LAWFIRM_CONTACT_10_V1",
    LAWFIRMCONTACT1V1 = "LAWFIRM_CONTACT_1_V1",
    LAWFIRMCONTACT2V1 = "LAWFIRM_CONTACT_2_V1",
    LAWFIRMCONTACT3V1 = "LAWFIRM_CONTACT_3_V1",
    LAWFIRMCONTACT4V1 = "LAWFIRM_CONTACT_4_V1",
    LAWFIRMCONTACT5V1 = "LAWFIRM_CONTACT_5_V1",
    LAWFIRMCONTACT6V1 = "LAWFIRM_CONTACT_6_V1",
    LAWFIRMCONTACT7V1 = "LAWFIRM_CONTACT_7_V1",
    LAWFIRMCONTACT8V1 = "LAWFIRM_CONTACT_8_V1",
    LAWFIRMCONTACT9V1 = "LAWFIRM_CONTACT_9_V1",
    LAWYERPOSTCOURTREMINDER = "LAWYER_POST_COURT_REMINDER",
    NOCOVERAGEAVAILABLE = "NO_COVERAGE_AVAILABLE",
    NOCOVERAGEAVAILABLEMISSINGCOURT = "NO_COVERAGE_AVAILABLE_MISSING_COURT",
    PARKINGTICKET = "PARKING_TICKET",
    POSTWIN = "POST_WIN",
    POSTWINLASTASK = "POST_WIN_LAST_ASK",
    POSTWINV2 = "POST_WIN_V2",
    SUNDAYAFTERNOONHELLO = "SUNDAY_AFTERNOON_HELLO",
    TICKETDUEWA = "TICKET_DUE_WA",
    TICKETEVALWITHCITATION = "TICKET_EVAL_WITH_CITATION",
    TICKETEVALWITHCITATION2NDFOLLOWUP = "TICKET_EVAL_WITH_CITATION_2ND_FOLLOW_UP",
    TICKETEVALWITHCITATIONCLOSEOUT = "TICKET_EVAL_WITH_CITATION_CLOSE_OUT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum SendEmailToUserRequestReviewPlatformEnum {
    FACEBOOK = "FACEBOOK",
    GOOGLEMYBUSINESS = "GOOGLE_MY_BUSINESS",
    GOOGLEPLAYSTORE = "GOOGLE_PLAY_STORE",
    HIGHYA = "HIGHYA",
    IOSAPPSTORE = "IOS_APP_STORE",
    REVIEWSIO = "REVIEWS_IO"
}
/**
 *
 * @export
 * @interface SendEmailToUsersRequest
 */
export interface SendEmailToUsersRequest {
    /**
     *
     * @type {string}
     * @memberof SendEmailToUsersRequest
     */
    actionType?: string;
    /**
     *
     * @type {string}
     * @memberof SendEmailToUsersRequest
     */
    emailTemplateId?: SendEmailToUsersRequestEmailTemplateIdEnum;
    /**
     *
     * @type {string}
     * @memberof SendEmailToUsersRequest
     */
    fromEmailAddress?: string;
    /**
     *
     * @type {Array<UserToContact>}
     * @memberof SendEmailToUsersRequest
     */
    usersToContact?: Array<UserToContact>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SendEmailToUsersRequestEmailTemplateIdEnum {
    AFTERNOONHELLO2 = "AFTERNOON_HELLO_2",
    ATTICUSATTORNEYCONTACT1 = "ATTICUS_ATTORNEY_CONTACT_1",
    CAMERATICKETNMV = "CAMERA_TICKET_NMV",
    CASECANCELLEDBYUSER = "CASE_CANCELLED_BY_USER",
    CASECANCELLEDDUPLICATE = "CASE_CANCELLED_DUPLICATE",
    CASECANCELLEDNMV = "CASE_CANCELLED_NMV",
    CASECANCELLEDNONPAYMENT = "CASE_CANCELLED_NON_PAYMENT",
    CASECANCELLEDNOLAWFIRM = "CASE_CANCELLED_NO_LAWFIRM",
    CASECANCELLEDOVERDUE = "CASE_CANCELLED_OVERDUE",
    CASECANCELLEDTOOSHORTNOTICE = "CASE_CANCELLED_TOO_SHORT_NOTICE",
    CASUALFIRSTV1 = "CASUAL_FIRST_V1",
    CASUALSECONDV1 = "CASUAL_SECOND_V1",
    FRIDAYINTRO = "FRIDAY_INTRO",
    INVALIDIMAGEUPLOAD1 = "INVALID_IMAGE_UPLOAD_1",
    LAWFIRMCONTACT10V1 = "LAWFIRM_CONTACT_10_V1",
    LAWFIRMCONTACT1V1 = "LAWFIRM_CONTACT_1_V1",
    LAWFIRMCONTACT2V1 = "LAWFIRM_CONTACT_2_V1",
    LAWFIRMCONTACT3V1 = "LAWFIRM_CONTACT_3_V1",
    LAWFIRMCONTACT4V1 = "LAWFIRM_CONTACT_4_V1",
    LAWFIRMCONTACT5V1 = "LAWFIRM_CONTACT_5_V1",
    LAWFIRMCONTACT6V1 = "LAWFIRM_CONTACT_6_V1",
    LAWFIRMCONTACT7V1 = "LAWFIRM_CONTACT_7_V1",
    LAWFIRMCONTACT8V1 = "LAWFIRM_CONTACT_8_V1",
    LAWFIRMCONTACT9V1 = "LAWFIRM_CONTACT_9_V1",
    LAWYERPOSTCOURTREMINDER = "LAWYER_POST_COURT_REMINDER",
    NOCOVERAGEAVAILABLE = "NO_COVERAGE_AVAILABLE",
    NOCOVERAGEAVAILABLEMISSINGCOURT = "NO_COVERAGE_AVAILABLE_MISSING_COURT",
    PARKINGTICKET = "PARKING_TICKET",
    POSTWIN = "POST_WIN",
    POSTWINLASTASK = "POST_WIN_LAST_ASK",
    POSTWINV2 = "POST_WIN_V2",
    SUNDAYAFTERNOONHELLO = "SUNDAY_AFTERNOON_HELLO",
    TICKETDUEWA = "TICKET_DUE_WA",
    TICKETEVALWITHCITATION = "TICKET_EVAL_WITH_CITATION",
    TICKETEVALWITHCITATION2NDFOLLOWUP = "TICKET_EVAL_WITH_CITATION_2ND_FOLLOW_UP",
    TICKETEVALWITHCITATIONCLOSEOUT = "TICKET_EVAL_WITH_CITATION_CLOSE_OUT"
}
/**
 *
 * @export
 * @interface SendPayoutToLawfirmRequest
 */
export interface SendPayoutToLawfirmRequest {
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    dueDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof SendPayoutToLawfirmRequest
     */
    lawfirmCaseId?: number;
    /**
     *
     * @type {number}
     * @memberof SendPayoutToLawfirmRequest
     */
    payoutAmountInCents?: number;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    sourceCasePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    sourceStripeChargeId?: string;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    transactionDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    transactionMethod?: SendPayoutToLawfirmRequestTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    transactionReference?: string;
    /**
     *
     * @type {string}
     * @memberof SendPayoutToLawfirmRequest
     */
    transferGroup?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SendPayoutToLawfirmRequestTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface SendPayoutToLawfirmResponse
 */
export interface SendPayoutToLawfirmResponse {
    /**
     *
     * @type {boolean}
     * @memberof SendPayoutToLawfirmResponse
     */
    isSuccess?: boolean;
}
/**
 *
 * @export
 * @interface SetCourtDateForCaseRequest
 */
export interface SetCourtDateForCaseRequest {
    /**
     *
     * @type {string}
     * @memberof SetCourtDateForCaseRequest
     */
    courtDate?: string;
    /**
     *
     * @type {boolean}
     * @memberof SetCourtDateForCaseRequest
     */
    sendNotificationEmailToClient?: boolean;
}
/**
 *
 * @export
 * @interface SetLawfirmCaseDecisionRequest
 */
export interface SetLawfirmCaseDecisionRequest {
    /**
     *
     * @type {string}
     * @memberof SetLawfirmCaseDecisionRequest
     */
    caseDecisionStatus?: SetLawfirmCaseDecisionRequestCaseDecisionStatusEnum;
    /**
     *
     * @type {string}
     * @memberof SetLawfirmCaseDecisionRequest
     */
    reason?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SetLawfirmCaseDecisionRequestCaseDecisionStatusEnum {
    ACCEPTED = "ACCEPTED",
    CREATED = "CREATED",
    DECLINED = "DECLINED",
    EXPIRED = "EXPIRED",
    PENDING = "PENDING",
    REMATCHED = "REMATCHED",
    REMATCHEDREFERRAL = "REMATCHED_REFERRAL"
}
/**
 *
 * @export
 * @interface SetReferralSourceRequest
 */
export interface SetReferralSourceRequest {
    /**
     *
     * @type {string}
     * @memberof SetReferralSourceRequest
     */
    clientType?: SetReferralSourceRequestClientTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof SetReferralSourceRequest
     */
    isFromAdvertisement?: boolean;
    /**
     *
     * @type {string}
     * @memberof SetReferralSourceRequest
     */
    otherNote?: string;
    /**
     *
     * @type {string}
     * @memberof SetReferralSourceRequest
     */
    referralCode?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof SetReferralSourceRequest
     */
    referralSourceData?: {
        [key: string]: object;
    };
    /**
     *
     * @type {string}
     * @memberof SetReferralSourceRequest
     */
    referrerEmail?: string;
    /**
     *
     * @type {string}
     * @memberof SetReferralSourceRequest
     */
    referrerName?: string;
    /**
     *
     * @type {number}
     * @memberof SetReferralSourceRequest
     */
    userId?: number;
    /**
     *
     * @type {number}
     * @memberof SetReferralSourceRequest
     */
    userReferralSourceTypeId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SetReferralSourceRequestClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface SignRecordingUrlRequest
 */
export interface SignRecordingUrlRequest {
    /**
     *
     * @type {string}
     * @memberof SignRecordingUrlRequest
     */
    unsignedRecordingUrl?: string;
}
/**
 *
 * @export
 * @interface SignRecordingUrlResponse
 */
export interface SignRecordingUrlResponse {
    /**
     *
     * @type {string}
     * @memberof SignRecordingUrlResponse
     */
    presignedUrl?: string;
}
/**
 *
 * @export
 * @interface SimpleCredentialsResponse
 */
export interface SimpleCredentialsResponse {
    /**
     *
     * @type {string}
     * @memberof SimpleCredentialsResponse
     */
    accessKeyId?: string;
    /**
     *
     * @type {string}
     * @memberof SimpleCredentialsResponse
     */
    secretKey?: string;
}
/**
 *
 * @export
 * @interface SocialLoginRequest
 */
export interface SocialLoginRequest {
    /**
     *
     * @type {string}
     * @memberof SocialLoginRequest
     */
    clientType?: SocialLoginRequestClientTypeEnum;
    /**
     *
     * @type {string}
     * @memberof SocialLoginRequest
     */
    fingerPrintId?: string;
    /**
     *
     * @type {string}
     * @memberof SocialLoginRequest
     */
    httpReferrer?: string;
    /**
     *
     * @type {string}
     * @memberof SocialLoginRequest
     */
    otherNote?: string;
    /**
     *
     * @type {string}
     * @memberof SocialLoginRequest
     */
    referralCode?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof SocialLoginRequest
     */
    referralSourceData?: {
        [key: string]: object;
    };
    /**
     *
     * @type {string}
     * @memberof SocialLoginRequest
     */
    userAccessToken?: string;
    /**
     *
     * @type {number}
     * @memberof SocialLoginRequest
     */
    userReferralSourceTypeId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SocialLoginRequestClientTypeEnum {
    ANDROID = "ANDROID",
    DESKTOPWEBAPP = "DESKTOP_WEBAPP",
    DMVGO = "DMV_GO",
    DMVORG = "DMV_ORG",
    FRESHDESK = "FRESH_DESK",
    IOS = "IOS",
    MOBILEWEBAPP = "MOBILE_WEBAPP",
    OTRADMINCONSOLE = "OTR_ADMIN_CONSOLE",
    OTRADMINCONSOLEDEVO = "OTR_ADMIN_CONSOLE_DEVO",
    OTRADMINCONSOLELOCALHOST = "OTR_ADMIN_CONSOLE_LOCALHOST",
    OTREXPLORER = "OTR_EXPLORER",
    OTRLAWFIRMPORTAL = "OTR_LAWFIRM_PORTAL",
    OTRLAWFIRMPORTALDEVO = "OTR_LAWFIRM_PORTAL_DEVO",
    OTRLAWFIRMPORTALLOCALHOST = "OTR_LAWFIRM_PORTAL_LOCALHOST",
    OTRWEBSITE = "OTR_WEBSITE",
    OTRWEBSITEDEVO = "OTR_WEBSITE_DEVO",
    OTRWEBSITELOCALHOST = "OTR_WEBSITE_LOCALHOST",
    OTRWIDGET = "OTR_WIDGET",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface SocialLoginResponse
 */
export interface SocialLoginResponse {
    /**
     *
     * @type {boolean}
     * @memberof SocialLoginResponse
     */
    newAccount?: boolean;
    /**
     *
     * @type {SocialLoginUser}
     * @memberof SocialLoginResponse
     */
    user?: SocialLoginUser;
    /**
     *
     * @type {boolean}
     * @memberof SocialLoginResponse
     */
    userLoggedIn?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof SocialLoginResponse
     */
    userRememberMeAuthenticated?: boolean;
}
/**
 *
 * @export
 * @interface SocialLoginUser
 */
export interface SocialLoginUser {
    /**
     *
     * @type {string}
     * @memberof SocialLoginUser
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof SocialLoginUser
     */
    firstname?: string;
    /**
     *
     * @type {boolean}
     * @memberof SocialLoginUser
     */
    isEmailPrivate?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof SocialLoginUser
     */
    isTestUser?: boolean;
    /**
     *
     * @type {string}
     * @memberof SocialLoginUser
     */
    lastname?: string;
    /**
     *
     * @type {number}
     * @memberof SocialLoginUser
     */
    paidCaseCount?: number;
    /**
     *
     * @type {Array<SocialPhoneNumber>}
     * @memberof SocialLoginUser
     */
    phoneNumbers?: Array<SocialPhoneNumber>;
    /**
     *
     * @type {Array<UserRoleDomain>}
     * @memberof SocialLoginUser
     */
    roles?: Array<UserRoleDomain>;
    /**
     *
     * @type {number}
     * @memberof SocialLoginUser
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface SocialPhoneNumber
 */
export interface SocialPhoneNumber {
    /**
     *
     * @type {Timestamp}
     * @memberof SocialPhoneNumber
     */
    creationDateUtc?: Timestamp;
    /**
     *
     * @type {Timestamp}
     * @memberof SocialPhoneNumber
     */
    lastUpdatedDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof SocialPhoneNumber
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof SocialPhoneNumber
     */
    type?: SocialPhoneNumberTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SocialPhoneNumberTypeEnum {
    HOME = "HOME",
    MOBILE = "MOBILE",
    NOTSPECIFIED = "NOT_SPECIFIED",
    OFFICE = "OFFICE"
}
/**
 *
 * @export
 * @interface SqlResponse
 */
export interface SqlResponse {
    /**
     *
     * @type {Results}
     * @memberof SqlResponse
     */
    results?: Results;
}
/**
 *
 * @export
 * @interface StripeAccountLinkDomain
 */
export interface StripeAccountLinkDomain {
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeAccountLinkDomain
     */
    created?: TimestampRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeAccountLinkDomain
     */
    expiresAt?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof StripeAccountLinkDomain
     */
    url?: string;
}
/**
 *
 * @export
 * @interface StripeApplicationFeeDomain
 */
export interface StripeApplicationFeeDomain {
    /**
     *
     * @type {number}
     * @memberof StripeApplicationFeeDomain
     */
    amountRefunded?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeApplicationFeeDomain
     */
    applicationFeeDateUtc?: TimestampRes;
    /**
     *
     * @type {Array<StripeApplicationFeeRefundDomain>}
     * @memberof StripeApplicationFeeDomain
     */
    applicationFeeRefunds?: Array<StripeApplicationFeeRefundDomain>;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {number}
     * @memberof StripeApplicationFeeDomain
     */
    feeAmount?: number;
    /**
     *
     * @type {boolean}
     * @memberof StripeApplicationFeeDomain
     */
    isFullyRefunded?: boolean;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeApplicationFeeDomain
     */
    lastVerifiedDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof StripeApplicationFeeDomain
     */
    refundCount?: number;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeDomain
     */
    stripeApplicationFeeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeDomain
     */
    stripeChargeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeDomain
     */
    stripeDestinationAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeDomain
     */
    stripePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeDomain
     */
    stripePlatformAccountId?: string;
}
/**
 *
 * @export
 * @interface StripeApplicationFeeRefundDomain
 */
export interface StripeApplicationFeeRefundDomain {
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeRefundDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeApplicationFeeRefundDomain
     */
    dateUtc?: TimestampRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeApplicationFeeRefundDomain
     */
    lastVerifiedDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof StripeApplicationFeeRefundDomain
     */
    refundAmount?: number;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeRefundDomain
     */
    stripeApplicationFeeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeRefundDomain
     */
    stripeApplicationFeeRefundId?: string;
}
/**
 *
 * @export
 * @interface StripeApplicationFeeRefundSyncResults
 */
export interface StripeApplicationFeeRefundSyncResults {
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeApplicationFeeRefundSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeRefundSyncResults
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeRefundSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripeApplicationFeeSyncResults
 */
export interface StripeApplicationFeeSyncResults {
    /**
     *
     * @type {Array<StripeApplicationFeeRefundSyncResults>}
     * @memberof StripeApplicationFeeSyncResults
     */
    feeRefunds?: Array<StripeApplicationFeeRefundSyncResults>;
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeApplicationFeeSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeSyncResults
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StripeApplicationFeeSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripeCardDomain
 */
export interface StripeCardDomain {
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    addressLine1Check?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    addressZip?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    addressZipCheck?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    brand?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    cardId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    country?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeCardDomain
     */
    creationDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    cvcCheck?: string;
    /**
     *
     * @type {number}
     * @memberof StripeCardDomain
     */
    expMonth?: number;
    /**
     *
     * @type {number}
     * @memberof StripeCardDomain
     */
    expYear?: number;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    id?: string;
    /**
     *
     * @type {boolean}
     * @memberof StripeCardDomain
     */
    isDefault?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof StripeCardDomain
     */
    isExpired?: boolean;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    last4?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    object?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCardDomain
     */
    ownerFullName?: string;
}
/**
 *
 * @export
 * @interface StripeChargeDomain
 */
export interface StripeChargeDomain {
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    amount?: number;
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    amountRefunded?: number;
    /**
     *
     * @type {StripeApplicationFeeDomain}
     * @memberof StripeChargeDomain
     */
    applicationFee?: StripeApplicationFeeDomain;
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    applicationFeeAmount?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeChargeDomain
     */
    captureDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    destinationAccountId?: string;
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    destinationLawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    destinationLawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    disputeId?: string;
    /**
     *
     * @type {Array<StripeDisputeDomain>}
     * @memberof StripeChargeDomain
     */
    disputes?: Array<StripeDisputeDomain>;
    /**
     *
     * @type {boolean}
     * @memberof StripeChargeDomain
     */
    isExpired?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof StripeChargeDomain
     */
    isFullyRefunded?: boolean;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeChargeDomain
     */
    lastVerifiedDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    paymentSourceId?: string;
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    processingFee?: number;
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    refundCount?: number;
    /**
     *
     * @type {number}
     * @memberof StripeChargeDomain
     */
    refundedProcessingFee?: number;
    /**
     *
     * @type {Array<StripeRefundDomain>}
     * @memberof StripeChargeDomain
     */
    refunds?: Array<StripeRefundDomain>;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    stripeChargeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    stripeCustomerId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeChargeDomain
     */
    stripePlatformAccountId?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeChargeDomain
     */
    transactionDateUtc?: Timestamp;
    /**
     *
     * @type {Array<StripeTransferDomain>}
     * @memberof StripeChargeDomain
     */
    transfers?: Array<StripeTransferDomain>;
}
/**
 *
 * @export
 * @interface StripeChargeSyncResults
 */
export interface StripeChargeSyncResults {
    /**
     *
     * @type {Array<StripeApplicationFeeSyncResults>}
     * @memberof StripeChargeSyncResults
     */
    applicationFees?: Array<StripeApplicationFeeSyncResults>;
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeChargeSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripeChargeSyncResults
     */
    id?: string;
    /**
     *
     * @type {Array<StripeRefundSyncResults>}
     * @memberof StripeChargeSyncResults
     */
    refunds?: Array<StripeRefundSyncResults>;
    /**
     *
     * @type {Array<StripeTransferSyncResults>}
     * @memberof StripeChargeSyncResults
     */
    transfers?: Array<StripeTransferSyncResults>;
    /**
     *
     * @type {string}
     * @memberof StripeChargeSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripeConnectedAccountDomain
 */
export interface StripeConnectedAccountDomain {
    /**
     *
     * @type {string}
     * @memberof StripeConnectedAccountDomain
     */
    accountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeConnectedAccountDomain
     */
    accountType?: StripeConnectedAccountDomainAccountTypeEnum;
    /**
     *
     * @type {string}
     * @memberof StripeConnectedAccountDomain
     */
    businessName?: string;
    /**
     *
     * @type {boolean}
     * @memberof StripeConnectedAccountDomain
     */
    chargesEnabled?: boolean;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeConnectedAccountDomain
     */
    connectedDateUtc?: TimestampRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeConnectedAccountDomain
     */
    creationDateUtc?: TimestampRes;
    /**
     *
     * @type {boolean}
     * @memberof StripeConnectedAccountDomain
     */
    detailsSubmitted?: boolean;
    /**
     *
     * @type {string}
     * @memberof StripeConnectedAccountDomain
     */
    email?: string;
    /**
     *
     * @type {boolean}
     * @memberof StripeConnectedAccountDomain
     */
    isDeprecated?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof StripeConnectedAccountDomain
     */
    payoutsEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof StripeConnectedAccountDomain
     */
    stripePlatformAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeConnectedAccountDomain
     */
    stripePlatformName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum StripeConnectedAccountDomainAccountTypeEnum {
    EXPRESS = "EXPRESS",
    STANDARD = "STANDARD"
}
/**
 *
 * @export
 * @interface StripeCustomerAccountDomain
 */
export interface StripeCustomerAccountDomain {
    /**
     *
     * @type {number}
     * @memberof StripeCustomerAccountDomain
     */
    entityId?: number;
    /**
     *
     * @type {string}
     * @memberof StripeCustomerAccountDomain
     */
    entityType?: StripeCustomerAccountDomainEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof StripeCustomerAccountDomain
     */
    stripeCustomerAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeCustomerAccountDomain
     */
    stripePlatformAccountId?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum StripeCustomerAccountDomainEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
 *
 * @export
 * @interface StripeDisputeDomain
 */
export interface StripeDisputeDomain {
    /**
     *
     * @type {number}
     * @memberof StripeDisputeDomain
     */
    amountDisputed?: number;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    cardBrand?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    cardFunding?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    caseId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    caseStatus?: StripeDisputeDomainCaseStatusEnum;
    /**
     *
     * @type {FreshDeskTicket}
     * @memberof StripeDisputeDomain
     */
    clientTicket?: FreshDeskTicket;
    /**
     *
     * @type {number}
     * @memberof StripeDisputeDomain
     */
    clientTicketId?: number;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeDisputeDomain
     */
    disputeDateUtc?: Timestamp;
    /**
     *
     * @type {number}
     * @memberof StripeDisputeDomain
     */
    disputeFee?: number;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeDisputeDomain
     */
    evidenceSubmittedDateUtc?: Timestamp;
    /**
     *
     * @type {boolean}
     * @memberof StripeDisputeDomain
     */
    isAccountEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof StripeDisputeDomain
     */
    isTransferReversed?: boolean;
    /**
     *
     * @type {number}
     * @memberof StripeDisputeDomain
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    lawfirmName?: string;
    /**
     *
     * @type {FreshDeskTicket}
     * @memberof StripeDisputeDomain
     */
    lawfirmTicket?: FreshDeskTicket;
    /**
     *
     * @type {number}
     * @memberof StripeDisputeDomain
     */
    lawfirmTicketId?: number;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    paymentRecipient?: StripeDisputeDomainPaymentRecipientEnum;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    reason?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeDisputeDomain
     */
    responseDueByDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    status?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    stripeChargeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    stripeCustomerId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    stripeDisputeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeDisputeDomain
     */
    userFullName?: string;
    /**
     *
     * @type {number}
     * @memberof StripeDisputeDomain
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum StripeDisputeDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum StripeDisputeDomainPaymentRecipientEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface StripeFieldVerification
 */
export interface StripeFieldVerification {
    /**
     *
     * @type {string}
     * @memberof StripeFieldVerification
     */
    dbValue?: string;
    /**
     *
     * @type {string}
     * @memberof StripeFieldVerification
     */
    fieldName?: string;
    /**
     *
     * @type {string}
     * @memberof StripeFieldVerification
     */
    stripeValue?: string;
}
/**
 *
 * @export
 * @interface StripePaymentDomain
 */
export interface StripePaymentDomain {
    /**
     *
     * @type {number}
     * @memberof StripePaymentDomain
     */
    amountRefunded?: number;
    /**
     *
     * @type {number}
     * @memberof StripePaymentDomain
     */
    createdByUserId?: number;
    /**
     *
     * @type {string}
     * @memberof StripePaymentDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {boolean}
     * @memberof StripePaymentDomain
     */
    isFullyRefunded?: boolean;
    /**
     *
     * @type {number}
     * @memberof StripePaymentDomain
     */
    paymentAmount?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripePaymentDomain
     */
    paymentDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof StripePaymentDomain
     */
    processingFee?: number;
    /**
     *
     * @type {number}
     * @memberof StripePaymentDomain
     */
    refundCount?: number;
    /**
     *
     * @type {Array<StripePaymentRefundDomain>}
     * @memberof StripePaymentDomain
     */
    refunds?: Array<StripePaymentRefundDomain>;
    /**
     *
     * @type {string}
     * @memberof StripePaymentDomain
     */
    sourceAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentDomain
     */
    sourceTransfer?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentDomain
     */
    stripeApplicationId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentDomain
     */
    stripePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentDomain
     */
    stripePlatformAccountId?: string;
}
/**
 *
 * @export
 * @interface StripePaymentRefundDomain
 */
export interface StripePaymentRefundDomain {
    /**
     *
     * @type {number}
     * @memberof StripePaymentRefundDomain
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    reason?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    stripePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    stripePaymentRefundId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    stripePlatformAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    stripeSourceTransferReversalId?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundDomain
     */
    stripeTransferReversalId?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripePaymentRefundDomain
     */
    transactionDateUtc?: TimestampRes;
}
/**
 *
 * @export
 * @interface StripePaymentRefundSyncResults
 */
export interface StripePaymentRefundSyncResults {
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripePaymentRefundSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundSyncResults
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentRefundSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripePaymentSourceDomain
 */
export interface StripePaymentSourceDomain {
    /**
     *
     * @type {string}
     * @memberof StripePaymentSourceDomain
     */
    country?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripePaymentSourceDomain
     */
    creationDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof StripePaymentSourceDomain
     */
    id?: string;
    /**
     *
     * @type {boolean}
     * @memberof StripePaymentSourceDomain
     */
    isDefault?: boolean;
    /**
     *
     * @type {string}
     * @memberof StripePaymentSourceDomain
     */
    last4?: string;
    /**
     *
     * @type {string}
     * @memberof StripePaymentSourceDomain
     */
    object?: string;
}
/**
 *
 * @export
 * @interface StripePaymentSyncResults
 */
export interface StripePaymentSyncResults {
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripePaymentSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripePaymentSyncResults
     */
    id?: string;
    /**
     *
     * @type {Array<StripePaymentRefundSyncResults>}
     * @memberof StripePaymentSyncResults
     */
    paymentRefunds?: Array<StripePaymentRefundSyncResults>;
    /**
     *
     * @type {string}
     * @memberof StripePaymentSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripeRefundDomain
 */
export interface StripeRefundDomain {
    /**
     *
     * @type {number}
     * @memberof StripeRefundDomain
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof StripeRefundDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeRefundDomain
     */
    lastVerifiedDateUtc?: Timestamp;
    /**
     *
     * @type {number}
     * @memberof StripeRefundDomain
     */
    processingFee?: number;
    /**
     *
     * @type {string}
     * @memberof StripeRefundDomain
     */
    reason?: string;
    /**
     *
     * @type {string}
     * @memberof StripeRefundDomain
     */
    refundStatus?: string;
    /**
     *
     * @type {string}
     * @memberof StripeRefundDomain
     */
    stripeChargeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeRefundDomain
     */
    stripePlatformAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeRefundDomain
     */
    stripeRefundId?: string;
    /**
     *
     * @type {Timestamp}
     * @memberof StripeRefundDomain
     */
    transactionDateUtc?: Timestamp;
}
/**
 *
 * @export
 * @interface StripeRefundSyncResults
 */
export interface StripeRefundSyncResults {
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeRefundSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripeRefundSyncResults
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StripeRefundSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripeReversalSyncResults
 */
export interface StripeReversalSyncResults {
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeReversalSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripeReversalSyncResults
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StripeReversalSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface StripeTransferDomain
 */
export interface StripeTransferDomain {
    /**
     *
     * @type {number}
     * @memberof StripeTransferDomain
     */
    amountReversed?: number;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {boolean}
     * @memberof StripeTransferDomain
     */
    isFullyReversed?: boolean;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeTransferDomain
     */
    lastVerifiedDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof StripeTransferDomain
     */
    reversalCount?: number;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    stripeChargeId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    stripeDestinationAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    stripePaymentId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    stripePlatformAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    stripeTransferGroupId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferDomain
     */
    stripeTransferId?: string;
    /**
     *
     * @type {number}
     * @memberof StripeTransferDomain
     */
    transferAmount?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeTransferDomain
     */
    transferDateUtc?: TimestampRes;
    /**
     *
     * @type {Array<StripeTransferReversalDomain>}
     * @memberof StripeTransferDomain
     */
    transferReversals?: Array<StripeTransferReversalDomain>;
}
/**
 *
 * @export
 * @interface StripeTransferReversalDomain
 */
export interface StripeTransferReversalDomain {
    /**
     *
     * @type {number}
     * @memberof StripeTransferReversalDomain
     */
    amount?: number;
    /**
     *
     * @type {string}
     * @memberof StripeTransferReversalDomain
     */
    currencyCode?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferReversalDomain
     */
    destinationPaymentRefund?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeTransferReversalDomain
     */
    lastVerifiedDateUtc?: TimestampRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof StripeTransferReversalDomain
     */
    reversalDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof StripeTransferReversalDomain
     */
    stripePlatformAccountId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferReversalDomain
     */
    stripeRefundId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferReversalDomain
     */
    stripeTransferId?: string;
    /**
     *
     * @type {string}
     * @memberof StripeTransferReversalDomain
     */
    stripeTransferReversalId?: string;
}
/**
 *
 * @export
 * @interface StripeTransferSyncResults
 */
export interface StripeTransferSyncResults {
    /**
     *
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeTransferSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     *
     * @type {string}
     * @memberof StripeTransferSyncResults
     */
    id?: string;
    /**
     *
     * @type {Array<StripeReversalSyncResults>}
     * @memberof StripeTransferSyncResults
     */
    reversals?: Array<StripeReversalSyncResults>;
    /**
     *
     * @type {string}
     * @memberof StripeTransferSyncResults
     */
    verificationMessage?: string;
}
/**
 *
 * @export
 * @interface SubscribeRequest
 */
export interface SubscribeRequest {
    /**
     *
     * @type {SubscriberDomain}
     * @memberof SubscribeRequest
     */
    subscriber?: SubscriberDomain;
}
/**
 *
 * @export
 * @interface Subscriber
 */
export interface Subscriber {
    /**
     *
     * @type {string}
     * @memberof Subscriber
     */
    created_at?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof Subscriber
     */
    custom_fields?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof Subscriber
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof Subscriber
     */
    id?: string;
    /**
     *
     * @type {boolean}
     * @memberof Subscriber
     */
    prospect?: boolean;
    /**
     *
     * @type {string}
     * @memberof Subscriber
     */
    status?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Subscriber
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Subscriber
     */
    time_zone?: string;
    /**
     *
     * @type {string}
     * @memberof Subscriber
     */
    user_id?: string;
    /**
     *
     * @type {number}
     * @memberof Subscriber
     */
    utc_offset?: number;
}
/**
 *
 * @export
 * @interface SubscriberDomain
 */
export interface SubscriberDomain {
    /**
     *
     * @type {string}
     * @memberof SubscriberDomain
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof SubscriberDomain
     */
    fullName?: string;
    /**
     *
     * @type {string}
     * @memberof SubscriberDomain
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof SubscriberDomain
     */
    roleType?: string;
    /**
     *
     * @type {string}
     * @memberof SubscriberDomain
     */
    subscriptionType?: SubscriberDomainSubscriptionTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SubscriberDomainSubscriptionTypeEnum {
    WEBBROCHURELAUNCHNOTIFICATION = "WEB_BROCHURE_LAUNCH_NOTIFICATION"
}
/**
 *
 * @export
 * @interface SyncStripeChargesRequest
 */
export interface SyncStripeChargesRequest {
    /**
     *
     * @type {boolean}
     * @memberof SyncStripeChargesRequest
     */
    isDryRun?: boolean;
    /**
     *
     * @type {number}
     * @memberof SyncStripeChargesRequest
     */
    numChargesToVerify?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof SyncStripeChargesRequest
     */
    stripeChargeIds?: Array<string>;
}
/**
 *
 * @export
 * @interface SyncStripeChargesResponse
 */
export interface SyncStripeChargesResponse {
    /**
     *
     * @type {{ [key: string]: StripeChargeSyncResults; }}
     * @memberof SyncStripeChargesResponse
     */
    output?: {
        [key: string]: StripeChargeSyncResults;
    };
}
/**
 *
 * @export
 * @interface SyncStripeDisputeResponse
 */
export interface SyncStripeDisputeResponse {
    /**
     *
     * @type {StripeDisputeDomain}
     * @memberof SyncStripeDisputeResponse
     */
    dispute?: StripeDisputeDomain;
}
/**
 *
 * @export
 * @interface SyncStripePaymentsRequest
 */
export interface SyncStripePaymentsRequest {
    /**
     *
     * @type {boolean}
     * @memberof SyncStripePaymentsRequest
     */
    isDryRun?: boolean;
    /**
     *
     * @type {number}
     * @memberof SyncStripePaymentsRequest
     */
    numPaymentsToVerify?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof SyncStripePaymentsRequest
     */
    stripePaymentIds?: Array<string>;
}
/**
 *
 * @export
 * @interface SyncStripePaymentsResponse
 */
export interface SyncStripePaymentsResponse {
    /**
     *
     * @type {{ [key: string]: StripePaymentSyncResults; }}
     * @memberof SyncStripePaymentsResponse
     */
    output?: {
        [key: string]: StripePaymentSyncResults;
    };
}
/**
 *
 * @export
 * @interface SyncStripeRefundsRequest
 */
export interface SyncStripeRefundsRequest {
    /**
     *
     * @type {boolean}
     * @memberof SyncStripeRefundsRequest
     */
    isDryRun?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof SyncStripeRefundsRequest
     */
    stripeRefundIds?: Array<string>;
}
/**
 *
 * @export
 * @interface SyncStripeTransfersRequest
 */
export interface SyncStripeTransfersRequest {
    /**
     *
     * @type {boolean}
     * @memberof SyncStripeTransfersRequest
     */
    isDryRun?: boolean;
    /**
     *
     * @type {number}
     * @memberof SyncStripeTransfersRequest
     */
    numTransfersToVerify?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof SyncStripeTransfersRequest
     */
    stripeTransferIds?: Array<string>;
}
/**
 *
 * @export
 * @interface SyncStripeTransfersResponse
 */
export interface SyncStripeTransfersResponse {
    /**
     *
     * @type {{ [key: string]: StripeTransferSyncResults; }}
     * @memberof SyncStripeTransfersResponse
     */
    output?: {
        [key: string]: StripeTransferSyncResults;
    };
}
/**
 *
 * @export
 * @interface TemporalUnit
 */
export interface TemporalUnit {
    /**
     *
     * @type {boolean}
     * @memberof TemporalUnit
     */
    dateBased?: boolean;
    /**
     *
     * @type {Duration}
     * @memberof TemporalUnit
     */
    duration?: Duration;
    /**
     *
     * @type {boolean}
     * @memberof TemporalUnit
     */
    durationEstimated?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof TemporalUnit
     */
    timeBased?: boolean;
}
/**
 *
 * @export
 * @interface TicketLeadDomain
 */
export interface TicketLeadDomain {
    /**
     *
     * @type {string}
     * @memberof TicketLeadDomain
     */
    caseId?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof TicketLeadDomain
     */
    citationCreationDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof TicketLeadDomain
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketLeadDomain
     */
    classification?: TicketLeadDomainClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof TicketLeadDomain
     */
    courtName?: string;
    /**
     *
     * @type {Array<NoteDomain>}
     * @memberof TicketLeadDomain
     */
    notes?: Array<NoteDomain>;
    /**
     *
     * @type {CountryRegion}
     * @memberof TicketLeadDomain
     */
    region?: CountryRegion;
    /**
     *
     * @type {string}
     * @memberof TicketLeadDomain
     */
    ticketImageUrl?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum TicketLeadDomainClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface TicketReviewRequest
 */
export interface TicketReviewRequest {
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequest
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    citationState?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    emailAddress?: string;
    /**
     *
     * @type {FreshDeskTicket}
     * @memberof TicketReviewRequest
     */
    freshDeskTicket?: FreshDeskTicket;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequest
     */
    freshdeskTicketId?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof TicketReviewRequest
     */
    lastBookingDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    source?: TicketReviewRequestSourceEnum;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    status?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof TicketReviewRequest
     */
    submissionDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequest
     */
    ticketEvaluationRequestId?: number;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequest
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    violation?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequest
     */
    visitorName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum TicketReviewRequestSourceEnum {
    OTREXITPOPUP = "OTR_EXIT_POPUP",
    QUARANTINELANDINGPAGE = "QUARANTINE_LANDING_PAGE",
    TICKETREVIEWPAGE = "TICKET_REVIEW_PAGE"
}
/**
 *
 * @export
 * @interface TicketReviewRequestReq
 */
export interface TicketReviewRequestReq {
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestReq
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    citationState?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    emailAddress?: string;
    /**
     *
     * @type {FreshDeskTicketReq}
     * @memberof TicketReviewRequestReq
     */
    freshDeskTicket?: FreshDeskTicketReq;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestReq
     */
    freshdeskTicketId?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof TicketReviewRequestReq
     */
    lastBookingDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    source?: TicketReviewRequestReqSourceEnum;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    status?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof TicketReviewRequestReq
     */
    submissionDateUtc?: TimestampReq;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestReq
     */
    ticketEvaluationRequestId?: number;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestReq
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    violation?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestReq
     */
    visitorName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum TicketReviewRequestReqSourceEnum {
    OTREXITPOPUP = "OTR_EXIT_POPUP",
    QUARANTINELANDINGPAGE = "QUARANTINE_LANDING_PAGE",
    TICKETREVIEWPAGE = "TICKET_REVIEW_PAGE"
}
/**
 *
 * @export
 * @interface TicketReviewRequestRes
 */
export interface TicketReviewRequestRes {
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestRes
     */
    citationId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    citationState?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    emailAddress?: string;
    /**
     *
     * @type {FreshDeskTicketRes}
     * @memberof TicketReviewRequestRes
     */
    freshDeskTicket?: FreshDeskTicketRes;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestRes
     */
    freshdeskTicketId?: number;
    /**
     *
     * @type {TimestampRes}
     * @memberof TicketReviewRequestRes
     */
    lastBookingDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    source?: TicketReviewRequestResSourceEnum;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    status?: string;
    /**
     *
     * @type {TimestampRes}
     * @memberof TicketReviewRequestRes
     */
    submissionDateUtc?: TimestampRes;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestRes
     */
    ticketEvaluationRequestId?: number;
    /**
     *
     * @type {number}
     * @memberof TicketReviewRequestRes
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    violation?: string;
    /**
     *
     * @type {string}
     * @memberof TicketReviewRequestRes
     */
    visitorName?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum TicketReviewRequestResSourceEnum {
    OTREXITPOPUP = "OTR_EXIT_POPUP",
    QUARANTINELANDINGPAGE = "QUARANTINE_LANDING_PAGE",
    TICKETREVIEWPAGE = "TICKET_REVIEW_PAGE"
}
/**
 *
 * @export
 * @interface TimeZone
 */
export interface TimeZone {
    /**
     *
     * @type {string}
     * @memberof TimeZone
     */
    displayName?: string;
    /**
     *
     * @type {number}
     * @memberof TimeZone
     */
    dstsavings?: number;
    /**
     *
     * @type {string}
     * @memberof TimeZone
     */
    id?: string;
    /**
     *
     * @type {number}
     * @memberof TimeZone
     */
    rawOffset?: number;
}
/**
 *
 * @export
 * @interface TimeZoneReq
 */
export interface TimeZoneReq {
    /**
     *
     * @type {string}
     * @memberof TimeZoneReq
     */
    id?: string;
    /**
     *
     * @type {number}
     * @memberof TimeZoneReq
     */
    rawOffset?: number;
}
/**
 *
 * @export
 * @interface TimeZoneRes
 */
export interface TimeZoneRes {
    /**
     *
     * @type {string}
     * @memberof TimeZoneRes
     */
    displayName?: string;
    /**
     *
     * @type {number}
     * @memberof TimeZoneRes
     */
    dstsavings?: number;
    /**
     *
     * @type {string}
     * @memberof TimeZoneRes
     */
    id?: string;
    /**
     *
     * @type {number}
     * @memberof TimeZoneRes
     */
    rawOffset?: number;
}
/**
 *
 * @export
 * @interface Timestamp
 */
export interface Timestamp {
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    date?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    day?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    hours?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    minutes?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    month?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    nanos?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    seconds?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    timezoneOffset?: number;
    /**
     *
     * @type {number}
     * @memberof Timestamp
     */
    year?: number;
}
/**
 *
 * @export
 * @interface TimestampReq
 */
export interface TimestampReq {
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    date?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    hours?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    minutes?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    month?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    nanos?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    seconds?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampReq
     */
    year?: number;
}
/**
 *
 * @export
 * @interface TimestampRes
 */
export interface TimestampRes {
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    date?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    day?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    hours?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    minutes?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    month?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    nanos?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    seconds?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    timezoneOffset?: number;
    /**
     *
     * @type {number}
     * @memberof TimestampRes
     */
    year?: number;
}
/**
 *
 * @export
 * @interface TrafficViolationInputRequest
 */
export interface TrafficViolationInputRequest {
    /**
     *
     * @type {number}
     * @memberof TrafficViolationInputRequest
     */
    violationId?: number;
}
/**
 *
 * @export
 * @interface TrafficViolationTypeDomain
 */
export interface TrafficViolationTypeDomain {
    /**
     *
     * @type {number}
     * @memberof TrafficViolationTypeDomain
     */
    insuranceIncreasePercent?: number;
    /**
     *
     * @type {boolean}
     * @memberof TrafficViolationTypeDomain
     */
    isMovingViolation?: boolean;
    /**
     *
     * @type {Array<PenaltyModel>}
     * @memberof TrafficViolationTypeDomain
     */
    penalties?: Array<PenaltyModel>;
    /**
     *
     * @type {string}
     * @memberof TrafficViolationTypeDomain
     */
    trafficViolationDesc?: string;
    /**
     *
     * @type {number}
     * @memberof TrafficViolationTypeDomain
     */
    trafficViolationTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof TrafficViolationTypeDomain
     */
    userFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof TrafficViolationTypeDomain
     */
    userFriendlyShortForm?: string;
    /**
     *
     * @type {string}
     * @memberof TrafficViolationTypeDomain
     */
    violationClassification?: TrafficViolationTypeDomainViolationClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof TrafficViolationTypeDomain
     */
    violationCode?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum TrafficViolationTypeDomainViolationClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface TransferCaseRequest
 */
export interface TransferCaseRequest {
    /**
     *
     * @type {boolean}
     * @memberof TransferCaseRequest
     */
    forceTransfer?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof TransferCaseRequest
     */
    ignoreCapturedCharges?: boolean;
    /**
     *
     * @type {number}
     * @memberof TransferCaseRequest
     */
    receivingLawfirmId?: number;
}
/**
 *
 * @export
 * @interface USStateDomain
 */
export interface USStateDomain {
    /**
     *
     * @type {string}
     * @memberof USStateDomain
     */
    stateCode?: string;
    /**
     *
     * @type {string}
     * @memberof USStateDomain
     */
    stateName?: string;
}
/**
 *
 * @export
 * @interface UpdateAddress
 */
export interface UpdateAddress {
    /**
     *
     * @type {string}
     * @memberof UpdateAddress
     */
    addressLine1?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateAddress
     */
    addressLine2?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateAddress
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateAddress
     */
    countryCode?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateAddress
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateAddress
     */
    regionCode?: string;
}
/**
 *
 * @export
 * @interface UpdateCaseDeclineTicketsRequest
 */
export interface UpdateCaseDeclineTicketsRequest {
    /**
     *
     * @type {number}
     * @memberof UpdateCaseDeclineTicketsRequest
     */
    clientDeclineTicketId?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateCaseDeclineTicketsRequest
     */
    lawfirmDeclineTicketId?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateCaseDeclineTicketsRequest
     */
    lawfirmId?: number;
}
/**
 *
 * @export
 * @interface UpdateCasePaymentRequest
 */
export interface UpdateCasePaymentRequest {
    /**
     *
     * @type {number}
     * @memberof UpdateCasePaymentRequest
     */
    baseFeeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateCasePaymentRequest
     */
    lawfirmReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateCasePaymentRequest
     */
    otrMarketingFeeInCents?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateCasePaymentRequest
     */
    otrReferralCodeAdjustmentInCents?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateCasePaymentRequest
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateCasePaymentRequest
     */
    recipient?: UpdateCasePaymentRequestRecipientEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateCasePaymentRequest
     */
    transactionMethod?: UpdateCasePaymentRequestTransactionMethodEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateCasePaymentRequestRecipientEnum {
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateCasePaymentRequestTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface UpdateCitationAddressRequest
 */
export interface UpdateCitationAddressRequest {
    /**
     *
     * @type {AddressDomainReq}
     * @memberof UpdateCitationAddressRequest
     */
    address?: AddressDomainReq;
}
/**
 *
 * @export
 * @interface UpdateCitationPictureRequest
 */
export interface UpdateCitationPictureRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateCitationPictureRequest
     */
    base64ImageData?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCitationPictureRequest
     */
    clientEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCitationPictureRequest
     */
    imageContentType?: string;
}
/**
 *
 * @export
 * @interface UpdateCitationRequest
 */
export interface UpdateCitationRequest {
    /**
     *
     * @type {CitationInputRequest}
     * @memberof UpdateCitationRequest
     */
    citation?: CitationInputRequest;
}
/**
 *
 * @export
 * @interface UpdateCourtRequest
 */
export interface UpdateCourtRequest {
    /**
     *
     * @type {CourtDomainReq}
     * @memberof UpdateCourtRequest
     */
    court?: CourtDomainReq;
}
/**
 *
 * @export
 * @interface UpdateDisputeRequest
 */
export interface UpdateDisputeRequest {
    /**
     *
     * @type {StripeDisputeDomain}
     * @memberof UpdateDisputeRequest
     */
    dispute?: StripeDisputeDomain;
}
/**
 *
 * @export
 * @interface UpdateInvoiceLineItemRequest
 */
export interface UpdateInvoiceLineItemRequest {
    /**
     *
     * @type {CaseLineItemDomainReq}
     * @memberof UpdateInvoiceLineItemRequest
     */
    lineItem?: CaseLineItemDomainReq;
}
/**
 *
 * @export
 * @interface UpdateLawfirmFeeRequest
 */
export interface UpdateLawfirmFeeRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    note?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmFeeRequest
     */
    otrFeeAmount?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmFeeRequest
     */
    processingFeeAmount?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    sourceCasePaymentId?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmFeeRequest
     */
    totalFeeAmount?: number;
    /**
     *
     * @type {TimestampReq}
     * @memberof UpdateLawfirmFeeRequest
     */
    transactionDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    transactionMethod?: UpdateLawfirmFeeRequestTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    transactionReferenceId?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof UpdateLawfirmFeeRequest
     */
    updatedDueDateUtc?: TimestampReq;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateLawfirmFeeRequestTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface UpdateLawfirmFeeResponse
 */
export interface UpdateLawfirmFeeResponse {
    /**
     *
     * @type {LawfirmFeeDomain}
     * @memberof UpdateLawfirmFeeResponse
     */
    lawfirmFee?: LawfirmFeeDomain;
}
/**
 *
 * @export
 * @interface UpdateLawfirmModel
 */
export interface UpdateLawfirmModel {
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    aboutUsBlurb?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmModel
     */
    caseAssignmentPriority?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    coverPhotoUrl?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmModel
     */
    createdBy?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    establishedDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmModel
     */
    establishedYear?: number;
    /**
     *
     * @type {boolean}
     * @memberof UpdateLawfirmModel
     */
    isTestLawfirm?: boolean;
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmModel
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    lawfirmPaymentModel?: UpdateLawfirmModelLawfirmPaymentModelEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    lawfirmState?: UpdateLawfirmModelLawfirmStateEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    membershipStartDateUtc?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    otrNotes?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    primaryEmailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    primaryPhoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    profilePictureUrl?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    tagLine?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmModel
     */
    website?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateLawfirmModelLawfirmPaymentModelEnum {
    DESTINATIONACCOUNT = "DESTINATION_ACCOUNT",
    SEPARATECHARGE = "SEPARATE_CHARGE",
    TRANSFERDEDUCTION = "TRANSFER_DEDUCTION"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateLawfirmModelLawfirmStateEnum {
    ACCOUNTCLOSED = "ACCOUNT_CLOSED",
    DUPLICATE = "DUPLICATE",
    ESTABLISHED = "ESTABLISHED",
    FUTURELEAD = "FUTURE_LEAD",
    INTRIAL = "IN_TRIAL",
    LAWFIRMINTERESTED = "LAWFIRM_INTERESTED",
    LAWFIRMLEAD = "LAWFIRM_LEAD",
    LAWFIRMNOTINTERESTED = "LAWFIRM_NOT_INTERESTED",
    NOTINTERESTEDFEESPLITTINGETHICS = "NOT_INTERESTED_FEE_SPLITTING_ETHICS",
    NOTINTERESTEDREFUNDETHICS = "NOT_INTERESTED_REFUND_ETHICS",
    ONBOARDING = "ONBOARDING",
    TEMPORARILYTURNEDOFF = "TEMPORARILY_TURNED_OFF",
    TERMINATEDFRAUD = "TERMINATED_FRAUD",
    TERMINATEDPOORSERVICE = "TERMINATED_POOR_SERVICE",
    TERMINATEDPOORSUCCESS = "TERMINATED_POOR_SUCCESS",
    UNDERREVIEW = "UNDER_REVIEW"
}
/**
 *
 * @export
 * @interface UpdateLawfirmPaymentModelRequest
 */
export interface UpdateLawfirmPaymentModelRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmPaymentModelRequest
     */
    paymentModel?: UpdateLawfirmPaymentModelRequestPaymentModelEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateLawfirmPaymentModelRequestPaymentModelEnum {
    DESTINATIONACCOUNT = "DESTINATION_ACCOUNT",
    SEPARATECHARGE = "SEPARATE_CHARGE",
    TRANSFERDEDUCTION = "TRANSFER_DEDUCTION"
}
/**
 *
 * @export
 * @interface UpdateLawfirmPayoutRequest
 */
export interface UpdateLawfirmPayoutRequest {
    /**
     *
     * @type {number}
     * @memberof UpdateLawfirmPayoutRequest
     */
    payoutAmount?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmPayoutRequest
     */
    sourceCasePaymentId?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof UpdateLawfirmPayoutRequest
     */
    transactionDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmPayoutRequest
     */
    transactionMethod?: UpdateLawfirmPayoutRequestTransactionMethodEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateLawfirmPayoutRequest
     */
    transactionReferenceId?: string;
    /**
     *
     * @type {TimestampReq}
     * @memberof UpdateLawfirmPayoutRequest
     */
    updatedDueDateUtc?: TimestampReq;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateLawfirmPayoutRequestTransactionMethodEnum {
    CHECK = "CHECK",
    DESTINATIONCHARGETRANSFER = "DESTINATION_CHARGE_TRANSFER",
    LOBCHECK = "LOB_CHECK",
    PAYPAL = "PAYPAL",
    STRIPEAPPLICATIONFEE = "STRIPE_APPLICATION_FEE",
    STRIPECHARGE = "STRIPE_CHARGE",
    STRIPECONNECTDEBIT = "STRIPE_CONNECT_DEBIT",
    STRIPETRANSFER = "STRIPE_TRANSFER",
    UNKNOWN = "UNKNOWN",
    VENMO = "VENMO",
    ZELLE = "ZELLE"
}
/**
 *
 * @export
 * @interface UpdateLawfirmPayoutResponse
 */
export interface UpdateLawfirmPayoutResponse {
    /**
     *
     * @type {LawfirmPayoutDomain}
     * @memberof UpdateLawfirmPayoutResponse
     */
    lawfirmPayout?: LawfirmPayoutDomain;
}
/**
 *
 * @export
 * @interface UpdateLawfirmRequest
 */
export interface UpdateLawfirmRequest {
    /**
     *
     * @type {UpdateLawfirmModel}
     * @memberof UpdateLawfirmRequest
     */
    lawfirm?: UpdateLawfirmModel;
}
/**
 *
 * @export
 * @interface UpdateLawfirmSettingsRequest
 */
export interface UpdateLawfirmSettingsRequest {
    /**
     *
     * @type {LawfirmSettingsDomainReq}
     * @memberof UpdateLawfirmSettingsRequest
     */
    settings?: LawfirmSettingsDomainReq;
}
/**
 *
 * @export
 * @interface UpdateNoteInput
 */
export interface UpdateNoteInput {
    /**
     *
     * @type {string}
     * @memberof UpdateNoteInput
     */
    note?: string;
}
/**
 *
 * @export
 * @interface UpdateNoteRequest
 */
export interface UpdateNoteRequest {
    /**
     *
     * @type {UpdateNoteInput}
     * @memberof UpdateNoteRequest
     */
    note?: UpdateNoteInput;
}
/**
 *
 * @export
 * @interface UpdateNoteResponse
 */
export interface UpdateNoteResponse {
    /**
     *
     * @type {NoteDomain}
     * @memberof UpdateNoteResponse
     */
    note?: NoteDomain;
}
/**
 *
 * @export
 * @interface UpdatePaymentDueDateRequest
 */
export interface UpdatePaymentDueDateRequest {
    /**
     *
     * @type {string}
     * @memberof UpdatePaymentDueDateRequest
     */
    paymentDueDate?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePaymentDueDateRequest
     */
    timeZoneId?: string;
}
/**
 *
 * @export
 * @interface UpdatePhoneNumber
 */
export interface UpdatePhoneNumber {
    /**
     *
     * @type {string}
     * @memberof UpdatePhoneNumber
     */
    entityType?: UpdatePhoneNumberEntityTypeEnum;
    /**
     *
     * @type {string}
     * @memberof UpdatePhoneNumber
     */
    extension?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePhoneNumber
     */
    phoneNumber?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePhoneNumber
     */
    type?: UpdatePhoneNumberTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdatePhoneNumberEntityTypeEnum {
    CASE = "CASE",
    CASEPAYMENT = "CASE_PAYMENT",
    CITATION = "CITATION",
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    LAWFIRMCASE = "LAWFIRM_CASE",
    LAWYER = "LAWYER",
    LINEITEM = "LINE_ITEM",
    STRIPECHARGE = "STRIPE_CHARGE",
    USER = "USER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdatePhoneNumberTypeEnum {
    HOME = "HOME",
    MOBILE = "MOBILE",
    NOTSPECIFIED = "NOT_SPECIFIED",
    OFFICE = "OFFICE"
}
/**
 *
 * @export
 * @interface UpdateProfilePictureRequest
 */
export interface UpdateProfilePictureRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateProfilePictureRequest
     */
    base64ImageData?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateProfilePictureRequest
     */
    contentType?: string;
}
/**
 *
 * @export
 * @interface UpdateRefundEligibilityForCaseRequest
 */
export interface UpdateRefundEligibilityForCaseRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateRefundEligibilityForCaseRequest
     */
    refundOwner?: UpdateRefundEligibilityForCaseRequestRefundOwnerEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateRefundEligibilityForCaseRequestRefundOwnerEnum {
    LAWFIRM = "LAWFIRM",
    NONE = "NONE",
    OTR = "OTR"
}
/**
 *
 * @export
 * @interface UpdateReplyForCustomerReview
 */
export interface UpdateReplyForCustomerReview {
    /**
     *
     * @type {string}
     * @memberof UpdateReplyForCustomerReview
     */
    copy?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateReplyForCustomerReview
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface UpdateUserDetailsResponse
 */
export interface UpdateUserDetailsResponse {
    /**
     *
     * @type {UserDomain}
     * @memberof UpdateUserDetailsResponse
     */
    user?: UserDomain;
}
/**
 *
 * @export
 * @interface UpdateUserModel
 */
export interface UpdateUserModel {
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    dob?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    firstname?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    gender?: string;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    hasLeftReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isLawfirmAccessGranted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isPaymentPlansAllowed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isTestUser?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isUnsubscribed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isUserAccountEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    loginProvider?: UpdateUserModelLoginProviderEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    privacyMode?: UpdateUserModelPrivacyModeEnum;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    profilePicture?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    signUpCode?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateUserModel
     */
    signUpCodeUseCount?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateUserModel
     */
    userAlias?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateUserModelLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateUserModelPrivacyModeEnum {
    FRIENDS = "FRIENDS",
    PRIVATE = "PRIVATE",
    PUBLIC = "PUBLIC",
    SEMIPUBLIC = "SEMI_PUBLIC"
}
/**
 *
 * @export
 * @interface UpdateUserPhoneNumberRequest
 */
export interface UpdateUserPhoneNumberRequest {
    /**
     *
     * @type {UpdatePhoneNumber}
     * @memberof UpdateUserPhoneNumberRequest
     */
    phoneNumber?: UpdatePhoneNumber;
}
/**
 *
 * @export
 * @interface UpdateUserProfileRequest
 */
export interface UpdateUserProfileRequest {
    /**
     *
     * @type {UpdateUserModel}
     * @memberof UpdateUserProfileRequest
     */
    user?: UpdateUserModel;
}
/**
 *
 * @export
 * @interface UpdateUserRolesRequest
 */
export interface UpdateUserRolesRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateUserRolesRequest
     */
    roles?: Array<UpdateUserRolesRequestRolesEnum>;
    /**
     *
     * @type {number}
     * @memberof UpdateUserRolesRequest
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateUserRolesRequestRolesEnum {
    ADMIN = "ADMIN",
    DEFENDANT = "DEFENDANT",
    LAWYER = "LAWYER",
    PARTNER = "PARTNER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface UpdateViolationRequest
 */
export interface UpdateViolationRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateViolationRequest
     */
    classification?: UpdateViolationRequestClassificationEnum;
    /**
     *
     * @type {boolean}
     * @memberof UpdateViolationRequest
     */
    isEnabledForCustomers?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UpdateViolationRequest
     */
    isEnabledForLawfirms?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateViolationRequest
     */
    userFriendlyName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateViolationRequest
     */
    userFriendlyShortForm?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateViolationRequest
     */
    violationCode?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateViolationRequest
     */
    violationDescription?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateViolationRequestClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface UpsertAddressRequest
 */
export interface UpsertAddressRequest {
    /**
     *
     * @type {UpdateAddress}
     * @memberof UpsertAddressRequest
     */
    address?: UpdateAddress;
}
/**
 *
 * @export
 * @interface UserAccountModel
 */
export interface UserAccountModel {
    /**
     *
     * @type {string}
     * @memberof UserAccountModel
     */
    accountCreationDateUtc?: string;
    /**
     *
     * @type {number}
     * @memberof UserAccountModel
     */
    formerUserId?: number;
    /**
     *
     * @type {string}
     * @memberof UserAccountModel
     */
    loginProvider?: UserAccountModelLoginProviderEnum;
    /**
     *
     * @type {boolean}
     * @memberof UserAccountModel
     */
    merged?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserAccountModel
     */
    primary?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserAccountModel
     */
    userHandle?: string;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserAccountModelLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
 *
 * @export
 * @interface UserBookingsDomain
 */
export interface UserBookingsDomain {
    /**
     *
     * @type {number}
     * @memberof UserBookingsDomain
     */
    numBookings?: number;
    /**
     *
     * @type {number}
     * @memberof UserBookingsDomain
     */
    numCancellations?: number;
}
/**
 *
 * @export
 * @interface UserDetails
 */
export interface UserDetails {
    /**
     *
     * @type {string}
     * @memberof UserDetails
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UserDetails
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UserDetails
     */
    lastName?: string;
    /**
     *
     * @type {number}
     * @memberof UserDetails
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface UserDomain
 */
export interface UserDomain {
    /**
     *
     * @type {Array<UserAccountModel>}
     * @memberof UserDomain
     */
    accounts?: Array<UserAccountModel>;
    /**
     *
     * @type {AddressDomain}
     * @memberof UserDomain
     */
    address?: AddressDomain;
    /**
     *
     * @type {Timestamp}
     * @memberof UserDomain
     */
    creationDateUtc?: Timestamp;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    dob?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    eligibleForAppReview?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    firstname?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    fullName?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    gender?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    hasLeftReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    isEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    isPaymentPlansAllowed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    isTestUser?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomain
     */
    isUnsubscribed?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    lawyerJobTitle?: UserDomainLawyerJobTitleEnum;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    loginProvider?: UserDomainLoginProviderEnum;
    /**
     *
     * @type {number}
     * @memberof UserDomain
     */
    numBookingCancelations?: number;
    /**
     *
     * @type {number}
     * @memberof UserDomain
     */
    paidCaseCount?: number;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    password?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    passwordEncrypted?: string;
    /**
     *
     * @type {Array<PhoneNumberDomain>}
     * @memberof UserDomain
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    privacyMode?: UserDomainPrivacyModeEnum;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    profilePicture?: string;
    /**
     *
     * @type {Array<UserRoleDomain>}
     * @memberof UserDomain
     */
    roles?: Array<UserRoleDomain>;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    signUpCode?: string;
    /**
     *
     * @type {number}
     * @memberof UserDomain
     */
    signUpCodeUseCount?: number;
    /**
     *
     * @type {Array<UserSubscriptionPlanModel>}
     * @memberof UserDomain
     */
    subscriptionPlans?: Array<UserSubscriptionPlanModel>;
    /**
     *
     * @type {string}
     * @memberof UserDomain
     */
    userAlias?: string;
    /**
     *
     * @type {number}
     * @memberof UserDomain
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainLawyerJobTitleEnum {
    ACCOUNTANT = "ACCOUNTANT",
    ATTORNEY = "ATTORNEY",
    ATTORNEYASSOCIATE = "ATTORNEY_ASSOCIATE",
    ATTORNEYCOUNSEL = "ATTORNEY_COUNSEL",
    ATTORNEYMANAGINGPARTNER = "ATTORNEY_MANAGING_PARTNER",
    ATTORNEYPARTNER = "ATTORNEY_PARTNER",
    ATTORNEYSTAFF = "ATTORNEY_STAFF",
    CUSTOMERSERVICEREP = "CUSTOMER_SERVICE_REP",
    LEGALASSISTANT = "LEGAL_ASSISTANT",
    LEGALINTERN = "LEGAL_INTERN",
    LEGALSECRETARY = "LEGAL_SECRETARY",
    OTHER = "OTHER",
    PARALEGAL = "PARALEGAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainPrivacyModeEnum {
    FRIENDS = "FRIENDS",
    PRIVATE = "PRIVATE",
    PUBLIC = "PUBLIC",
    SEMIPUBLIC = "SEMI_PUBLIC"
}
/**
 *
 * @export
 * @interface UserDomainReq
 */
export interface UserDomainReq {
    /**
     *
     * @type {Array<UserAccountModel>}
     * @memberof UserDomainReq
     */
    accounts?: Array<UserAccountModel>;
    /**
     *
     * @type {AddressDomainReq}
     * @memberof UserDomainReq
     */
    address?: AddressDomainReq;
    /**
     *
     * @type {TimestampReq}
     * @memberof UserDomainReq
     */
    creationDateUtc?: TimestampReq;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    dob?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    eligibleForAppReview?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    firstname?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    gender?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    hasLeftReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    isEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    isPaymentPlansAllowed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    isTestUser?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainReq
     */
    isUnsubscribed?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    lawyerJobTitle?: UserDomainReqLawyerJobTitleEnum;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    loginProvider?: UserDomainReqLoginProviderEnum;
    /**
     *
     * @type {number}
     * @memberof UserDomainReq
     */
    numBookingCancelations?: number;
    /**
     *
     * @type {number}
     * @memberof UserDomainReq
     */
    paidCaseCount?: number;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    password?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    passwordEncrypted?: string;
    /**
     *
     * @type {Array<PhoneNumberDomainReq>}
     * @memberof UserDomainReq
     */
    phoneNumbers?: Array<PhoneNumberDomainReq>;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    privacyMode?: UserDomainReqPrivacyModeEnum;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    profilePicture?: string;
    /**
     *
     * @type {Array<UserRoleDomain>}
     * @memberof UserDomainReq
     */
    roles?: Array<UserRoleDomain>;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    signUpCode?: string;
    /**
     *
     * @type {number}
     * @memberof UserDomainReq
     */
    signUpCodeUseCount?: number;
    /**
     *
     * @type {Array<UserSubscriptionPlanModelReq>}
     * @memberof UserDomainReq
     */
    subscriptionPlans?: Array<UserSubscriptionPlanModelReq>;
    /**
     *
     * @type {string}
     * @memberof UserDomainReq
     */
    userAlias?: string;
    /**
     *
     * @type {number}
     * @memberof UserDomainReq
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainReqLawyerJobTitleEnum {
    ACCOUNTANT = "ACCOUNTANT",
    ATTORNEY = "ATTORNEY",
    ATTORNEYASSOCIATE = "ATTORNEY_ASSOCIATE",
    ATTORNEYCOUNSEL = "ATTORNEY_COUNSEL",
    ATTORNEYMANAGINGPARTNER = "ATTORNEY_MANAGING_PARTNER",
    ATTORNEYPARTNER = "ATTORNEY_PARTNER",
    ATTORNEYSTAFF = "ATTORNEY_STAFF",
    CUSTOMERSERVICEREP = "CUSTOMER_SERVICE_REP",
    LEGALASSISTANT = "LEGAL_ASSISTANT",
    LEGALINTERN = "LEGAL_INTERN",
    LEGALSECRETARY = "LEGAL_SECRETARY",
    OTHER = "OTHER",
    PARALEGAL = "PARALEGAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainReqLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainReqPrivacyModeEnum {
    FRIENDS = "FRIENDS",
    PRIVATE = "PRIVATE",
    PUBLIC = "PUBLIC",
    SEMIPUBLIC = "SEMI_PUBLIC"
}
/**
 *
 * @export
 * @interface UserDomainRes
 */
export interface UserDomainRes {
    /**
     *
     * @type {Array<UserAccountModel>}
     * @memberof UserDomainRes
     */
    accounts?: Array<UserAccountModel>;
    /**
     *
     * @type {AddressDomainRes}
     * @memberof UserDomainRes
     */
    address?: AddressDomainRes;
    /**
     *
     * @type {TimestampRes}
     * @memberof UserDomainRes
     */
    creationDateUtc?: TimestampRes;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    dob?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    eligibleForAppReview?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    emailAddress?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    firstname?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    fullName?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    gender?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    hasLeftReview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    isEmailConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    isEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    isPaymentPlansAllowed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    isTestUser?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDomainRes
     */
    isUnsubscribed?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    lastname?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    lawyerJobTitle?: UserDomainResLawyerJobTitleEnum;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    loginProvider?: UserDomainResLoginProviderEnum;
    /**
     *
     * @type {number}
     * @memberof UserDomainRes
     */
    numBookingCancelations?: number;
    /**
     *
     * @type {number}
     * @memberof UserDomainRes
     */
    paidCaseCount?: number;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    password?: string;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    passwordEncrypted?: string;
    /**
     *
     * @type {Array<PhoneNumberDomainRes>}
     * @memberof UserDomainRes
     */
    phoneNumbers?: Array<PhoneNumberDomainRes>;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    privacyMode?: UserDomainResPrivacyModeEnum;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    profilePicture?: string;
    /**
     *
     * @type {Array<UserRoleDomain>}
     * @memberof UserDomainRes
     */
    roles?: Array<UserRoleDomain>;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    signUpCode?: string;
    /**
     *
     * @type {number}
     * @memberof UserDomainRes
     */
    signUpCodeUseCount?: number;
    /**
     *
     * @type {Array<UserSubscriptionPlanModelRes>}
     * @memberof UserDomainRes
     */
    subscriptionPlans?: Array<UserSubscriptionPlanModelRes>;
    /**
     *
     * @type {string}
     * @memberof UserDomainRes
     */
    userAlias?: string;
    /**
     *
     * @type {number}
     * @memberof UserDomainRes
     */
    userId?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainResLawyerJobTitleEnum {
    ACCOUNTANT = "ACCOUNTANT",
    ATTORNEY = "ATTORNEY",
    ATTORNEYASSOCIATE = "ATTORNEY_ASSOCIATE",
    ATTORNEYCOUNSEL = "ATTORNEY_COUNSEL",
    ATTORNEYMANAGINGPARTNER = "ATTORNEY_MANAGING_PARTNER",
    ATTORNEYPARTNER = "ATTORNEY_PARTNER",
    ATTORNEYSTAFF = "ATTORNEY_STAFF",
    CUSTOMERSERVICEREP = "CUSTOMER_SERVICE_REP",
    LEGALASSISTANT = "LEGAL_ASSISTANT",
    LEGALINTERN = "LEGAL_INTERN",
    LEGALSECRETARY = "LEGAL_SECRETARY",
    OTHER = "OTHER",
    PARALEGAL = "PARALEGAL"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainResLoginProviderEnum {
    APPLE = "APPLE",
    EMAIL = "EMAIL",
    FACEBOOK = "FACEBOOK",
    GOOGLE = "GOOGLE",
    PHONE = "PHONE",
    TWITTER = "TWITTER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserDomainResPrivacyModeEnum {
    FRIENDS = "FRIENDS",
    PRIVATE = "PRIVATE",
    PUBLIC = "PUBLIC",
    SEMIPUBLIC = "SEMI_PUBLIC"
}
/**
 *
 * @export
 * @interface UserRefLinkDomain
 */
export interface UserRefLinkDomain {
    /**
     *
     * @type {string}
     * @memberof UserRefLinkDomain
     */
    refLink?: string;
    /**
     *
     * @type {number}
     * @memberof UserRefLinkDomain
     */
    userId?: number;
    /**
     *
     * @type {number}
     * @memberof UserRefLinkDomain
     */
    userRefLinkId?: number;
}
/**
 *
 * @export
 * @interface UserReferralSourceTypeModel
 */
export interface UserReferralSourceTypeModel {
    /**
     *
     * @type {Array<UserReferralSourceTypeModel>}
     * @memberof UserReferralSourceTypeModel
     */
    children?: Array<UserReferralSourceTypeModel>;
    /**
     *
     * @type {string}
     * @memberof UserReferralSourceTypeModel
     */
    imageUrl?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserReferralSourceTypeModel
     */
    isDisplayed?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserReferralSourceTypeModel
     */
    sourceDesc?: string;
    /**
     *
     * @type {string}
     * @memberof UserReferralSourceTypeModel
     */
    sourceName?: string;
    /**
     *
     * @type {number}
     * @memberof UserReferralSourceTypeModel
     */
    sourceTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof UserReferralSourceTypeModel
     */
    uiDisplayText?: string;
}
/**
 *
 * @export
 * @interface UserRegistrationStats
 */
export interface UserRegistrationStats {
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof UserRegistrationStats
     */
    clientTypes?: {
        [key: string]: number;
    };
    /**
     *
     * @type {string}
     * @memberof UserRegistrationStats
     */
    endDate?: string;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof UserRegistrationStats
     */
    loginProviders?: {
        [key: string]: number;
    };
    /**
     *
     * @type {number}
     * @memberof UserRegistrationStats
     */
    numRegistrations?: number;
    /**
     *
     * @type {string}
     * @memberof UserRegistrationStats
     */
    startDate?: string;
    /**
     *
     * @type {ZoneId}
     * @memberof UserRegistrationStats
     */
    zoneId?: ZoneId;
}
/**
 *
 * @export
 * @interface UserRoleDomain
 */
export interface UserRoleDomain {
    /**
     *
     * @type {string}
     * @memberof UserRoleDomain
     */
    roleType?: UserRoleDomainRoleTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserRoleDomainRoleTypeEnum {
    ADMIN = "ADMIN",
    DEFENDANT = "DEFENDANT",
    LAWYER = "LAWYER",
    PARTNER = "PARTNER",
    UNKNOWN = "UNKNOWN"
}
/**
 *
 * @export
 * @interface UserSubscriptionPlanModel
 */
export interface UserSubscriptionPlanModel {
    /**
     *
     * @type {string}
     * @memberof UserSubscriptionPlanModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof UserSubscriptionPlanModel
     */
    subscriptionStatus?: UserSubscriptionPlanModelSubscriptionStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserSubscriptionPlanModelSubscriptionStatusEnum {
    ACTIVE = "ACTIVE",
    CANCELED = "CANCELED",
    INCOMPLETE = "INCOMPLETE",
    INCOMPLETEEXPIRED = "INCOMPLETE_EXPIRED",
    INTRIALPERIOD = "IN_TRIAL_PERIOD",
    PASTDUE = "PAST_DUE",
    UNKNOWN = "UNKNOWN",
    UNPAID = "UNPAID"
}
/**
 *
 * @export
 * @interface UserSubscriptionPlanModelReq
 */
export interface UserSubscriptionPlanModelReq {
    /**
     *
     * @type {string}
     * @memberof UserSubscriptionPlanModelReq
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof UserSubscriptionPlanModelReq
     */
    subscriptionStatus?: UserSubscriptionPlanModelReqSubscriptionStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserSubscriptionPlanModelReqSubscriptionStatusEnum {
    ACTIVE = "ACTIVE",
    CANCELED = "CANCELED",
    INCOMPLETE = "INCOMPLETE",
    INCOMPLETEEXPIRED = "INCOMPLETE_EXPIRED",
    INTRIALPERIOD = "IN_TRIAL_PERIOD",
    PASTDUE = "PAST_DUE",
    UNKNOWN = "UNKNOWN",
    UNPAID = "UNPAID"
}
/**
 *
 * @export
 * @interface UserSubscriptionPlanModelRes
 */
export interface UserSubscriptionPlanModelRes {
    /**
     *
     * @type {string}
     * @memberof UserSubscriptionPlanModelRes
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof UserSubscriptionPlanModelRes
     */
    subscriptionStatus?: UserSubscriptionPlanModelResSubscriptionStatusEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UserSubscriptionPlanModelResSubscriptionStatusEnum {
    ACTIVE = "ACTIVE",
    CANCELED = "CANCELED",
    INCOMPLETE = "INCOMPLETE",
    INCOMPLETEEXPIRED = "INCOMPLETE_EXPIRED",
    INTRIALPERIOD = "IN_TRIAL_PERIOD",
    PASTDUE = "PAST_DUE",
    UNKNOWN = "UNKNOWN",
    UNPAID = "UNPAID"
}
/**
 *
 * @export
 * @interface UserToContact
 */
export interface UserToContact {
    /**
     *
     * @type {number}
     * @memberof UserToContact
     */
    citationId?: number;
    /**
     *
     * @type {number}
     * @memberof UserToContact
     */
    userIdToContact?: number;
}
/**
 *
 * @export
 * @interface ValidateDirectMailRequest
 */
export interface ValidateDirectMailRequest {
    /**
     *
     * @type {string}
     * @memberof ValidateDirectMailRequest
     */
    mailTemplateType?: string;
    /**
     *
     * @type {AddressDomain}
     * @memberof ValidateDirectMailRequest
     */
    toAddress?: AddressDomain;
}
/**
 *
 * @export
 * @interface ValidateDirectMailResponse
 */
export interface ValidateDirectMailResponse {
    /**
     *
     * @type {string}
     * @memberof ValidateDirectMailResponse
     */
    otrError?: ValidateDirectMailResponseOtrErrorEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ValidateDirectMailResponseOtrErrorEnum {
    ACCESSDENIED = "ACCESS_DENIED",
    ACCOUNTDISABLED = "ACCOUNT_DISABLED",
    ARAGNOTCAPTURED = "ARAG_NOT_CAPTURED",
    AUTHENTICATIONCREDENTIALSNOTFOUND = "AUTHENTICATION_CREDENTIALS_NOT_FOUND",
    AUTHENTICATIONFAILED = "AUTHENTICATION_FAILED",
    AUTHENTICATIONSERVICEFAILURE = "AUTHENTICATION_SERVICE_FAILURE",
    AUTHORIZATIONSERVICEFAILURE = "AUTHORIZATION_SERVICE_FAILURE",
    AUTHORIZEDCHARGESONCASE = "AUTHORIZED_CHARGES_ON_CASE",
    BADCREDENTIALS = "BAD_CREDENTIALS",
    CANCELLATIONWINDOWCLOSED = "CANCELLATION_WINDOW_CLOSED",
    CASEALREADYEXISTS = "CASE_ALREADY_EXISTS",
    CASEALREADYPAID = "CASE_ALREADY_PAID",
    CASEALREADYRESOLVED = "CASE_ALREADY_RESOLVED",
    CASEIDCOLLISION = "CASE_ID_COLLISION",
    CASEISCANCELLED = "CASE_IS_CANCELLED",
    CASEMATCHFAILED = "CASE_MATCH_FAILED",
    CASENOTACCEPTEDBYLAWFIRM = "CASE_NOT_ACCEPTED_BY_LAWFIRM",
    CASENOTCONFIRMED = "CASE_NOT_CONFIRMED",
    CASEPAYMENTASSOCIATEDWITHMULTIPLELAWFIRMFEES = "CASE_PAYMENT_ASSOCIATED_WITH_MULTIPLE_LAWFIRM_FEES",
    CASEPAYMENTASSOCIATEDWITHMULTIPLELAWFIRMPAYOUTS = "CASE_PAYMENT_ASSOCIATED_WITH_MULTIPLE_LAWFIRM_PAYOUTS",
    CASEPAYMENTHASSTRIPECHARGE = "CASE_PAYMENT_HAS_STRIPE_CHARGE",
    CASESTATUSNOTALLOWED = "CASE_STATUS_NOT_ALLOWED",
    CASEUSERMISMATCH = "CASE_USER_MISMATCH",
    CCWILLEXPIREBEFOREPAYMENTPLAN = "CC_WILL_EXPIRE_BEFORE_PAYMENT_PLAN",
    CHARGEALREADYCAPTURED = "CHARGE_ALREADY_CAPTURED",
    CHARGEEXPIRED = "CHARGE_EXPIRED",
    CHARGENOTALLOWED = "CHARGE_NOT_ALLOWED",
    CHARGENOTCAPTURED = "CHARGE_NOT_CAPTURED",
    CHARGENOLONGERAUTHORIZED = "CHARGE_NO_LONGER_AUTHORIZED",
    CHARGEREFUNDED = "CHARGE_REFUNDED",
    CITATIONALREADYDELETED = "CITATION_ALREADY_DELETED",
    CITATIONDOESNOTMATCHUSER = "CITATION_DOES_NOT_MATCH_USER",
    CITATIONNOTOWNEDBYUSER = "CITATION_NOT_OWNED_BY_USER",
    CODEALREADYEXISTSFORDRIVER = "CODE_ALREADY_EXISTS_FOR_DRIVER",
    CODEBENEFITTYPENOTSUPPORTED = "CODE_BENEFIT_TYPE_NOT_SUPPORTED",
    CODEDOESNOTEXIST = "CODE_DOES_NOT_EXIST",
    CODEEXCEEDEDMAXUSAGE = "CODE_EXCEEDED_MAX_USAGE",
    CODEHASEXPIRED = "CODE_HAS_EXPIRED",
    CODEISALREADYTAKEN = "CODE_IS_ALREADY_TAKEN",
    CODEISNOTACTIVE = "CODE_IS_NOT_ACTIVE",
    CODENOTALLOWEDDUETOCREDIT = "CODE_NOT_ALLOWED_DUE_TO_CREDIT",
    CODENOTSUPPORTEDBYLAWFIRM = "CODE_NOT_SUPPORTED_BY_LAWFIRM",
    CODENOTYETAPPROVED = "CODE_NOT_YET_APPROVED",
    CODEREFERRERBENEFITSNOTAUTHORIZED = "CODE_REFERRER_BENEFITS_NOT_AUTHORIZED",
    COMMENTALREADYEXISTS = "COMMENT_ALREADY_EXISTS",
    COURTMISSINGADDRESS = "COURT_MISSING_ADDRESS",
    COURTNOTINSUPPORTEDREGION = "COURT_NOT_IN_SUPPORTED_REGION",
    COURTNOTSUPPORTEDBYLAWFIRM = "COURT_NOT_SUPPORTED_BY_LAWFIRM",
    CURRENTPASSWORDINCORRECT = "CURRENT_PASSWORD_INCORRECT",
    DATABASERECORDLOCKED = "DATABASE_RECORD_LOCKED",
    DATAACCESSERROR = "DATA_ACCESS_ERROR",
    DIRECTMAILRECONCILATIONIDNOTEXIST = "DIRECT_MAIL_RECONCILATION_ID_NOT_EXIST",
    DIRECTMAILSENTALREADY = "DIRECT_MAIL_SENT_ALREADY",
    DIRECTMAILTEMPLATEDUPLICATEDETECTED = "DIRECT_MAIL_TEMPLATE_DUPLICATE_DETECTED",
    DIRECTMAILTEMPLATENOTEXIST = "DIRECT_MAIL_TEMPLATE_NOT_EXIST",
    DRIPDEPENDENCYFAILURE = "DRIP_DEPENDENCY_FAILURE",
    DUPLICATECOURT = "DUPLICATE_COURT",
    DUPLICATEEMAIL = "DUPLICATE_EMAIL",
    DUPLICATEENTRY = "DUPLICATE_ENTRY",
    DUPLICATELANDINGPAGEURL = "DUPLICATE_LANDING_PAGE_URL",
    DUPLICATEMESSAGEATTEMPT = "DUPLICATE_MESSAGE_ATTEMPT",
    EMAILADDRESSALREADYSUBSCRIBED = "EMAIL_ADDRESS_ALREADY_SUBSCRIBED",
    EMAILADDRESSBLACKLISTED = "EMAIL_ADDRESS_BLACKLISTED",
    EMAILALREADYINUSE = "EMAIL_ALREADY_IN_USE",
    EMAILALREADYSENT = "EMAIL_ALREADY_SENT",
    EMAILNOTCONFIRMED = "EMAIL_NOT_CONFIRMED",
    EMAILNOTSENT = "EMAIL_NOT_SENT",
    EXPECTEDNULLINPUT = "EXPECTED_NULL_INPUT",
    EXPECTEDROLEMISSING = "EXPECTED_ROLE_MISSING",
    FAILEDTOREVERSETRANSFER = "FAILED_TO_REVERSE_TRANSFER",
    FRESHDESKTICKETNOTFOUND = "FRESHDESK_TICKET_NOT_FOUND",
    FRESHDESKUNEXPECTEDNUMBEROFRESULTS = "FRESHDESK_UNEXPECTED_NUMBER_OF_RESULTS",
    IMAGENOTCOMPRESSEDPROPERLY = "IMAGE_NOT_COMPRESSED_PROPERLY",
    INCORRECTDIMENSIONS = "INCORRECT_DIMENSIONS",
    INCORRECTENCODING = "INCORRECT_ENCODING",
    INELIGIBLESTATUSFORTRANSFER = "INELIGIBLE_STATUS_FOR_TRANSFER",
    INVALIDADDRESSID = "INVALID_ADDRESS_ID",
    INVALIDAMOUNT = "INVALID_AMOUNT",
    INVALIDAPITOKEN = "INVALID_API_TOKEN",
    INVALIDAPIUSAGE = "INVALID_API_USAGE",
    INVALIDCASEACTIONID = "INVALID_CASE_ACTION_ID",
    INVALIDCASEID = "INVALID_CASE_ID",
    INVALIDCASEPAYMENTID = "INVALID_CASE_PAYMENT_ID",
    INVALIDCITATIONID = "INVALID_CITATION_ID",
    INVALIDCOURTID = "INVALID_COURT_ID",
    INVALIDDATE = "INVALID_DATE",
    INVALIDDISPUTEID = "INVALID_DISPUTE_ID",
    INVALIDDOCUMENTID = "INVALID_DOCUMENT_ID",
    INVALIDEMAILADDRESS = "INVALID_EMAIL_ADDRESS",
    INVALIDEMAILTEMPLATE = "INVALID_EMAIL_TEMPLATE",
    INVALIDENDDATE = "INVALID_END_DATE",
    INVALIDENUMVALUE = "INVALID_ENUM_VALUE",
    INVALIDFEEPERCENTAGE = "INVALID_FEE_PERCENTAGE",
    INVALIDFIRSTNAME = "INVALID_FIRST_NAME",
    INVALIDINTERNETADDRESS = "INVALID_INTERNET_ADDRESS",
    INVALIDINVITATIONTOKEN = "INVALID_INVITATION_TOKEN",
    INVALIDINVOICELINEITEMID = "INVALID_INVOICE_LINE_ITEM_ID",
    INVALIDLASTNAME = "INVALID_LAST_NAME",
    INVALIDLAWFIRM = "INVALID_LAWFIRM",
    INVALIDLAWYERID = "INVALID_LAWYER_ID",
    INVALIDLINEITEM = "INVALID_LINE_ITEM",
    INVALIDMESSAGEID = "INVALID_MESSAGE_ID",
    INVALIDPAGINATIONTOKEN = "INVALID_PAGINATION_TOKEN",
    INVALIDPARAMETERVALUE = "INVALID_PARAMETER_VALUE",
    INVALIDPASSWORD = "INVALID_PASSWORD",
    INVALIDPASSWORDRESETTOKEN = "INVALID_PASSWORD_RESET_TOKEN",
    INVALIDPUSHTOKEN = "INVALID_PUSH_TOKEN",
    INVALIDRECIPIENTLIST = "INVALID_RECIPIENT_LIST",
    INVALIDREQUEST = "INVALID_REQUEST",
    INVALIDREQUESTBODY = "INVALID_REQUEST_BODY",
    INVALIDRESOLUTIONSTATUS = "INVALID_RESOLUTION_STATUS",
    INVALIDREVIEWCOPY = "INVALID_REVIEW_COPY",
    INVALIDROLETYPE = "INVALID_ROLE_TYPE",
    INVALIDSTATE = "INVALID_STATE",
    INVALIDSTRIPEACCOUNT = "INVALID_STRIPE_ACCOUNT",
    INVALIDSTRIPECHARGEID = "INVALID_STRIPE_CHARGE_ID",
    INVALIDSTRIPEREQUEST = "INVALID_STRIPE_REQUEST",
    INVALIDSTRIPETRANSACTIONID = "INVALID_STRIPE_TRANSACTION_ID",
    INVALIDSUBSCRIPTIONTYPE = "INVALID_SUBSCRIPTION_TYPE",
    INVALIDTASKID = "INVALID_TASK_ID",
    INVALIDTICKETID = "INVALID_TICKET_ID",
    INVALIDTICKETREVIEWID = "INVALID_TICKET_REVIEW_ID",
    INVALIDTRAFFICVIOLATION = "INVALID_TRAFFIC_VIOLATION",
    INVALIDUSERID = "INVALID_USER_ID",
    INVALIDUSERNAME = "INVALID_USER_NAME",
    INVITATIONALREADYSENT = "INVITATION_ALREADY_SENT",
    INVITATIONALREADYVERIFIED = "INVITATION_ALREADY_VERIFIED",
    INVITATIONCANCELLED = "INVITATION_CANCELLED",
    INVITATIONHASEXPIRED = "INVITATION_HAS_EXPIRED",
    INVITATIONRECIPIENTNOACCOUNT = "INVITATION_RECIPIENT_NO_ACCOUNT",
    IOERROR = "IO_ERROR",
    LAWFIRMCASECAPACITYREACHED = "LAWFIRM_CASE_CAPACITY_REACHED",
    LAWFIRMCASENOTACTIVE = "LAWFIRM_CASE_NOT_ACTIVE",
    LAWFIRMDOESNOTHANDLEACCIDENTS = "LAWFIRM_DOES_NOT_HANDLE_ACCIDENTS",
    LAWFIRMDOESNOTHANDLEPASTDUE = "LAWFIRM_DOES_NOT_HANDLE_PAST_DUE",
    LAWFIRMFEEHASSTRIPEREFERENCE = "LAWFIRM_FEE_HAS_STRIPE_REFERENCE",
    LAWFIRMMISSINGACCOUNTFEE = "LAWFIRM_MISSING_ACCOUNT_FEE",
    LAWFIRMNOTELIGIBLE = "LAWFIRM_NOT_ELIGIBLE",
    LAWFIRMONVACATIONMODE = "LAWFIRM_ON_VACATION_MODE",
    LAWFIRMPAYOUTHASSTRIPEREFERENCE = "LAWFIRM_PAYOUT_HAS_STRIPE_REFERENCE",
    LAWFIRMNEEDSADDRESS = "LAW_FIRM_NEEDS_ADDRESS",
    LINEITEMMISSINGRECIPIENT = "LINE_ITEM_MISSING_RECIPIENT",
    LINKSNOTALLOWED = "LINKS_NOT_ALLOWED",
    LOBADDRESSCREATIONFAILURE = "LOB_ADDRESS_CREATION_FAILURE",
    LOBADDRESSVALIDATIONFAILURE = "LOB_ADDRESS_VALIDATION_FAILURE",
    LOBCANCELCHECKDELIVERYFAILURE = "LOB_CANCEL_CHECK_DELIVERY_FAILURE",
    LOBCANCELMAILDELIVERYFAILURE = "LOB_CANCEL_MAIL_DELIVERY_FAILURE",
    LOBCHECKMAILDELIVERYFAILURE = "LOB_CHECK_MAIL_DELIVERY_FAILURE",
    LOBPOSTCARDCREATIONFAILURE = "LOB_POSTCARD_CREATION_FAILURE",
    MEDIATYPEINCORRECT = "MEDIA_TYPE_INCORRECT",
    MERGEROLLBACKNOTALLOWED = "MERGE_ROLLBACK_NOT_ALLOWED",
    MISSINGACTIONTYPE = "MISSING_ACTION_TYPE",
    MISSINGADJUSTEDFINEAMOUNT = "MISSING_ADJUSTED_FINE_AMOUNT",
    MISSINGCASE = "MISSING_CASE",
    MISSINGCITATIONID = "MISSING_CITATION_ID",
    MISSINGCOURTID = "MISSING_COURT_ID",
    MISSINGEMAILADDRESS = "MISSING_EMAIL_ADDRESS",
    MISSINGFEEDBACKCONTENT = "MISSING_FEEDBACK_CONTENT",
    MISSINGFIRSTNAME = "MISSING_FIRSTNAME",
    MISSINGIMAGEURL = "MISSING_IMAGE_URL",
    MISSINGLASTNAME = "MISSING_LASTNAME",
    MISSINGLAWFIRMID = "MISSING_LAWFIRM_ID",
    MISSINGLAWYERID = "MISSING_LAWYER_ID",
    MISSINGMEDIADATA = "MISSING_MEDIA_DATA",
    MISSINGNUMVIOLATIONS = "MISSING_NUM_VIOLATIONS",
    MISSINGPARAMETER = "MISSING_PARAMETER",
    MISSINGPASSWORD = "MISSING_PASSWORD",
    MISSINGRECIPIENTEMAIL = "MISSING_RECIPIENT_EMAIL",
    MISSINGREQUESTBODY = "MISSING_REQUEST_BODY",
    MISSINGRESOLUTIONSTATUS = "MISSING_RESOLUTION_STATUS",
    MISSINGSENDEREMAIL = "MISSING_SENDER_EMAIL",
    MISSINGSENDERPHONENUMBER = "MISSING_SENDER_PHONE_NUMBER",
    MISSINGSEOURL = "MISSING_SEO_URL",
    MISSINGSTRIPETOKEN = "MISSING_STRIPE_TOKEN",
    MISSINGSUBSCRIBER = "MISSING_SUBSCRIBER",
    MISSINGTICKETISSUEDATE = "MISSING_TICKET_ISSUE_DATE",
    MISSINGUSERNAME = "MISSING_USER_NAME",
    MULTIPLELAWFIRMFEES = "MULTIPLE_LAWFIRM_FEES",
    MULTIPLELAWFIRMPAYOUTS = "MULTIPLE_LAWFIRM_PAYOUTS",
    MULTIPLEREFUNDSONCHARGE = "MULTIPLE_REFUNDS_ON_CHARGE",
    MULTIPLESTRIPECUSTOMERACCOUNTSFOUND = "MULTIPLE_STRIPE_CUSTOMER_ACCOUNTS_FOUND",
    MULTIPLESTRIPETRANSFERSFOUND = "MULTIPLE_STRIPE_TRANSFERS_FOUND",
    MUSTBEPOSITIVE = "MUST_BE_POSITIVE",
    NOTIFICATIONERROR = "NOTIFICATION_ERROR",
    NOTIFICATIONINCORRECTROLE = "NOTIFICATION_INCORRECT_ROLE",
    NOTIFICATIONTOOLONG = "NOTIFICATION_TOO_LONG",
    NOTIFICATIONTOSELF = "NOTIFICATION_TO_SELF",
    NOTAUTHENTICATED = "NOT_AUTHENTICATED",
    NOACCOUNTWITHEMAIL = "NO_ACCOUNT_WITH_EMAIL",
    NOCASEOWNER = "NO_CASE_OWNER",
    NOCHARGESONCASE = "NO_CHARGES_ON_CASE",
    NOINSURANCE = "NO_INSURANCE",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    NOSTRIPEACCOUNT = "NO_STRIPE_ACCOUNT",
    OWNERCASEMESSAGEMISMATCH = "OWNER_CASE_MESSAGE_MISMATCH",
    PAYMENTPLANSDENIED = "PAYMENT_PLANS_DENIED",
    PAYMENTPLANLEGALFEEHASCENTS = "PAYMENT_PLAN_LEGAL_FEE_HAS_CENTS",
    PAYMENTPLANNOTSUPPORTEDWITHPREPAIDCARD = "PAYMENT_PLAN_NOT_SUPPORTED_WITH_PREPAID_CARD",
    PDFPASSWORDPROTECTED = "PDF_PASSWORD_PROTECTED",
    PLAIDERROR = "PLAID_ERROR",
    QBOBILLCREATIONFAILURE = "QBO_BILL_CREATION_FAILURE",
    QBOVENDORCREATIONFAILURE = "QBO_VENDOR_CREATION_FAILURE",
    REFERRALSNOTALLOWEDTOBEREDEEMED = "REFERRALS_NOT_ALLOWED_TO_BE_REDEEMED",
    REFUNDNOTALLOWED = "REFUND_NOT_ALLOWED",
    REFUNDNOTELIGIBLE = "REFUND_NOT_ELIGIBLE",
    REFUNDNOTELIGIBLECRIMINAL = "REFUND_NOT_ELIGIBLE_CRIMINAL",
    RESETTOKENEXPIRED = "RESET_TOKEN_EXPIRED",
    RESOURCENOTFOUND = "RESOURCE_NOT_FOUND",
    REVIEWALREADYEXISTS = "REVIEW_ALREADY_EXISTS",
    ROLENOTSUPPORTED = "ROLE_NOT_SUPPORTED",
    S3CLIENTFAILED = "S3_CLIENT_FAILED",
    S3SERVERFAILED = "S3_SERVER_FAILED",
    SAMEUSERCANNOTBEMERGED = "SAME_USER_CANNOT_BE_MERGED",
    SEOURLALREADYEXISTS = "SEO_URL_ALREADY_EXISTS",
    SIMILARCOURT = "SIMILAR_COURT",
    SOCIALPROFILEMISSINGEMAIL = "SOCIAL_PROFILE_MISSING_EMAIL",
    STATENOTSUPPORTED = "STATE_NOT_SUPPORTED",
    STRIPEAPICONNECTIONEXCEPTION = "STRIPE_API_CONNECTION_EXCEPTION",
    STRIPEAPIEXCEPTION = "STRIPE_API_EXCEPTION",
    STRIPEAPPLICATIONFEEALREADYREFUNDED = "STRIPE_APPLICATION_FEE_ALREADY_REFUNDED",
    STRIPEAPPLICATIONFEENOTFOUND = "STRIPE_APPLICATION_FEE_NOT_FOUND",
    STRIPEAUTHENTICATIONEXCEPTION = "STRIPE_AUTHENTICATION_EXCEPTION",
    STRIPECARDEXCEPTION = "STRIPE_CARD_EXCEPTION",
    STRIPECONNECTACCOUNTNOTFOUND = "STRIPE_CONNECT_ACCOUNT_NOT_FOUND",
    STRIPEERROR = "STRIPE_ERROR",
    STRIPEFAILEDCHARGE = "STRIPE_FAILED_CHARGE",
    STRIPEOAUTHCONNECTFAILED = "STRIPE_OAUTH_CONNECT_FAILED",
    STRIPEOBJECTMISSINGMETADATA = "STRIPE_OBJECT_MISSING_METADATA",
    STRIPERESOURCENOTFOUND = "STRIPE_RESOURCE_NOT_FOUND",
    STRIPETRANSFEREXISTS = "STRIPE_TRANSFER_EXISTS",
    STRIPETRANSFERNOTFOUND = "STRIPE_TRANSFER_NOT_FOUND",
    SUBSCRIPTIONNOTOWNEDBYUSER = "SUBSCRIPTION_NOT_OWNED_BY_USER",
    TEMPLATENOTSUPPORTED = "TEMPLATE_NOT_SUPPORTED",
    TRANSFERALREADYREVERSED = "TRANSFER_ALREADY_REVERSED",
    TRANSFERIDDOESNTMATCHCHARGE = "TRANSFER_ID_DOESNT_MATCH_CHARGE",
    TRANSFERNOTSAFE = "TRANSFER_NOT_SAFE",
    TRANSFERREVERSALNOTALLOWED = "TRANSFER_REVERSAL_NOT_ALLOWED",
    TRANSFERTOSAMELAWFIRM = "TRANSFER_TO_SAME_LAWFIRM",
    UNAUTHORIZED = "UNAUTHORIZED",
    UNEXPECTEDCASESTATUS = "UNEXPECTED_CASE_STATUS",
    UNEXPECTEDNULLINPUT = "UNEXPECTED_NULL_INPUT",
    UNEXPECTEDNUMBEROFCHARGES = "UNEXPECTED_NUMBER_OF_CHARGES",
    UNKNOWN = "UNKNOWN",
    URLENTITYMISMATCH = "URL_ENTITY_MISMATCH",
    USERALREADYHASSECONDARYACCOUNT = "USER_ALREADY_HAS_SECONDARY_ACCOUNT",
    USERALREADYLOGGEDIN = "USER_ALREADY_LOGGED_IN",
    USERALREADYMERGED = "USER_ALREADY_MERGED",
    USERCANTUSEOWNCODE = "USER_CANT_USE_OWN_CODE",
    USERDOESNOTMATCHCITATION = "USER_DOES_NOT_MATCH_CITATION",
    USERISNOTTHEOWNER = "USER_IS_NOT_THE_OWNER",
    USERNOTFOUND = "USER_NOT_FOUND",
    VERIFICATIONLINKNOTVALID = "VERIFICATION_LINK_NOT_VALID"
}
/**
 *
 * @export
 * @interface ValidateUserEmailResponse
 */
export interface ValidateUserEmailResponse {
    /**
     *
     * @type {string}
     * @memberof ValidateUserEmailResponse
     */
    invalidEmailReason?: string;
    /**
     *
     * @type {boolean}
     * @memberof ValidateUserEmailResponse
     */
    isEmailAvailable?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ValidateUserEmailResponse
     */
    isEmailValid?: boolean;
}
/**
 *
 * @export
 * @interface VerifyMailingAddressRequest
 */
export interface VerifyMailingAddressRequest {
    /**
     *
     * @type {LobMailingAddress}
     * @memberof VerifyMailingAddressRequest
     */
    address?: LobMailingAddress;
}
/**
 *
 * @export
 * @interface VerifyMailingAddressResponse
 */
export interface VerifyMailingAddressResponse {
    /**
     *
     * @type {LobMailingAddress}
     * @memberof VerifyMailingAddressResponse
     */
    addressToUse?: LobMailingAddress;
    /**
     *
     * @type {boolean}
     * @memberof VerifyMailingAddressResponse
     */
    deliverable?: boolean;
    /**
     *
     * @type {string}
     * @memberof VerifyMailingAddressResponse
     */
    deliverableMessage?: string;
}
/**
 *
 * @export
 * @interface VerifyPasswordResetTokenResponse
 */
export interface VerifyPasswordResetTokenResponse {
    /**
     *
     * @type {boolean}
     * @memberof VerifyPasswordResetTokenResponse
     */
    isTokenValid?: boolean;
    /**
     *
     * @type {number}
     * @memberof VerifyPasswordResetTokenResponse
     */
    userId?: number;
}
/**
 *
 * @export
 * @interface VerifyUserAccountResponse
 */
export interface VerifyUserAccountResponse {
    /**
     *
     * @type {boolean}
     * @memberof VerifyUserAccountResponse
     */
    emailAlreadyConfirmed?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof VerifyUserAccountResponse
     */
    emailConfirmed?: boolean;
}
/**
 *
 * @export
 * @interface ViolationClassificationModel
 */
export interface ViolationClassificationModel {
    /**
     *
     * @type {string}
     * @memberof ViolationClassificationModel
     */
    classification?: ViolationClassificationModelClassificationEnum;
    /**
     *
     * @type {boolean}
     * @memberof ViolationClassificationModel
     */
    criminal?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ViolationClassificationModel
     */
    pureCriminal?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ViolationClassificationModelClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface ViolationInput
 */
export interface ViolationInput {
    /**
     *
     * @type {string}
     * @memberof ViolationInput
     */
    violationDescription?: string;
}
/**
 *
 * @export
 * @interface ViolationInputRequest
 */
export interface ViolationInputRequest {
    /**
     *
     * @type {number}
     * @memberof ViolationInputRequest
     */
    violationId?: number;
}
/**
 *
 * @export
 * @interface ViolationPenaltyResponse
 */
export interface ViolationPenaltyResponse {
    /**
     *
     * @type {Array<Penalty>}
     * @memberof ViolationPenaltyResponse
     */
    penalties?: Array<Penalty>;
    /**
     *
     * @type {string}
     * @memberof ViolationPenaltyResponse
     */
    violationId?: string;
}
/**
 *
 * @export
 * @interface ViolationResponse
 */
export interface ViolationResponse {
    /**
     *
     * @type {boolean}
     * @memberof ViolationResponse
     */
    criminal?: boolean;
    /**
     *
     * @type {Array<CaseViolationPenalty>}
     * @memberof ViolationResponse
     */
    penalties?: Array<CaseViolationPenalty>;
    /**
     *
     * @type {string}
     * @memberof ViolationResponse
     */
    trafficViolationDesc?: string;
    /**
     *
     * @type {number}
     * @memberof ViolationResponse
     */
    trafficViolationTypeId?: number;
    /**
     *
     * @type {string}
     * @memberof ViolationResponse
     */
    violationClassification?: ViolationResponseViolationClassificationEnum;
    /**
     *
     * @type {string}
     * @memberof ViolationResponse
     */
    violationCode?: string;
    /**
     *
     * @type {boolean}
     * @memberof ViolationResponse
     */
    wobblerToCriminal?: boolean;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ViolationResponseViolationClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
/**
 *
 * @export
 * @interface ZoneId
 */
export interface ZoneId {
    /**
     *
     * @type {string}
     * @memberof ZoneId
     */
    id?: string;
    /**
     *
     * @type {ZoneRules}
     * @memberof ZoneId
     */
    rules?: ZoneRules;
}
/**
 *
 * @export
 * @interface ZoneOffset
 */
export interface ZoneOffset {
    /**
     *
     * @type {string}
     * @memberof ZoneOffset
     */
    id?: string;
    /**
     *
     * @type {ZoneRules}
     * @memberof ZoneOffset
     */
    rules?: ZoneRules;
    /**
     *
     * @type {number}
     * @memberof ZoneOffset
     */
    totalSeconds?: number;
}
/**
 *
 * @export
 * @interface ZoneOffsetTransition
 */
export interface ZoneOffsetTransition {
    /**
     *
     * @type {string}
     * @memberof ZoneOffsetTransition
     */
    dateTimeAfter?: string;
    /**
     *
     * @type {string}
     * @memberof ZoneOffsetTransition
     */
    dateTimeBefore?: string;
    /**
     *
     * @type {Duration}
     * @memberof ZoneOffsetTransition
     */
    duration?: Duration;
    /**
     *
     * @type {boolean}
     * @memberof ZoneOffsetTransition
     */
    gap?: boolean;
    /**
     *
     * @type {string}
     * @memberof ZoneOffsetTransition
     */
    instant?: string;
    /**
     *
     * @type {ZoneOffset}
     * @memberof ZoneOffsetTransition
     */
    offsetAfter?: ZoneOffset;
    /**
     *
     * @type {ZoneOffset}
     * @memberof ZoneOffsetTransition
     */
    offsetBefore?: ZoneOffset;
    /**
     *
     * @type {boolean}
     * @memberof ZoneOffsetTransition
     */
    overlap?: boolean;
}
/**
 *
 * @export
 * @interface ZoneOffsetTransitionRule
 */
export interface ZoneOffsetTransitionRule {
    /**
     *
     * @type {number}
     * @memberof ZoneOffsetTransitionRule
     */
    dayOfMonthIndicator?: number;
    /**
     *
     * @type {string}
     * @memberof ZoneOffsetTransitionRule
     */
    dayOfWeek?: ZoneOffsetTransitionRuleDayOfWeekEnum;
    /**
     *
     * @type {LocalTime}
     * @memberof ZoneOffsetTransitionRule
     */
    localTime?: LocalTime;
    /**
     *
     * @type {boolean}
     * @memberof ZoneOffsetTransitionRule
     */
    midnightEndOfDay?: boolean;
    /**
     *
     * @type {string}
     * @memberof ZoneOffsetTransitionRule
     */
    month?: ZoneOffsetTransitionRuleMonthEnum;
    /**
     *
     * @type {ZoneOffset}
     * @memberof ZoneOffsetTransitionRule
     */
    offsetAfter?: ZoneOffset;
    /**
     *
     * @type {ZoneOffset}
     * @memberof ZoneOffsetTransitionRule
     */
    offsetBefore?: ZoneOffset;
    /**
     *
     * @type {ZoneOffset}
     * @memberof ZoneOffsetTransitionRule
     */
    standardOffset?: ZoneOffset;
    /**
     *
     * @type {string}
     * @memberof ZoneOffsetTransitionRule
     */
    timeDefinition?: ZoneOffsetTransitionRuleTimeDefinitionEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ZoneOffsetTransitionRuleDayOfWeekEnum {
    FRIDAY = "FRIDAY",
    MONDAY = "MONDAY",
    SATURDAY = "SATURDAY",
    SUNDAY = "SUNDAY",
    THURSDAY = "THURSDAY",
    TUESDAY = "TUESDAY",
    WEDNESDAY = "WEDNESDAY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ZoneOffsetTransitionRuleMonthEnum {
    APRIL = "APRIL",
    AUGUST = "AUGUST",
    DECEMBER = "DECEMBER",
    FEBRUARY = "FEBRUARY",
    JANUARY = "JANUARY",
    JULY = "JULY",
    JUNE = "JUNE",
    MARCH = "MARCH",
    MAY = "MAY",
    NOVEMBER = "NOVEMBER",
    OCTOBER = "OCTOBER",
    SEPTEMBER = "SEPTEMBER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ZoneOffsetTransitionRuleTimeDefinitionEnum {
    STANDARD = "STANDARD",
    UTC = "UTC",
    WALL = "WALL"
}
/**
 *
 * @export
 * @interface ZoneRules
 */
export interface ZoneRules {
    /**
     *
     * @type {boolean}
     * @memberof ZoneRules
     */
    fixedOffset?: boolean;
    /**
     *
     * @type {Array<ZoneOffsetTransitionRule>}
     * @memberof ZoneRules
     */
    transitionRules?: Array<ZoneOffsetTransitionRule>;
    /**
     *
     * @type {Array<ZoneOffsetTransition>}
     * @memberof ZoneRules
     */
    transitions?: Array<ZoneOffsetTransition>;
}
/**
 * ActionRequiredControllerApi - axios parameter creator
 * @export
 */
export declare const ActionRequiredControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary notifyClientActionRequirement
     * @param {ClientActionRequiredRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    notifyClientActionRequirementUsingPOST: (request: ClientActionRequiredRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ActionRequiredControllerApi - functional programming interface
 * @export
 */
export declare const ActionRequiredControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary notifyClientActionRequirement
     * @param {ClientActionRequiredRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    notifyClientActionRequirementUsingPOST(request: ClientActionRequiredRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ActionRequiredControllerApi - factory interface
 * @export
 */
export declare const ActionRequiredControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary notifyClientActionRequirement
     * @param {ClientActionRequiredRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    notifyClientActionRequirementUsingPOST(request: ClientActionRequiredRequest, options?: any): AxiosPromise<void>;
};
/**
 * ActionRequiredControllerApi - object-oriented interface
 * @export
 * @class ActionRequiredControllerApi
 * @extends {BaseAPI}
 */
export declare class ActionRequiredControllerApi extends BaseAPI {
    /**
     *
     * @summary notifyClientActionRequirement
     * @param {ClientActionRequiredRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActionRequiredControllerApi
     */
    notifyClientActionRequirementUsingPOST(request: ClientActionRequiredRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ActivityFeedControllerApi - axios parameter creator
 * @export
 */
export declare const ActivityFeedControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary listActivityFeed
     * @param {number} limit limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listActivityFeedUsingGET: (limit: number, nextPageToken?: string, previousPageToken?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ActivityFeedControllerApi - functional programming interface
 * @export
 */
export declare const ActivityFeedControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary listActivityFeed
     * @param {number} limit limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listActivityFeedUsingGET(limit: number, nextPageToken?: string, previousPageToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetActivityFeedResponse>>;
};
/**
 * ActivityFeedControllerApi - factory interface
 * @export
 */
export declare const ActivityFeedControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary listActivityFeed
     * @param {number} limit limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listActivityFeedUsingGET(limit: number, nextPageToken?: string, previousPageToken?: string, options?: any): AxiosPromise<GetActivityFeedResponse>;
};
/**
 * ActivityFeedControllerApi - object-oriented interface
 * @export
 * @class ActivityFeedControllerApi
 * @extends {BaseAPI}
 */
export declare class ActivityFeedControllerApi extends BaseAPI {
    /**
     *
     * @summary listActivityFeed
     * @param {number} limit limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityFeedControllerApi
     */
    listActivityFeedUsingGET(limit: number, nextPageToken?: string, previousPageToken?: string, options?: any): Promise<import("axios").AxiosResponse<GetActivityFeedResponse, any>>;
}
/**
 * AddressControllerApi - axios parameter creator
 * @export
 */
export declare const AddressControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCountryList
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryListUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCountryRegions
     * @param {string} countryCode countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryRegionsUsingGET: (countryCode: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLocation
     * @param {string} zipCode zipCode
     * @param {string} [countryCode] countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLocationUsingGET: (zipCode: string, countryCode?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * AddressControllerApi - functional programming interface
 * @export
 */
export declare const AddressControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCountryList
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryListUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCountryListResponse>>;
    /**
     *
     * @summary getCountryRegions
     * @param {string} countryCode countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryRegionsUsingGET(countryCode: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCountryRegionsResponse>>;
    /**
     *
     * @summary getLocation
     * @param {string} zipCode zipCode
     * @param {string} [countryCode] countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLocationUsingGET(zipCode: string, countryCode?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLocationResponse>>;
};
/**
 * AddressControllerApi - factory interface
 * @export
 */
export declare const AddressControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCountryList
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryListUsingGET(options?: any): AxiosPromise<GetCountryListResponse>;
    /**
     *
     * @summary getCountryRegions
     * @param {string} countryCode countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryRegionsUsingGET(countryCode: string, options?: any): AxiosPromise<GetCountryRegionsResponse>;
    /**
     *
     * @summary getLocation
     * @param {string} zipCode zipCode
     * @param {string} [countryCode] countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLocationUsingGET(zipCode: string, countryCode?: string, options?: any): AxiosPromise<GetLocationResponse>;
};
/**
 * AddressControllerApi - object-oriented interface
 * @export
 * @class AddressControllerApi
 * @extends {BaseAPI}
 */
export declare class AddressControllerApi extends BaseAPI {
    /**
     *
     * @summary getCountryList
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressControllerApi
     */
    getCountryListUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetCountryListResponse, any>>;
    /**
     *
     * @summary getCountryRegions
     * @param {string} countryCode countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressControllerApi
     */
    getCountryRegionsUsingGET(countryCode: string, options?: any): Promise<import("axios").AxiosResponse<GetCountryRegionsResponse, any>>;
    /**
     *
     * @summary getLocation
     * @param {string} zipCode zipCode
     * @param {string} [countryCode] countryCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressControllerApi
     */
    getLocationUsingGET(zipCode: string, countryCode?: string, options?: any): Promise<import("axios").AxiosResponse<GetLocationResponse, any>>;
}
/**
 * AlertNotificationControllerApi - axios parameter creator
 * @export
 */
export declare const AlertNotificationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getAlerts
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAlertsUsingGET: (userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markAlertAsRead
     * @param {string} alertId alertId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markAlertAsReadUsingDELETE: (alertId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * AlertNotificationControllerApi - functional programming interface
 * @export
 */
export declare const AlertNotificationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getAlerts
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAlertsUsingGET(userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AlertNotificationResponse>>;
    /**
     *
     * @summary markAlertAsRead
     * @param {string} alertId alertId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markAlertAsReadUsingDELETE(alertId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AlertNotificationResponse>>;
};
/**
 * AlertNotificationControllerApi - factory interface
 * @export
 */
export declare const AlertNotificationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getAlerts
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAlertsUsingGET(userId: string, options?: any): AxiosPromise<AlertNotificationResponse>;
    /**
     *
     * @summary markAlertAsRead
     * @param {string} alertId alertId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markAlertAsReadUsingDELETE(alertId: string, options?: any): AxiosPromise<AlertNotificationResponse>;
};
/**
 * AlertNotificationControllerApi - object-oriented interface
 * @export
 * @class AlertNotificationControllerApi
 * @extends {BaseAPI}
 */
export declare class AlertNotificationControllerApi extends BaseAPI {
    /**
     *
     * @summary getAlerts
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlertNotificationControllerApi
     */
    getAlertsUsingGET(userId: string, options?: any): Promise<import("axios").AxiosResponse<AlertNotificationResponse, any>>;
    /**
     *
     * @summary markAlertAsRead
     * @param {string} alertId alertId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlertNotificationControllerApi
     */
    markAlertAsReadUsingDELETE(alertId: string, options?: any): Promise<import("axios").AxiosResponse<AlertNotificationResponse, any>>;
}
/**
 * AppEventsControllerApi - axios parameter creator
 * @export
 */
export declare const AppEventsControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addAppEvent
     * @param {AppEventCreateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAppEventUsingPOST: (request: AppEventCreateRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * AppEventsControllerApi - functional programming interface
 * @export
 */
export declare const AppEventsControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addAppEvent
     * @param {AppEventCreateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAppEventUsingPOST(request: AppEventCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * AppEventsControllerApi - factory interface
 * @export
 */
export declare const AppEventsControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addAppEvent
     * @param {AppEventCreateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAppEventUsingPOST(request: AppEventCreateRequest, options?: any): AxiosPromise<object>;
};
/**
 * AppEventsControllerApi - object-oriented interface
 * @export
 * @class AppEventsControllerApi
 * @extends {BaseAPI}
 */
export declare class AppEventsControllerApi extends BaseAPI {
    /**
     *
     * @summary addAppEvent
     * @param {AppEventCreateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppEventsControllerApi
     */
    addAppEventUsingPOST(request: AppEventCreateRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * AuditLawfirmEventsControllerApi - axios parameter creator
 * @export
 */
export declare const AuditLawfirmEventsControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary listLawfirmAuditEventsByCursor
     * @param {number} lawfirmId lawfirmId
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [excludeTypes] excludeTypes
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [includeTypes] includeTypes
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmAuditEventsByCursorUsingGET: (lawfirmId: number, excludeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, includeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, limit?: number, nextPageToken?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * AuditLawfirmEventsControllerApi - functional programming interface
 * @export
 */
export declare const AuditLawfirmEventsControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary listLawfirmAuditEventsByCursor
     * @param {number} lawfirmId lawfirmId
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [excludeTypes] excludeTypes
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [includeTypes] includeTypes
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmAuditEventsByCursorUsingGET(lawfirmId: number, excludeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, includeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, limit?: number, nextPageToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLawfirmAuditEventsByCursorResponse>>;
};
/**
 * AuditLawfirmEventsControllerApi - factory interface
 * @export
 */
export declare const AuditLawfirmEventsControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary listLawfirmAuditEventsByCursor
     * @param {number} lawfirmId lawfirmId
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [excludeTypes] excludeTypes
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [includeTypes] includeTypes
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmAuditEventsByCursorUsingGET(lawfirmId: number, excludeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, includeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, limit?: number, nextPageToken?: string, options?: any): AxiosPromise<ListLawfirmAuditEventsByCursorResponse>;
};
/**
 * AuditLawfirmEventsControllerApi - object-oriented interface
 * @export
 * @class AuditLawfirmEventsControllerApi
 * @extends {BaseAPI}
 */
export declare class AuditLawfirmEventsControllerApi extends BaseAPI {
    /**
     *
     * @summary listLawfirmAuditEventsByCursor
     * @param {number} lawfirmId lawfirmId
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [excludeTypes] excludeTypes
     * @param {Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>} [includeTypes] includeTypes
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuditLawfirmEventsControllerApi
     */
    listLawfirmAuditEventsByCursorUsingGET(lawfirmId: number, excludeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, includeTypes?: Array<'CASE_BOOKING' | 'CASE_MATCH' | 'CITATION_UPLOAD' | 'LAWFIRM_ACCOUNT_PRIORITY' | 'LAWFIRM_ACCOUNT_STATUS' | 'LAWFIRM_DAILY_CAPACITY' | 'LAWFIRM_TOTAL_CAPACITY' | 'SAVE_VACATION_MODE_END_DATE' | 'SAVE_VACATION_MODE_REASON' | 'VACATION_MODE_TOGGLE'>, limit?: number, nextPageToken?: string, options?: any): Promise<import("axios").AxiosResponse<ListLawfirmAuditEventsByCursorResponse, any>>;
}
/**
 * AuthenticationControllerApi - axios parameter creator
 * @export
 */
export declare const AuthenticationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserInfoUsingGET: (options?: any) => Promise<RequestArgs>;
};
/**
 * AuthenticationControllerApi - functional programming interface
 * @export
 */
export declare const AuthenticationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserInfoUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCurrentUserResponse>>;
};
/**
 * AuthenticationControllerApi - factory interface
 * @export
 */
export declare const AuthenticationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserInfoUsingGET(options?: any): AxiosPromise<GetCurrentUserResponse>;
};
/**
 * AuthenticationControllerApi - object-oriented interface
 * @export
 * @class AuthenticationControllerApi
 * @extends {BaseAPI}
 */
export declare class AuthenticationControllerApi extends BaseAPI {
    /**
     *
     * @summary getUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationControllerApi
     */
    getUserInfoUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetCurrentUserResponse, any>>;
}
/**
 * AwsCredentialsControllerApi - axios parameter creator
 * @export
 */
export declare const AwsCredentialsControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getAwsCredentials
     * @param {AwsCredentialsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAwsCredentialsUsingPOST: (request: AwsCredentialsRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * AwsCredentialsControllerApi - functional programming interface
 * @export
 */
export declare const AwsCredentialsControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getAwsCredentials
     * @param {AwsCredentialsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAwsCredentialsUsingPOST(request: AwsCredentialsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SimpleCredentialsResponse>>;
};
/**
 * AwsCredentialsControllerApi - factory interface
 * @export
 */
export declare const AwsCredentialsControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getAwsCredentials
     * @param {AwsCredentialsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAwsCredentialsUsingPOST(request: AwsCredentialsRequest, options?: any): AxiosPromise<SimpleCredentialsResponse>;
};
/**
 * AwsCredentialsControllerApi - object-oriented interface
 * @export
 * @class AwsCredentialsControllerApi
 * @extends {BaseAPI}
 */
export declare class AwsCredentialsControllerApi extends BaseAPI {
    /**
     *
     * @summary getAwsCredentials
     * @param {AwsCredentialsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AwsCredentialsControllerApi
     */
    getAwsCredentialsUsingPOST(request: AwsCredentialsRequest, options?: any): Promise<import("axios").AxiosResponse<SimpleCredentialsResponse, any>>;
}
/**
 * BlogWebhookControllerApi - axios parameter creator
 * @export
 */
export declare const BlogWebhookControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary handleEvent
     * @param {BlogEvent} event event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleEventUsingPOST: (event: BlogEvent, options?: any) => Promise<RequestArgs>;
};
/**
 * BlogWebhookControllerApi - functional programming interface
 * @export
 */
export declare const BlogWebhookControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary handleEvent
     * @param {BlogEvent} event event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleEventUsingPOST(event: BlogEvent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * BlogWebhookControllerApi - factory interface
 * @export
 */
export declare const BlogWebhookControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary handleEvent
     * @param {BlogEvent} event event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleEventUsingPOST(event: BlogEvent, options?: any): AxiosPromise<void>;
};
/**
 * BlogWebhookControllerApi - object-oriented interface
 * @export
 * @class BlogWebhookControllerApi
 * @extends {BaseAPI}
 */
export declare class BlogWebhookControllerApi extends BaseAPI {
    /**
     *
     * @summary handleEvent
     * @param {BlogEvent} event event
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogWebhookControllerApi
     */
    handleEventUsingPOST(event: BlogEvent, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * BranchLinkControllerApi - axios parameter creator
 * @export
 */
export declare const BranchLinkControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary createBranchLink
     * @param {CreateBranchLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBranchLinkUsingPOST: (request: CreateBranchLinkRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * BranchLinkControllerApi - functional programming interface
 * @export
 */
export declare const BranchLinkControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary createBranchLink
     * @param {CreateBranchLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBranchLinkUsingPOST(request: CreateBranchLinkRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * BranchLinkControllerApi - factory interface
 * @export
 */
export declare const BranchLinkControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary createBranchLink
     * @param {CreateBranchLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBranchLinkUsingPOST(request: CreateBranchLinkRequest, options?: any): AxiosPromise<object>;
};
/**
 * BranchLinkControllerApi - object-oriented interface
 * @export
 * @class BranchLinkControllerApi
 * @extends {BaseAPI}
 */
export declare class BranchLinkControllerApi extends BaseAPI {
    /**
     *
     * @summary createBranchLink
     * @param {CreateBranchLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BranchLinkControllerApi
     */
    createBranchLinkUsingPOST(request: CreateBranchLinkRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * CaseActionsControllerApi - axios parameter creator
 * @export
 */
export declare const CaseActionsControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addActionToCaseV2
     * @param {string} caseId caseId
     * @param {AddActionToCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addActionToCaseV2UsingPOST: (caseId: string, request: AddActionToCaseRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteActionFromCase
     * @param {string} caseActionIdString caseActionIdString
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteActionFromCaseUsingDELETE: (caseActionIdString: string, caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getActionTimeline
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActionTimelineUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getAllActions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllActionsUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCaseActions
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseActionsUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseActionsControllerApi - functional programming interface
 * @export
 */
export declare const CaseActionsControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addActionToCaseV2
     * @param {string} caseId caseId
     * @param {AddActionToCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addActionToCaseV2UsingPOST(caseId: string, request: AddActionToCaseRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddActionToCaseResponse>>;
    /**
     *
     * @summary deleteActionFromCase
     * @param {string} caseActionIdString caseActionIdString
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteActionFromCaseUsingDELETE(caseActionIdString: string, caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getActionTimeline
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActionTimelineUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseActionTimelineResponse>>;
    /**
     *
     * @summary getAllActions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllActionsUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseActionTypesResponse>>;
    /**
     *
     * @summary getCaseActions
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseActionsUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseActionResponse>>;
};
/**
 * CaseActionsControllerApi - factory interface
 * @export
 */
export declare const CaseActionsControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addActionToCaseV2
     * @param {string} caseId caseId
     * @param {AddActionToCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addActionToCaseV2UsingPOST(caseId: string, request: AddActionToCaseRequest, options?: any): AxiosPromise<AddActionToCaseResponse>;
    /**
     *
     * @summary deleteActionFromCase
     * @param {string} caseActionIdString caseActionIdString
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteActionFromCaseUsingDELETE(caseActionIdString: string, caseId: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getActionTimeline
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActionTimelineUsingGET(caseId: string, options?: any): AxiosPromise<GetCaseActionTimelineResponse>;
    /**
     *
     * @summary getAllActions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllActionsUsingGET(options?: any): AxiosPromise<GetCaseActionTypesResponse>;
    /**
     *
     * @summary getCaseActions
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseActionsUsingGET(caseId: string, options?: any): AxiosPromise<GetCaseActionResponse>;
};
/**
 * CaseActionsControllerApi - object-oriented interface
 * @export
 * @class CaseActionsControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseActionsControllerApi extends BaseAPI {
    /**
     *
     * @summary addActionToCaseV2
     * @param {string} caseId caseId
     * @param {AddActionToCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseActionsControllerApi
     */
    addActionToCaseV2UsingPOST(caseId: string, request: AddActionToCaseRequest, options?: any): Promise<import("axios").AxiosResponse<AddActionToCaseResponse, any>>;
    /**
     *
     * @summary deleteActionFromCase
     * @param {string} caseActionIdString caseActionIdString
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseActionsControllerApi
     */
    deleteActionFromCaseUsingDELETE(caseActionIdString: string, caseId: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getActionTimeline
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseActionsControllerApi
     */
    getActionTimelineUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseActionTimelineResponse, any>>;
    /**
     *
     * @summary getAllActions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseActionsControllerApi
     */
    getAllActionsUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetCaseActionTypesResponse, any>>;
    /**
     *
     * @summary getCaseActions
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseActionsControllerApi
     */
    getCaseActionsUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseActionResponse, any>>;
}
/**
 * CaseControllerApi - axios parameter creator
 * @export
 */
export declare const CaseControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addViolationsToCitation
     * @param {string} caseId caseId
     * @param {AddViolationsToCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addViolationsToCitationUsingPOST: (caseId: string, request: AddViolationsToCitationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary assignCaseToUser
     * @param {string} caseId caseId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignCaseToUserUsingPOST: (caseId: string, userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary assignOwner
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignOwnerUsingPOST: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary findChargeDisputesByCaseId
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findChargeDisputesByCaseIdUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getAppearanceAttorneysForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAppearanceAttorneysForCaseUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getSupportTicketsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportTicketsForCaseUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary initiateCaseAndChargeCustomer
     * @param {string} caseId caseId
     * @param {InitiateCaseAndChargeCustomerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    initiateCaseAndChargeCustomerUsingPOST: (caseId: string, request: InitiateCaseAndChargeCustomerRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary initiateCase
     * @param {string} caseId caseId
     * @param {object} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    initiateCaseUsingPOST: (caseId: string, request?: object, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markCaseAsResolved
     * @param {string} caseId caseId
     * @param {MarkCaseAsResolvedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCaseAsResolvedUsingPOST: (caseId: string, request: MarkCaseAsResolvedRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removeViolationsFromCitation
     * @param {string} caseId caseId
     * @param {string} violationTypes violationTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeViolationsFromCitationUsingDELETE: (caseId: string, violationTypes: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary reopenCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reopenCaseUsingPUT: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setCourtDateForCase
     * @param {string} caseId caseId
     * @param {SetCourtDateForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCourtDateForCaseUsingPOST: (caseId: string, request: SetCourtDateForCaseRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary submitRequestForPriceMatch
     * @param {string} caseId caseId
     * @param {PriceMatchRequest} priceMatchRequest priceMatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitRequestForPriceMatchUsingPOST: (caseId: string, priceMatchRequest: PriceMatchRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCase
     * @param {string} caseId caseId
     * @param {CaseDomainReq} caseFromRequest caseFromRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCaseUsingPUT: (caseId: string, caseFromRequest: CaseDomainReq, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateDeclineTickets
     * @param {string} caseId caseId
     * @param {UpdateCaseDeclineTicketsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDeclineTicketsUsingPUT: (caseId: string, request: UpdateCaseDeclineTicketsRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseControllerApi - functional programming interface
 * @export
 */
export declare const CaseControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addViolationsToCitation
     * @param {string} caseId caseId
     * @param {AddViolationsToCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addViolationsToCitationUsingPOST(caseId: string, request: AddViolationsToCitationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary assignCaseToUser
     * @param {string} caseId caseId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignCaseToUserUsingPOST(caseId: string, userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary assignOwner
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignOwnerUsingPOST(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary findChargeDisputesByCaseId
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findChargeDisputesByCaseIdUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindChargeDisputesResponse>>;
    /**
     *
     * @summary getAppearanceAttorneysForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAppearanceAttorneysForCaseUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAppearanceAttorneysResponse>>;
    /**
     *
     * @summary getSupportTicketsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportTicketsForCaseUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSupportTicketsResponse>>;
    /**
     *
     * @summary initiateCaseAndChargeCustomer
     * @param {string} caseId caseId
     * @param {InitiateCaseAndChargeCustomerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    initiateCaseAndChargeCustomerUsingPOST(caseId: string, request: InitiateCaseAndChargeCustomerRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InitiateCaseAndChargeCustomerResponse>>;
    /**
     *
     * @summary initiateCase
     * @param {string} caseId caseId
     * @param {object} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    initiateCaseUsingPOST(caseId: string, request?: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary markCaseAsResolved
     * @param {string} caseId caseId
     * @param {MarkCaseAsResolvedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCaseAsResolvedUsingPOST(caseId: string, request: MarkCaseAsResolvedRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MarkCaseAsResolvedResponse>>;
    /**
     *
     * @summary removeViolationsFromCitation
     * @param {string} caseId caseId
     * @param {string} violationTypes violationTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeViolationsFromCitationUsingDELETE(caseId: string, violationTypes: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary reopenCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reopenCaseUsingPUT(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary setCourtDateForCase
     * @param {string} caseId caseId
     * @param {SetCourtDateForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCourtDateForCaseUsingPOST(caseId: string, request: SetCourtDateForCaseRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary submitRequestForPriceMatch
     * @param {string} caseId caseId
     * @param {PriceMatchRequest} priceMatchRequest priceMatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitRequestForPriceMatchUsingPOST(caseId: string, priceMatchRequest: PriceMatchRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PriceMatchResponse>>;
    /**
     *
     * @summary updateCase
     * @param {string} caseId caseId
     * @param {CaseDomainReq} caseFromRequest caseFromRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCaseUsingPUT(caseId: string, caseFromRequest: CaseDomainReq, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseResponse>>;
    /**
     *
     * @summary updateDeclineTickets
     * @param {string} caseId caseId
     * @param {UpdateCaseDeclineTicketsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDeclineTicketsUsingPUT(caseId: string, request: UpdateCaseDeclineTicketsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * CaseControllerApi - factory interface
 * @export
 */
export declare const CaseControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addViolationsToCitation
     * @param {string} caseId caseId
     * @param {AddViolationsToCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addViolationsToCitationUsingPOST(caseId: string, request: AddViolationsToCitationRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary assignCaseToUser
     * @param {string} caseId caseId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignCaseToUserUsingPOST(caseId: string, userId: number, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary assignOwner
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignOwnerUsingPOST(caseId: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary findChargeDisputesByCaseId
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findChargeDisputesByCaseIdUsingGET(caseId: string, options?: any): AxiosPromise<FindChargeDisputesResponse>;
    /**
     *
     * @summary getAppearanceAttorneysForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAppearanceAttorneysForCaseUsingGET(caseId: string, options?: any): AxiosPromise<GetAppearanceAttorneysResponse>;
    /**
     *
     * @summary getSupportTicketsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportTicketsForCaseUsingGET(caseId: string, options?: any): AxiosPromise<GetSupportTicketsResponse>;
    /**
     *
     * @summary initiateCaseAndChargeCustomer
     * @param {string} caseId caseId
     * @param {InitiateCaseAndChargeCustomerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    initiateCaseAndChargeCustomerUsingPOST(caseId: string, request: InitiateCaseAndChargeCustomerRequest, options?: any): AxiosPromise<InitiateCaseAndChargeCustomerResponse>;
    /**
     *
     * @summary initiateCase
     * @param {string} caseId caseId
     * @param {object} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    initiateCaseUsingPOST(caseId: string, request?: object, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary markCaseAsResolved
     * @param {string} caseId caseId
     * @param {MarkCaseAsResolvedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCaseAsResolvedUsingPOST(caseId: string, request: MarkCaseAsResolvedRequest, options?: any): AxiosPromise<MarkCaseAsResolvedResponse>;
    /**
     *
     * @summary removeViolationsFromCitation
     * @param {string} caseId caseId
     * @param {string} violationTypes violationTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeViolationsFromCitationUsingDELETE(caseId: string, violationTypes: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary reopenCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reopenCaseUsingPUT(caseId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary setCourtDateForCase
     * @param {string} caseId caseId
     * @param {SetCourtDateForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCourtDateForCaseUsingPOST(caseId: string, request: SetCourtDateForCaseRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary submitRequestForPriceMatch
     * @param {string} caseId caseId
     * @param {PriceMatchRequest} priceMatchRequest priceMatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    submitRequestForPriceMatchUsingPOST(caseId: string, priceMatchRequest: PriceMatchRequest, options?: any): AxiosPromise<PriceMatchResponse>;
    /**
     *
     * @summary updateCase
     * @param {string} caseId caseId
     * @param {CaseDomainReq} caseFromRequest caseFromRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCaseUsingPUT(caseId: string, caseFromRequest: CaseDomainReq, options?: any): AxiosPromise<GetCaseResponse>;
    /**
     *
     * @summary updateDeclineTickets
     * @param {string} caseId caseId
     * @param {UpdateCaseDeclineTicketsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDeclineTicketsUsingPUT(caseId: string, request: UpdateCaseDeclineTicketsRequest, options?: any): AxiosPromise<object>;
};
/**
 * CaseControllerApi - object-oriented interface
 * @export
 * @class CaseControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseControllerApi extends BaseAPI {
    /**
     *
     * @summary addViolationsToCitation
     * @param {string} caseId caseId
     * @param {AddViolationsToCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    addViolationsToCitationUsingPOST(caseId: string, request: AddViolationsToCitationRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary assignCaseToUser
     * @param {string} caseId caseId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    assignCaseToUserUsingPOST(caseId: string, userId: number, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary assignOwner
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    assignOwnerUsingPOST(caseId: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary findChargeDisputesByCaseId
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    findChargeDisputesByCaseIdUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<FindChargeDisputesResponse, any>>;
    /**
     *
     * @summary getAppearanceAttorneysForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    getAppearanceAttorneysForCaseUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetAppearanceAttorneysResponse, any>>;
    /**
     *
     * @summary getSupportTicketsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    getSupportTicketsForCaseUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetSupportTicketsResponse, any>>;
    /**
     *
     * @summary initiateCaseAndChargeCustomer
     * @param {string} caseId caseId
     * @param {InitiateCaseAndChargeCustomerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    initiateCaseAndChargeCustomerUsingPOST(caseId: string, request: InitiateCaseAndChargeCustomerRequest, options?: any): Promise<import("axios").AxiosResponse<InitiateCaseAndChargeCustomerResponse, any>>;
    /**
     *
     * @summary initiateCase
     * @param {string} caseId caseId
     * @param {object} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    initiateCaseUsingPOST(caseId: string, request?: object, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary markCaseAsResolved
     * @param {string} caseId caseId
     * @param {MarkCaseAsResolvedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    markCaseAsResolvedUsingPOST(caseId: string, request: MarkCaseAsResolvedRequest, options?: any): Promise<import("axios").AxiosResponse<MarkCaseAsResolvedResponse, any>>;
    /**
     *
     * @summary removeViolationsFromCitation
     * @param {string} caseId caseId
     * @param {string} violationTypes violationTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    removeViolationsFromCitationUsingDELETE(caseId: string, violationTypes: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary reopenCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    reopenCaseUsingPUT(caseId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary setCourtDateForCase
     * @param {string} caseId caseId
     * @param {SetCourtDateForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    setCourtDateForCaseUsingPOST(caseId: string, request: SetCourtDateForCaseRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary submitRequestForPriceMatch
     * @param {string} caseId caseId
     * @param {PriceMatchRequest} priceMatchRequest priceMatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    submitRequestForPriceMatchUsingPOST(caseId: string, priceMatchRequest: PriceMatchRequest, options?: any): Promise<import("axios").AxiosResponse<PriceMatchResponse, any>>;
    /**
     *
     * @summary updateCase
     * @param {string} caseId caseId
     * @param {CaseDomainReq} caseFromRequest caseFromRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    updateCaseUsingPUT(caseId: string, caseFromRequest: CaseDomainReq, options?: any): Promise<import("axios").AxiosResponse<GetCaseResponse, any>>;
    /**
     *
     * @summary updateDeclineTickets
     * @param {string} caseId caseId
     * @param {UpdateCaseDeclineTicketsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseControllerApi
     */
    updateDeclineTicketsUsingPUT(caseId: string, request: UpdateCaseDeclineTicketsRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * CaseCreationControllerApi - axios parameter creator
 * @export
 */
export declare const CaseCreationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addSampleCase
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addSampleCaseUsingPUT: (lawfirmId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary matchCase
     * @param {string} citationIdString citationIdString
     * @param {CaseCreationRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    matchCaseUsingPOST: (citationIdString: string, request?: CaseCreationRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseCreationControllerApi - functional programming interface
 * @export
 */
export declare const CaseCreationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addSampleCase
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addSampleCaseUsingPUT(lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary matchCase
     * @param {string} citationIdString citationIdString
     * @param {CaseCreationRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    matchCaseUsingPOST(citationIdString: string, request?: CaseCreationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MatchCaseResponse>>;
};
/**
 * CaseCreationControllerApi - factory interface
 * @export
 */
export declare const CaseCreationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addSampleCase
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addSampleCaseUsingPUT(lawfirmId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary matchCase
     * @param {string} citationIdString citationIdString
     * @param {CaseCreationRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    matchCaseUsingPOST(citationIdString: string, request?: CaseCreationRequest, options?: any): AxiosPromise<MatchCaseResponse>;
};
/**
 * CaseCreationControllerApi - object-oriented interface
 * @export
 * @class CaseCreationControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseCreationControllerApi extends BaseAPI {
    /**
     *
     * @summary addSampleCase
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseCreationControllerApi
     */
    addSampleCaseUsingPUT(lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary matchCase
     * @param {string} citationIdString citationIdString
     * @param {CaseCreationRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseCreationControllerApi
     */
    matchCaseUsingPOST(citationIdString: string, request?: CaseCreationRequest, options?: any): Promise<import("axios").AxiosResponse<MatchCaseResponse, any>>;
}
/**
 * CaseNotesControllerApi - axios parameter creator
 * @export
 */
export declare const CaseNotesControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCaseNotes
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseNotesUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary saveCaseNotes
     * @param {string} caseId caseId
     * @param {SaveCaseNotesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveCaseNotesUsingPOST: (caseId: string, request: SaveCaseNotesRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseNotesControllerApi - functional programming interface
 * @export
 */
export declare const CaseNotesControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCaseNotes
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseNotesUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseNotesResponse>>;
    /**
     *
     * @summary saveCaseNotes
     * @param {string} caseId caseId
     * @param {SaveCaseNotesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveCaseNotesUsingPOST(caseId: string, request: SaveCaseNotesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * CaseNotesControllerApi - factory interface
 * @export
 */
export declare const CaseNotesControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCaseNotes
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseNotesUsingGET(caseId: string, options?: any): AxiosPromise<GetCaseNotesResponse>;
    /**
     *
     * @summary saveCaseNotes
     * @param {string} caseId caseId
     * @param {SaveCaseNotesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveCaseNotesUsingPOST(caseId: string, request: SaveCaseNotesRequest, options?: any): AxiosPromise<object>;
};
/**
 * CaseNotesControllerApi - object-oriented interface
 * @export
 * @class CaseNotesControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseNotesControllerApi extends BaseAPI {
    /**
     *
     * @summary getCaseNotes
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseNotesControllerApi
     */
    getCaseNotesUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseNotesResponse, any>>;
    /**
     *
     * @summary saveCaseNotes
     * @param {string} caseId caseId
     * @param {SaveCaseNotesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseNotesControllerApi
     */
    saveCaseNotesUsingPOST(caseId: string, request: SaveCaseNotesRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * CasePaymentControllerApi - axios parameter creator
 * @export
 */
export declare const CasePaymentControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary authorizeChargeForCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {AuthorizeChargeForCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authorizeChargeForCasePaymentUsingPOST: (caseId: string, casePaymentId: string, request?: AuthorizeChargeForCasePaymentRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary captureChargeFromCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {CaptureChargeFromCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    captureChargeFromCasePaymentUsingPOST: (caseId: string, casePaymentId: string, request?: CaptureChargeFromCasePaymentRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCasePaymentUsingDELETE: (caseId: string, casePaymentId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary generateCasePaymentPlan
     * @param {string} caseId caseId
     * @param {string} paymentPlanTypeId paymentPlanTypeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateCasePaymentPlanUsingGET: (caseId: string, paymentPlanTypeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getAvailablePaymentPlans
     * @param {number} lawfirmId lawfirmId
     * @param {string} legalFeeInCents legalFeeInCents
     * @param {string} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAvailablePaymentPlansUsingPOST: (lawfirmId: number, legalFeeInCents: string, state: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCasePayments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasePaymentsUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getPaymentPlanOptions
     * @param {string} caseId caseId
     * @param {number} feeInCents feeInCents
     * @param {number} lawfirmId lawfirmId
     * @param {number} [userId] userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentPlanOptionsUsingGET: (caseId: string, feeInCents: number, lawfirmId: number, userId?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getStripeCharge
     * @param {string} caseId caseId
     * @param {string} stripeChargeId stripeChargeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeChargeUsingGET: (caseId: string, stripeChargeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getStripeCharges
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeChargesUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listCostItemsForAttorney
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCostItemsForAttorneyUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listCostItemsForCustomer
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCostItemsForCustomerUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary scheduleNewPayment
     * @param {string} caseId caseId
     * @param {ScheduleNewPaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    scheduleNewPaymentUsingPOST: (caseId: string, request: ScheduleNewPaymentRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCasePayment
     * @param {string} casePaymentId casePaymentId
     * @param {UpdateCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCasePaymentUsingPUT: (casePaymentId: string, request: UpdateCasePaymentRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updatePaymentDueDate
     * @param {string} casePaymentId casePaymentId
     * @param {UpdatePaymentDueDateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentDueDateUsingPUT: (casePaymentId: string, request: UpdatePaymentDueDateRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updatePaymentRecipient
     * @param {string} casePaymentId casePaymentId
     * @param {'LAWFIRM' | 'OTR'} recipient recipient
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentRecipientUsingPUT: (casePaymentId: string, recipient: 'LAWFIRM' | 'OTR', options?: any) => Promise<RequestArgs>;
};
/**
 * CasePaymentControllerApi - functional programming interface
 * @export
 */
export declare const CasePaymentControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary authorizeChargeForCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {AuthorizeChargeForCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authorizeChargeForCasePaymentUsingPOST(caseId: string, casePaymentId: string, request?: AuthorizeChargeForCasePaymentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthorizeChargeForCasePaymentResponse>>;
    /**
     *
     * @summary captureChargeFromCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {CaptureChargeFromCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    captureChargeFromCasePaymentUsingPOST(caseId: string, casePaymentId: string, request?: CaptureChargeFromCasePaymentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean>>;
    /**
     *
     * @summary deleteCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCasePaymentUsingDELETE(caseId: string, casePaymentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary generateCasePaymentPlan
     * @param {string} caseId caseId
     * @param {string} paymentPlanTypeId paymentPlanTypeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateCasePaymentPlanUsingGET(caseId: string, paymentPlanTypeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCostItemsForCustomerResponse>>;
    /**
     *
     * @summary getAvailablePaymentPlans
     * @param {number} lawfirmId lawfirmId
     * @param {string} legalFeeInCents legalFeeInCents
     * @param {string} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAvailablePaymentPlansUsingPOST(lawfirmId: number, legalFeeInCents: string, state: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAvailablePaymentPlansResponse>>;
    /**
     *
     * @summary getCasePayments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasePaymentsUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCasePaymentsResponse>>;
    /**
     *
     * @summary getPaymentPlanOptions
     * @param {string} caseId caseId
     * @param {number} feeInCents feeInCents
     * @param {number} lawfirmId lawfirmId
     * @param {number} [userId] userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentPlanOptionsUsingGET(caseId: string, feeInCents: number, lawfirmId: number, userId?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAvailablePaymentPlansResponse>>;
    /**
     *
     * @summary getStripeCharge
     * @param {string} caseId caseId
     * @param {string} stripeChargeId stripeChargeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeChargeUsingGET(caseId: string, stripeChargeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetStripeChargeResponse>>;
    /**
     *
     * @summary getStripeCharges
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeChargesUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetStripeChargesResponse>>;
    /**
     *
     * @summary listCostItemsForAttorney
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCostItemsForAttorneyUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseCostsAttorneyResponse>>;
    /**
     *
     * @summary listCostItemsForCustomer
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCostItemsForCustomerUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCostItemsForCustomerResponse>>;
    /**
     *
     * @summary scheduleNewPayment
     * @param {string} caseId caseId
     * @param {ScheduleNewPaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    scheduleNewPaymentUsingPOST(caseId: string, request: ScheduleNewPaymentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateCasePayment
     * @param {string} casePaymentId casePaymentId
     * @param {UpdateCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCasePaymentUsingPUT(casePaymentId: string, request: UpdateCasePaymentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updatePaymentDueDate
     * @param {string} casePaymentId casePaymentId
     * @param {UpdatePaymentDueDateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentDueDateUsingPUT(casePaymentId: string, request: UpdatePaymentDueDateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updatePaymentRecipient
     * @param {string} casePaymentId casePaymentId
     * @param {'LAWFIRM' | 'OTR'} recipient recipient
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentRecipientUsingPUT(casePaymentId: string, recipient: 'LAWFIRM' | 'OTR', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CasePaymentControllerApi - factory interface
 * @export
 */
export declare const CasePaymentControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary authorizeChargeForCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {AuthorizeChargeForCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authorizeChargeForCasePaymentUsingPOST(caseId: string, casePaymentId: string, request?: AuthorizeChargeForCasePaymentRequest, options?: any): AxiosPromise<AuthorizeChargeForCasePaymentResponse>;
    /**
     *
     * @summary captureChargeFromCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {CaptureChargeFromCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    captureChargeFromCasePaymentUsingPOST(caseId: string, casePaymentId: string, request?: CaptureChargeFromCasePaymentRequest, options?: any): AxiosPromise<boolean>;
    /**
     *
     * @summary deleteCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCasePaymentUsingDELETE(caseId: string, casePaymentId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary generateCasePaymentPlan
     * @param {string} caseId caseId
     * @param {string} paymentPlanTypeId paymentPlanTypeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateCasePaymentPlanUsingGET(caseId: string, paymentPlanTypeId: string, options?: any): AxiosPromise<ListCostItemsForCustomerResponse>;
    /**
     *
     * @summary getAvailablePaymentPlans
     * @param {number} lawfirmId lawfirmId
     * @param {string} legalFeeInCents legalFeeInCents
     * @param {string} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAvailablePaymentPlansUsingPOST(lawfirmId: number, legalFeeInCents: string, state: string, options?: any): AxiosPromise<GetAvailablePaymentPlansResponse>;
    /**
     *
     * @summary getCasePayments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasePaymentsUsingGET(caseId: string, options?: any): AxiosPromise<GetCasePaymentsResponse>;
    /**
     *
     * @summary getPaymentPlanOptions
     * @param {string} caseId caseId
     * @param {number} feeInCents feeInCents
     * @param {number} lawfirmId lawfirmId
     * @param {number} [userId] userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentPlanOptionsUsingGET(caseId: string, feeInCents: number, lawfirmId: number, userId?: number, options?: any): AxiosPromise<GetAvailablePaymentPlansResponse>;
    /**
     *
     * @summary getStripeCharge
     * @param {string} caseId caseId
     * @param {string} stripeChargeId stripeChargeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeChargeUsingGET(caseId: string, stripeChargeId: string, options?: any): AxiosPromise<GetStripeChargeResponse>;
    /**
     *
     * @summary getStripeCharges
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeChargesUsingGET(caseId: string, options?: any): AxiosPromise<GetStripeChargesResponse>;
    /**
     *
     * @summary listCostItemsForAttorney
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCostItemsForAttorneyUsingGET(caseId: string, options?: any): AxiosPromise<GetCaseCostsAttorneyResponse>;
    /**
     *
     * @summary listCostItemsForCustomer
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCostItemsForCustomerUsingGET(caseId: string, options?: any): AxiosPromise<ListCostItemsForCustomerResponse>;
    /**
     *
     * @summary scheduleNewPayment
     * @param {string} caseId caseId
     * @param {ScheduleNewPaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    scheduleNewPaymentUsingPOST(caseId: string, request: ScheduleNewPaymentRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateCasePayment
     * @param {string} casePaymentId casePaymentId
     * @param {UpdateCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCasePaymentUsingPUT(casePaymentId: string, request: UpdateCasePaymentRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updatePaymentDueDate
     * @param {string} casePaymentId casePaymentId
     * @param {UpdatePaymentDueDateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentDueDateUsingPUT(casePaymentId: string, request: UpdatePaymentDueDateRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updatePaymentRecipient
     * @param {string} casePaymentId casePaymentId
     * @param {'LAWFIRM' | 'OTR'} recipient recipient
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentRecipientUsingPUT(casePaymentId: string, recipient: 'LAWFIRM' | 'OTR', options?: any): AxiosPromise<void>;
};
/**
 * CasePaymentControllerApi - object-oriented interface
 * @export
 * @class CasePaymentControllerApi
 * @extends {BaseAPI}
 */
export declare class CasePaymentControllerApi extends BaseAPI {
    /**
     *
     * @summary authorizeChargeForCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {AuthorizeChargeForCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    authorizeChargeForCasePaymentUsingPOST(caseId: string, casePaymentId: string, request?: AuthorizeChargeForCasePaymentRequest, options?: any): Promise<import("axios").AxiosResponse<AuthorizeChargeForCasePaymentResponse, any>>;
    /**
     *
     * @summary captureChargeFromCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {CaptureChargeFromCasePaymentRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    captureChargeFromCasePaymentUsingPOST(caseId: string, casePaymentId: string, request?: CaptureChargeFromCasePaymentRequest, options?: any): Promise<import("axios").AxiosResponse<boolean, any>>;
    /**
     *
     * @summary deleteCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    deleteCasePaymentUsingDELETE(caseId: string, casePaymentId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary generateCasePaymentPlan
     * @param {string} caseId caseId
     * @param {string} paymentPlanTypeId paymentPlanTypeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    generateCasePaymentPlanUsingGET(caseId: string, paymentPlanTypeId: string, options?: any): Promise<import("axios").AxiosResponse<ListCostItemsForCustomerResponse, any>>;
    /**
     *
     * @summary getAvailablePaymentPlans
     * @param {number} lawfirmId lawfirmId
     * @param {string} legalFeeInCents legalFeeInCents
     * @param {string} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    getAvailablePaymentPlansUsingPOST(lawfirmId: number, legalFeeInCents: string, state: string, options?: any): Promise<import("axios").AxiosResponse<GetAvailablePaymentPlansResponse, any>>;
    /**
     *
     * @summary getCasePayments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    getCasePaymentsUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCasePaymentsResponse, any>>;
    /**
     *
     * @summary getPaymentPlanOptions
     * @param {string} caseId caseId
     * @param {number} feeInCents feeInCents
     * @param {number} lawfirmId lawfirmId
     * @param {number} [userId] userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    getPaymentPlanOptionsUsingGET(caseId: string, feeInCents: number, lawfirmId: number, userId?: number, options?: any): Promise<import("axios").AxiosResponse<GetAvailablePaymentPlansResponse, any>>;
    /**
     *
     * @summary getStripeCharge
     * @param {string} caseId caseId
     * @param {string} stripeChargeId stripeChargeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    getStripeChargeUsingGET(caseId: string, stripeChargeId: string, options?: any): Promise<import("axios").AxiosResponse<GetStripeChargeResponse, any>>;
    /**
     *
     * @summary getStripeCharges
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    getStripeChargesUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetStripeChargesResponse, any>>;
    /**
     *
     * @summary listCostItemsForAttorney
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    listCostItemsForAttorneyUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseCostsAttorneyResponse, any>>;
    /**
     *
     * @summary listCostItemsForCustomer
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    listCostItemsForCustomerUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<ListCostItemsForCustomerResponse, any>>;
    /**
     *
     * @summary scheduleNewPayment
     * @param {string} caseId caseId
     * @param {ScheduleNewPaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    scheduleNewPaymentUsingPOST(caseId: string, request: ScheduleNewPaymentRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateCasePayment
     * @param {string} casePaymentId casePaymentId
     * @param {UpdateCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    updateCasePaymentUsingPUT(casePaymentId: string, request: UpdateCasePaymentRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updatePaymentDueDate
     * @param {string} casePaymentId casePaymentId
     * @param {UpdatePaymentDueDateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    updatePaymentDueDateUsingPUT(casePaymentId: string, request: UpdatePaymentDueDateRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updatePaymentRecipient
     * @param {string} casePaymentId casePaymentId
     * @param {'LAWFIRM' | 'OTR'} recipient recipient
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CasePaymentControllerApi
     */
    updatePaymentRecipientUsingPUT(casePaymentId: string, recipient: 'LAWFIRM' | 'OTR', options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * CaseReferralCodeControllerApi - axios parameter creator
 * @export
 */
export declare const CaseReferralCodeControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Apply referral code to a case to adjust the estimated cost and/or to assign the rightful lawfirm. This operation is idempotent
     * @param {string} caseId caseId
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    applyReferralCodeUsingPOST: (caseId: string, codeId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseReferralCodeControllerApi - functional programming interface
 * @export
 */
export declare const CaseReferralCodeControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Apply referral code to a case to adjust the estimated cost and/or to assign the rightful lawfirm. This operation is idempotent
     * @param {string} caseId caseId
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    applyReferralCodeUsingPOST(caseId: string, codeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MatchCaseResponse>>;
};
/**
 * CaseReferralCodeControllerApi - factory interface
 * @export
 */
export declare const CaseReferralCodeControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Apply referral code to a case to adjust the estimated cost and/or to assign the rightful lawfirm. This operation is idempotent
     * @param {string} caseId caseId
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    applyReferralCodeUsingPOST(caseId: string, codeId: string, options?: any): AxiosPromise<MatchCaseResponse>;
};
/**
 * CaseReferralCodeControllerApi - object-oriented interface
 * @export
 * @class CaseReferralCodeControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseReferralCodeControllerApi extends BaseAPI {
    /**
     *
     * @summary Apply referral code to a case to adjust the estimated cost and/or to assign the rightful lawfirm. This operation is idempotent
     * @param {string} caseId caseId
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseReferralCodeControllerApi
     */
    applyReferralCodeUsingPOST(caseId: string, codeId: string, options?: any): Promise<import("axios").AxiosResponse<MatchCaseResponse, any>>;
}
/**
 * CaseRefundControllerApi - axios parameter creator
 * @export
 */
export declare const CaseRefundControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary cancelCase
     * @param {CancelCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelCaseUsingDELETE: (request: CancelCaseRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary refundCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {RefundCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundCasePaymentUsingPOST: (caseId: string, casePaymentId: string, request: RefundCasePaymentRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary releasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    releasePaymentUsingPOST: (caseId: string, casePaymentId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateRefundEligibilityForCase
     * @param {string} caseId caseId
     * @param {UpdateRefundEligibilityForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateRefundEligibilityForCaseUsingPUT: (caseId: string, request: UpdateRefundEligibilityForCaseRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseRefundControllerApi - functional programming interface
 * @export
 */
export declare const CaseRefundControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary cancelCase
     * @param {CancelCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelCaseUsingDELETE(request: CancelCaseRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseResponse>>;
    /**
     *
     * @summary refundCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {RefundCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundCasePaymentUsingPOST(caseId: string, casePaymentId: string, request: RefundCasePaymentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary releasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    releasePaymentUsingPOST(caseId: string, casePaymentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateRefundEligibilityForCase
     * @param {string} caseId caseId
     * @param {UpdateRefundEligibilityForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateRefundEligibilityForCaseUsingPUT(caseId: string, request: UpdateRefundEligibilityForCaseRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSupportTicketsResponse>>;
};
/**
 * CaseRefundControllerApi - factory interface
 * @export
 */
export declare const CaseRefundControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary cancelCase
     * @param {CancelCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelCaseUsingDELETE(request: CancelCaseRequest, options?: any): AxiosPromise<GetCaseResponse>;
    /**
     *
     * @summary refundCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {RefundCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundCasePaymentUsingPOST(caseId: string, casePaymentId: string, request: RefundCasePaymentRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary releasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    releasePaymentUsingPOST(caseId: string, casePaymentId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateRefundEligibilityForCase
     * @param {string} caseId caseId
     * @param {UpdateRefundEligibilityForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateRefundEligibilityForCaseUsingPUT(caseId: string, request: UpdateRefundEligibilityForCaseRequest, options?: any): AxiosPromise<GetSupportTicketsResponse>;
};
/**
 * CaseRefundControllerApi - object-oriented interface
 * @export
 * @class CaseRefundControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseRefundControllerApi extends BaseAPI {
    /**
     *
     * @summary cancelCase
     * @param {CancelCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseRefundControllerApi
     */
    cancelCaseUsingDELETE(request: CancelCaseRequest, options?: any): Promise<import("axios").AxiosResponse<GetCaseResponse, any>>;
    /**
     *
     * @summary refundCasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {RefundCasePaymentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseRefundControllerApi
     */
    refundCasePaymentUsingPOST(caseId: string, casePaymentId: string, request: RefundCasePaymentRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary releasePayment
     * @param {string} caseId caseId
     * @param {string} casePaymentId casePaymentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseRefundControllerApi
     */
    releasePaymentUsingPOST(caseId: string, casePaymentId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateRefundEligibilityForCase
     * @param {string} caseId caseId
     * @param {UpdateRefundEligibilityForCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseRefundControllerApi
     */
    updateRefundEligibilityForCaseUsingPUT(caseId: string, request: UpdateRefundEligibilityForCaseRequest, options?: any): Promise<import("axios").AxiosResponse<GetSupportTicketsResponse, any>>;
}
/**
 * CaseStatusControllerApi - axios parameter creator
 * @export
 */
export declare const CaseStatusControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCaseResolutionStatuses
     * @param {string} [stateCode] stateCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseResolutionStatusesUsingGET: (stateCode?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCaseStatuses
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [categories] categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseStatusesUsingGET: (categories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseStatusControllerApi - functional programming interface
 * @export
 */
export declare const CaseStatusControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCaseResolutionStatuses
     * @param {string} [stateCode] stateCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseResolutionStatusesUsingGET(stateCode?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseResolutionStatusesResponse>>;
    /**
     *
     * @summary getCaseStatuses
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [categories] categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseStatusesUsingGET(categories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CaseStatusDetailsResponse>>>;
};
/**
 * CaseStatusControllerApi - factory interface
 * @export
 */
export declare const CaseStatusControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCaseResolutionStatuses
     * @param {string} [stateCode] stateCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseResolutionStatusesUsingGET(stateCode?: string, options?: any): AxiosPromise<GetCaseResolutionStatusesResponse>;
    /**
     *
     * @summary getCaseStatuses
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [categories] categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseStatusesUsingGET(categories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any): AxiosPromise<Array<CaseStatusDetailsResponse>>;
};
/**
 * CaseStatusControllerApi - object-oriented interface
 * @export
 * @class CaseStatusControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseStatusControllerApi extends BaseAPI {
    /**
     *
     * @summary getCaseResolutionStatuses
     * @param {string} [stateCode] stateCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseStatusControllerApi
     */
    getCaseResolutionStatusesUsingGET(stateCode?: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseResolutionStatusesResponse, any>>;
    /**
     *
     * @summary getCaseStatuses
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [categories] categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseStatusControllerApi
     */
    getCaseStatusesUsingGET(categories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any): Promise<import("axios").AxiosResponse<CaseStatusDetailsResponse[], any>>;
}
/**
 * CaseTransferControllerApi - axios parameter creator
 * @export
 */
export declare const CaseTransferControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getTransferHistory
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransferHistoryUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary transferCase
     * @param {string} caseId caseId
     * @param {TransferCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transferCaseUsingPUT: (caseId: string, request: TransferCaseRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CaseTransferControllerApi - functional programming interface
 * @export
 */
export declare const CaseTransferControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getTransferHistory
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransferHistoryUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CaseTransferResponse>>;
    /**
     *
     * @summary transferCase
     * @param {string} caseId caseId
     * @param {TransferCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transferCaseUsingPUT(caseId: string, request: TransferCaseRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * CaseTransferControllerApi - factory interface
 * @export
 */
export declare const CaseTransferControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getTransferHistory
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransferHistoryUsingGET(caseId: string, options?: any): AxiosPromise<CaseTransferResponse>;
    /**
     *
     * @summary transferCase
     * @param {string} caseId caseId
     * @param {TransferCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transferCaseUsingPUT(caseId: string, request: TransferCaseRequest, options?: any): AxiosPromise<object>;
};
/**
 * CaseTransferControllerApi - object-oriented interface
 * @export
 * @class CaseTransferControllerApi
 * @extends {BaseAPI}
 */
export declare class CaseTransferControllerApi extends BaseAPI {
    /**
     *
     * @summary getTransferHistory
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseTransferControllerApi
     */
    getTransferHistoryUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<CaseTransferResponse, any>>;
    /**
     *
     * @summary transferCase
     * @param {string} caseId caseId
     * @param {TransferCaseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CaseTransferControllerApi
     */
    transferCaseUsingPUT(caseId: string, request: TransferCaseRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * CatchAllControllerApi - axios parameter creator
 * @export
 */
export declare const CatchAllControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingDELETE1: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingGET1: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingHEAD1: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingOPTIONS1: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPATCH1: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPOST1: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPUT1: (options?: any) => Promise<RequestArgs>;
};
/**
 * CatchAllControllerApi - functional programming interface
 * @export
 */
export declare const CatchAllControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingDELETE1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingGET1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingHEAD1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingOPTIONS1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPATCH1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPOST1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPUT1(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * CatchAllControllerApi - factory interface
 * @export
 */
export declare const CatchAllControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingDELETE1(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingGET1(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingHEAD1(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingOPTIONS1(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPATCH1(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPOST1(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    unmappedRequestUsingPUT1(options?: any): AxiosPromise<object>;
};
/**
 * CatchAllControllerApi - object-oriented interface
 * @export
 * @class CatchAllControllerApi
 * @extends {BaseAPI}
 */
export declare class CatchAllControllerApi extends BaseAPI {
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingDELETE1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingGET1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingHEAD1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingOPTIONS1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingPATCH1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingPOST1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary unmappedRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CatchAllControllerApi
     */
    unmappedRequestUsingPUT1(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * CertificateControllerApi - axios parameter creator
 * @export
 */
export declare const CertificateControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getSSLPublicCertFile
     * @param {'DER' | 'PEM'} encoding encoding
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSSLPublicCertFileUsingGET: (encoding: 'DER' | 'PEM', options?: any) => Promise<RequestArgs>;
};
/**
 * CertificateControllerApi - functional programming interface
 * @export
 */
export declare const CertificateControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getSSLPublicCertFile
     * @param {'DER' | 'PEM'} encoding encoding
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSSLPublicCertFileUsingGET(encoding: 'DER' | 'PEM', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SSLCertificateResponse>>;
};
/**
 * CertificateControllerApi - factory interface
 * @export
 */
export declare const CertificateControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getSSLPublicCertFile
     * @param {'DER' | 'PEM'} encoding encoding
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSSLPublicCertFileUsingGET(encoding: 'DER' | 'PEM', options?: any): AxiosPromise<SSLCertificateResponse>;
};
/**
 * CertificateControllerApi - object-oriented interface
 * @export
 * @class CertificateControllerApi
 * @extends {BaseAPI}
 */
export declare class CertificateControllerApi extends BaseAPI {
    /**
     *
     * @summary getSSLPublicCertFile
     * @param {'DER' | 'PEM'} encoding encoding
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CertificateControllerApi
     */
    getSSLPublicCertFileUsingGET(encoding: 'DER' | 'PEM', options?: any): Promise<import("axios").AxiosResponse<SSLCertificateResponse, any>>;
}
/**
 * CitationControllerApi - axios parameter creator
 * @export
 */
export declare const CitationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary assignCitationOwner
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignCitationOwnerUsingPOST: (citationId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary createNewCitation
     * @param {CreateCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createNewCitationUsingPOST: (request: CreateCitationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary createReferralSourceForCitation
     * @param {string} citationId citationId
     * @param {CreateReferralSourceForCitation} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReferralSourceForCitationUsingPOST: (citationId: string, request: CreateReferralSourceForCitation, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCitationUsingDELETE: (citationIdString: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteMissingCourtRecord
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteMissingCourtRecordUsingDELETE: (citationId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary dismissCitationsFromContactList
     * @param {DismissCitationsFromContactListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dismissCitationsFromContactListUsingPOST: (request: DismissCitationsFromContactListRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getAnonymousTicketUploads
     * @param {string} emailAddress emailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAnonymousTicketUploadsUsingGET: (emailAddress: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationUsingGET: (citationIdString: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getListOfCitationsWithMissingCourt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getListOfCitationsWithMissingCourtUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getNoViolationCitations
     * @param {Array<string>} [regionCodes] regionCodes
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getNoViolationCitationsUsingGET: (regionCodes?: Array<string>, trailingDays?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary postMissingCourtForCitation
     * @param {string} citationId citationId
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postMissingCourtForCitationUsingPOST: (citationId: string, state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setCitationContactListFlag
     * @param {string} citationIdString citationIdString
     * @param {boolean} isDismissed isDismissed
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCitationContactListFlagUsingPOST: (citationIdString: string, isDismissed: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCitationAddress
     * @param {string} citationId citationId
     * @param {UpdateCitationAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationAddressUsingPOST: (citationId: string, request: UpdateCitationAddressRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCitationPicture
     * @param {string} citationId citationId
     * @param {UpdateCitationPictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationPictureUsingPUT: (citationId: string, request: UpdateCitationPictureRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCitation
     * @param {string} citationIdString citationIdString
     * @param {UpdateCitationRequest} updateCitationRequest updateCitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationUsingPUT: (citationIdString: string, updateCitationRequest: UpdateCitationRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CitationControllerApi - functional programming interface
 * @export
 */
export declare const CitationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary assignCitationOwner
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignCitationOwnerUsingPOST(citationId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary createNewCitation
     * @param {CreateCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createNewCitationUsingPOST(request: CreateCitationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateCitationResponse>>;
    /**
     *
     * @summary createReferralSourceForCitation
     * @param {string} citationId citationId
     * @param {CreateReferralSourceForCitation} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReferralSourceForCitationUsingPOST(citationId: string, request: CreateReferralSourceForCitation, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary deleteCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCitationUsingDELETE(citationIdString: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteCitationResponse>>;
    /**
     *
     * @summary deleteMissingCourtRecord
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteMissingCourtRecordUsingDELETE(citationId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetListOfCitationsWithMissingCourtResponse>>;
    /**
     *
     * @summary dismissCitationsFromContactList
     * @param {DismissCitationsFromContactListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dismissCitationsFromContactListUsingPOST(request: DismissCitationsFromContactListRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getAnonymousTicketUploads
     * @param {string} emailAddress emailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAnonymousTicketUploadsUsingGET(emailAddress: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCitationsResponse>>;
    /**
     *
     * @summary getCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationUsingGET(citationIdString: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCitationResponse>>;
    /**
     *
     * @summary getListOfCitationsWithMissingCourt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getListOfCitationsWithMissingCourtUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetListOfCitationsWithMissingCourtResponse>>;
    /**
     *
     * @summary getNoViolationCitations
     * @param {Array<string>} [regionCodes] regionCodes
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getNoViolationCitationsUsingGET(regionCodes?: Array<string>, trailingDays?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetNoViolationCitationsResponse>>;
    /**
     *
     * @summary postMissingCourtForCitation
     * @param {string} citationId citationId
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postMissingCourtForCitationUsingPOST(citationId: string, state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary setCitationContactListFlag
     * @param {string} citationIdString citationIdString
     * @param {boolean} isDismissed isDismissed
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCitationContactListFlagUsingPOST(citationIdString: string, isDismissed: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary updateCitationAddress
     * @param {string} citationId citationId
     * @param {UpdateCitationAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationAddressUsingPOST(citationId: string, request: UpdateCitationAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateCitationPicture
     * @param {string} citationId citationId
     * @param {UpdateCitationPictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationPictureUsingPUT(citationId: string, request: UpdateCitationPictureRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateCitation
     * @param {string} citationIdString citationIdString
     * @param {UpdateCitationRequest} updateCitationRequest updateCitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationUsingPUT(citationIdString: string, updateCitationRequest: UpdateCitationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CitationControllerApi - factory interface
 * @export
 */
export declare const CitationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary assignCitationOwner
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assignCitationOwnerUsingPOST(citationId: number, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary createNewCitation
     * @param {CreateCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createNewCitationUsingPOST(request: CreateCitationRequest, options?: any): AxiosPromise<CreateCitationResponse>;
    /**
     *
     * @summary createReferralSourceForCitation
     * @param {string} citationId citationId
     * @param {CreateReferralSourceForCitation} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReferralSourceForCitationUsingPOST(citationId: string, request: CreateReferralSourceForCitation, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary deleteCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCitationUsingDELETE(citationIdString: string, options?: any): AxiosPromise<DeleteCitationResponse>;
    /**
     *
     * @summary deleteMissingCourtRecord
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteMissingCourtRecordUsingDELETE(citationId: number, options?: any): AxiosPromise<GetListOfCitationsWithMissingCourtResponse>;
    /**
     *
     * @summary dismissCitationsFromContactList
     * @param {DismissCitationsFromContactListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dismissCitationsFromContactListUsingPOST(request: DismissCitationsFromContactListRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getAnonymousTicketUploads
     * @param {string} emailAddress emailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAnonymousTicketUploadsUsingGET(emailAddress: string, options?: any): AxiosPromise<GetCitationsResponse>;
    /**
     *
     * @summary getCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationUsingGET(citationIdString: string, options?: any): AxiosPromise<GetCitationResponse>;
    /**
     *
     * @summary getListOfCitationsWithMissingCourt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getListOfCitationsWithMissingCourtUsingGET(options?: any): AxiosPromise<GetListOfCitationsWithMissingCourtResponse>;
    /**
     *
     * @summary getNoViolationCitations
     * @param {Array<string>} [regionCodes] regionCodes
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getNoViolationCitationsUsingGET(regionCodes?: Array<string>, trailingDays?: number, options?: any): AxiosPromise<GetNoViolationCitationsResponse>;
    /**
     *
     * @summary postMissingCourtForCitation
     * @param {string} citationId citationId
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postMissingCourtForCitationUsingPOST(citationId: string, state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): AxiosPromise<object>;
    /**
     *
     * @summary setCitationContactListFlag
     * @param {string} citationIdString citationIdString
     * @param {boolean} isDismissed isDismissed
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCitationContactListFlagUsingPOST(citationIdString: string, isDismissed: boolean, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary updateCitationAddress
     * @param {string} citationId citationId
     * @param {UpdateCitationAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationAddressUsingPOST(citationId: string, request: UpdateCitationAddressRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateCitationPicture
     * @param {string} citationId citationId
     * @param {UpdateCitationPictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationPictureUsingPUT(citationId: string, request: UpdateCitationPictureRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateCitation
     * @param {string} citationIdString citationIdString
     * @param {UpdateCitationRequest} updateCitationRequest updateCitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCitationUsingPUT(citationIdString: string, updateCitationRequest: UpdateCitationRequest, options?: any): AxiosPromise<void>;
};
/**
 * CitationControllerApi - object-oriented interface
 * @export
 * @class CitationControllerApi
 * @extends {BaseAPI}
 */
export declare class CitationControllerApi extends BaseAPI {
    /**
     *
     * @summary assignCitationOwner
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    assignCitationOwnerUsingPOST(citationId: number, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary createNewCitation
     * @param {CreateCitationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    createNewCitationUsingPOST(request: CreateCitationRequest, options?: any): Promise<import("axios").AxiosResponse<CreateCitationResponse, any>>;
    /**
     *
     * @summary createReferralSourceForCitation
     * @param {string} citationId citationId
     * @param {CreateReferralSourceForCitation} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    createReferralSourceForCitationUsingPOST(citationId: string, request: CreateReferralSourceForCitation, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary deleteCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    deleteCitationUsingDELETE(citationIdString: string, options?: any): Promise<import("axios").AxiosResponse<DeleteCitationResponse, any>>;
    /**
     *
     * @summary deleteMissingCourtRecord
     * @param {number} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    deleteMissingCourtRecordUsingDELETE(citationId: number, options?: any): Promise<import("axios").AxiosResponse<GetListOfCitationsWithMissingCourtResponse, any>>;
    /**
     *
     * @summary dismissCitationsFromContactList
     * @param {DismissCitationsFromContactListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    dismissCitationsFromContactListUsingPOST(request: DismissCitationsFromContactListRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getAnonymousTicketUploads
     * @param {string} emailAddress emailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    getAnonymousTicketUploadsUsingGET(emailAddress: string, options?: any): Promise<import("axios").AxiosResponse<GetCitationsResponse, any>>;
    /**
     *
     * @summary getCitation
     * @param {string} citationIdString citationIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    getCitationUsingGET(citationIdString: string, options?: any): Promise<import("axios").AxiosResponse<GetCitationResponse, any>>;
    /**
     *
     * @summary getListOfCitationsWithMissingCourt
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    getListOfCitationsWithMissingCourtUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetListOfCitationsWithMissingCourtResponse, any>>;
    /**
     *
     * @summary getNoViolationCitations
     * @param {Array<string>} [regionCodes] regionCodes
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    getNoViolationCitationsUsingGET(regionCodes?: Array<string>, trailingDays?: number, options?: any): Promise<import("axios").AxiosResponse<GetNoViolationCitationsResponse, any>>;
    /**
     *
     * @summary postMissingCourtForCitation
     * @param {string} citationId citationId
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    postMissingCourtForCitationUsingPOST(citationId: string, state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary setCitationContactListFlag
     * @param {string} citationIdString citationIdString
     * @param {boolean} isDismissed isDismissed
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    setCitationContactListFlagUsingPOST(citationIdString: string, isDismissed: boolean, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary updateCitationAddress
     * @param {string} citationId citationId
     * @param {UpdateCitationAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    updateCitationAddressUsingPOST(citationId: string, request: UpdateCitationAddressRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateCitationPicture
     * @param {string} citationId citationId
     * @param {UpdateCitationPictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    updateCitationPictureUsingPUT(citationId: string, request: UpdateCitationPictureRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateCitation
     * @param {string} citationIdString citationIdString
     * @param {UpdateCitationRequest} updateCitationRequest updateCitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CitationControllerApi
     */
    updateCitationUsingPUT(citationIdString: string, updateCitationRequest: UpdateCitationRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ConfigurationControllerApi - axios parameter creator
 * @export
 */
export declare const ConfigurationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getAppConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAppConfigurationUsingGET: (options?: any) => Promise<RequestArgs>;
};
/**
 * ConfigurationControllerApi - functional programming interface
 * @export
 */
export declare const ConfigurationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getAppConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAppConfigurationUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAppConfigResponse>>;
};
/**
 * ConfigurationControllerApi - factory interface
 * @export
 */
export declare const ConfigurationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getAppConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAppConfigurationUsingGET(options?: any): AxiosPromise<GetAppConfigResponse>;
};
/**
 * ConfigurationControllerApi - object-oriented interface
 * @export
 * @class ConfigurationControllerApi
 * @extends {BaseAPI}
 */
export declare class ConfigurationControllerApi extends BaseAPI {
    /**
     *
     * @summary getAppConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigurationControllerApi
     */
    getAppConfigurationUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetAppConfigResponse, any>>;
}
/**
 * ConsoleListControllerApi - axios parameter creator
 * @export
 */
export declare const ConsoleListControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary findDisputes
     * @param {FindDisputesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findDisputesUsingPOST: (request: FindDisputesRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCasesWithCoverageObtained
     * @param {GenericAdminListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithCoverageObtainedUsingPOST: (request: GenericAdminListRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCasesWithMissingLawfirmPayouts
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithMissingLawfirmPayoutsUsingPOST: (request: object, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCasesWithOverduePayments
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithOverduePaymentsUsingPOST: (request: object, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCitationPhoneLeads
     * @param {GetCitationPhoneLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationPhoneLeadsUsingPOST: (request: GetCitationPhoneLeadsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCitationsWithMissingFields
     * @param {GetCitationsWithMissingFieldsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationsWithMissingFieldsUsingPOST: (request: GetCitationsWithMissingFieldsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getClientConfirmedUnpaidCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getClientConfirmedUnpaidCasesUsingPOST: (request: object, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getDeclinedCases
     * @param {GetDeclinedCasesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDeclinedCasesUsingPOST: (request: GetDeclinedCasesRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getInvalidCasesWithStripeCharge
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInvalidCasesWithStripeChargeUsingPOST: (request: object, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLostCasesWithTransferNotReversed
     * @param {GetLostCasesWithTransferNotReversedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLostCasesWithTransferNotReversedUsingPOST: (request: GetLostCasesWithTransferNotReversedRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getPendingCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPendingCasesUsingPOST: (request: object, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getPendingTicketReviews
     * @param {GetPendingTicketReviewsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPendingTicketReviewsUsingPOST: (request: GetPendingTicketReviewsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listLawfirmLeads
     * @param {GetLawfirmLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmLeadsUsingPOST: (request: GetLawfirmLeadsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listPotentialCustomers
     * @param {GetPotentialCustomersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listPotentialCustomersUsingPOST: (request: GetPotentialCustomersRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ConsoleListControllerApi - functional programming interface
 * @export
 */
export declare const ConsoleListControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary findDisputes
     * @param {FindDisputesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findDisputesUsingPOST(request: FindDisputesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindChargeDisputesResponse>>;
    /**
     *
     * @summary getCasesWithCoverageObtained
     * @param {GenericAdminListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithCoverageObtainedUsingPOST(request: GenericAdminListRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCasesWithCoverageObtainedResponse>>;
    /**
     *
     * @summary getCasesWithMissingLawfirmPayouts
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithMissingLawfirmPayoutsUsingPOST(request: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCasesWithMissingLawfirmPayoutsResponse>>;
    /**
     *
     * @summary getCasesWithOverduePayments
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithOverduePaymentsUsingPOST(request: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCasesWithOverduePaymentsResponse>>;
    /**
     *
     * @summary getCitationPhoneLeads
     * @param {GetCitationPhoneLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationPhoneLeadsUsingPOST(request: GetCitationPhoneLeadsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCitationPhoneLeadsResponse>>;
    /**
     *
     * @summary getCitationsWithMissingFields
     * @param {GetCitationsWithMissingFieldsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationsWithMissingFieldsUsingPOST(request: GetCitationsWithMissingFieldsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCitationsWithMissingFieldsResponse>>;
    /**
     *
     * @summary getClientConfirmedUnpaidCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getClientConfirmedUnpaidCasesUsingPOST(request: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClientConfirmedUnpaidCasesResponse>>;
    /**
     *
     * @summary getDeclinedCases
     * @param {GetDeclinedCasesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDeclinedCasesUsingPOST(request: GetDeclinedCasesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetDeclinedCasesResponse>>;
    /**
     *
     * @summary getInvalidCasesWithStripeCharge
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInvalidCasesWithStripeChargeUsingPOST(request: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetInvalidCasesWithStripeChargeResponse>>;
    /**
     *
     * @summary getLostCasesWithTransferNotReversed
     * @param {GetLostCasesWithTransferNotReversedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLostCasesWithTransferNotReversedUsingPOST(request: GetLostCasesWithTransferNotReversedRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLostCasesWithTransferNotReversedResponse>>;
    /**
     *
     * @summary getPendingCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPendingCasesUsingPOST(request: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPendingCasesResponse>>;
    /**
     *
     * @summary getPendingTicketReviews
     * @param {GetPendingTicketReviewsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPendingTicketReviewsUsingPOST(request: GetPendingTicketReviewsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPendingTicketReviewsResponse>>;
    /**
     *
     * @summary listLawfirmLeads
     * @param {GetLawfirmLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmLeadsUsingPOST(request: GetLawfirmLeadsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmLeadsResponse>>;
    /**
     *
     * @summary listPotentialCustomers
     * @param {GetPotentialCustomersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listPotentialCustomersUsingPOST(request: GetPotentialCustomersRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPotentialCustomersResponse>>;
};
/**
 * ConsoleListControllerApi - factory interface
 * @export
 */
export declare const ConsoleListControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary findDisputes
     * @param {FindDisputesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findDisputesUsingPOST(request: FindDisputesRequest, options?: any): AxiosPromise<FindChargeDisputesResponse>;
    /**
     *
     * @summary getCasesWithCoverageObtained
     * @param {GenericAdminListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithCoverageObtainedUsingPOST(request: GenericAdminListRequest, options?: any): AxiosPromise<GetCasesWithCoverageObtainedResponse>;
    /**
     *
     * @summary getCasesWithMissingLawfirmPayouts
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithMissingLawfirmPayoutsUsingPOST(request: object, options?: any): AxiosPromise<GetCasesWithMissingLawfirmPayoutsResponse>;
    /**
     *
     * @summary getCasesWithOverduePayments
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesWithOverduePaymentsUsingPOST(request: object, options?: any): AxiosPromise<GetCasesWithOverduePaymentsResponse>;
    /**
     *
     * @summary getCitationPhoneLeads
     * @param {GetCitationPhoneLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationPhoneLeadsUsingPOST(request: GetCitationPhoneLeadsRequest, options?: any): AxiosPromise<GetCitationPhoneLeadsResponse>;
    /**
     *
     * @summary getCitationsWithMissingFields
     * @param {GetCitationsWithMissingFieldsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCitationsWithMissingFieldsUsingPOST(request: GetCitationsWithMissingFieldsRequest, options?: any): AxiosPromise<GetCitationsWithMissingFieldsResponse>;
    /**
     *
     * @summary getClientConfirmedUnpaidCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getClientConfirmedUnpaidCasesUsingPOST(request: object, options?: any): AxiosPromise<GetClientConfirmedUnpaidCasesResponse>;
    /**
     *
     * @summary getDeclinedCases
     * @param {GetDeclinedCasesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDeclinedCasesUsingPOST(request: GetDeclinedCasesRequest, options?: any): AxiosPromise<GetDeclinedCasesResponse>;
    /**
     *
     * @summary getInvalidCasesWithStripeCharge
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInvalidCasesWithStripeChargeUsingPOST(request: object, options?: any): AxiosPromise<GetInvalidCasesWithStripeChargeResponse>;
    /**
     *
     * @summary getLostCasesWithTransferNotReversed
     * @param {GetLostCasesWithTransferNotReversedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLostCasesWithTransferNotReversedUsingPOST(request: GetLostCasesWithTransferNotReversedRequest, options?: any): AxiosPromise<GetLostCasesWithTransferNotReversedResponse>;
    /**
     *
     * @summary getPendingCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPendingCasesUsingPOST(request: object, options?: any): AxiosPromise<GetPendingCasesResponse>;
    /**
     *
     * @summary getPendingTicketReviews
     * @param {GetPendingTicketReviewsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPendingTicketReviewsUsingPOST(request: GetPendingTicketReviewsRequest, options?: any): AxiosPromise<GetPendingTicketReviewsResponse>;
    /**
     *
     * @summary listLawfirmLeads
     * @param {GetLawfirmLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmLeadsUsingPOST(request: GetLawfirmLeadsRequest, options?: any): AxiosPromise<GetLawfirmLeadsResponse>;
    /**
     *
     * @summary listPotentialCustomers
     * @param {GetPotentialCustomersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listPotentialCustomersUsingPOST(request: GetPotentialCustomersRequest, options?: any): AxiosPromise<GetPotentialCustomersResponse>;
};
/**
 * ConsoleListControllerApi - object-oriented interface
 * @export
 * @class ConsoleListControllerApi
 * @extends {BaseAPI}
 */
export declare class ConsoleListControllerApi extends BaseAPI {
    /**
     *
     * @summary findDisputes
     * @param {FindDisputesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    findDisputesUsingPOST(request: FindDisputesRequest, options?: any): Promise<import("axios").AxiosResponse<FindChargeDisputesResponse, any>>;
    /**
     *
     * @summary getCasesWithCoverageObtained
     * @param {GenericAdminListRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getCasesWithCoverageObtainedUsingPOST(request: GenericAdminListRequest, options?: any): Promise<import("axios").AxiosResponse<GetCasesWithCoverageObtainedResponse, any>>;
    /**
     *
     * @summary getCasesWithMissingLawfirmPayouts
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getCasesWithMissingLawfirmPayoutsUsingPOST(request: object, options?: any): Promise<import("axios").AxiosResponse<GetCasesWithMissingLawfirmPayoutsResponse, any>>;
    /**
     *
     * @summary getCasesWithOverduePayments
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getCasesWithOverduePaymentsUsingPOST(request: object, options?: any): Promise<import("axios").AxiosResponse<GetCasesWithOverduePaymentsResponse, any>>;
    /**
     *
     * @summary getCitationPhoneLeads
     * @param {GetCitationPhoneLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getCitationPhoneLeadsUsingPOST(request: GetCitationPhoneLeadsRequest, options?: any): Promise<import("axios").AxiosResponse<GetCitationPhoneLeadsResponse, any>>;
    /**
     *
     * @summary getCitationsWithMissingFields
     * @param {GetCitationsWithMissingFieldsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getCitationsWithMissingFieldsUsingPOST(request: GetCitationsWithMissingFieldsRequest, options?: any): Promise<import("axios").AxiosResponse<GetCitationsWithMissingFieldsResponse, any>>;
    /**
     *
     * @summary getClientConfirmedUnpaidCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getClientConfirmedUnpaidCasesUsingPOST(request: object, options?: any): Promise<import("axios").AxiosResponse<GetClientConfirmedUnpaidCasesResponse, any>>;
    /**
     *
     * @summary getDeclinedCases
     * @param {GetDeclinedCasesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getDeclinedCasesUsingPOST(request: GetDeclinedCasesRequest, options?: any): Promise<import("axios").AxiosResponse<GetDeclinedCasesResponse, any>>;
    /**
     *
     * @summary getInvalidCasesWithStripeCharge
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getInvalidCasesWithStripeChargeUsingPOST(request: object, options?: any): Promise<import("axios").AxiosResponse<GetInvalidCasesWithStripeChargeResponse, any>>;
    /**
     *
     * @summary getLostCasesWithTransferNotReversed
     * @param {GetLostCasesWithTransferNotReversedRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getLostCasesWithTransferNotReversedUsingPOST(request: GetLostCasesWithTransferNotReversedRequest, options?: any): Promise<import("axios").AxiosResponse<GetLostCasesWithTransferNotReversedResponse, any>>;
    /**
     *
     * @summary getPendingCases
     * @param {object} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getPendingCasesUsingPOST(request: object, options?: any): Promise<import("axios").AxiosResponse<GetPendingCasesResponse, any>>;
    /**
     *
     * @summary getPendingTicketReviews
     * @param {GetPendingTicketReviewsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    getPendingTicketReviewsUsingPOST(request: GetPendingTicketReviewsRequest, options?: any): Promise<import("axios").AxiosResponse<GetPendingTicketReviewsResponse, any>>;
    /**
     *
     * @summary listLawfirmLeads
     * @param {GetLawfirmLeadsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    listLawfirmLeadsUsingPOST(request: GetLawfirmLeadsRequest, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmLeadsResponse, any>>;
    /**
     *
     * @summary listPotentialCustomers
     * @param {GetPotentialCustomersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleListControllerApi
     */
    listPotentialCustomersUsingPOST(request: GetPotentialCustomersRequest, options?: any): Promise<import("axios").AxiosResponse<GetPotentialCustomersResponse, any>>;
}
/**
 * ContactTimelineControllerApi - axios parameter creator
 * @export
 */
export declare const ContactTimelineControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary listContactTimeline
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listContactTimelineUsingGET: (userId: number, options?: any) => Promise<RequestArgs>;
};
/**
 * ContactTimelineControllerApi - functional programming interface
 * @export
 */
export declare const ContactTimelineControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary listContactTimeline
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listContactTimelineUsingGET(userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListContactTimelineResponse>>;
};
/**
 * ContactTimelineControllerApi - factory interface
 * @export
 */
export declare const ContactTimelineControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary listContactTimeline
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listContactTimelineUsingGET(userId: number, options?: any): AxiosPromise<ListContactTimelineResponse>;
};
/**
 * ContactTimelineControllerApi - object-oriented interface
 * @export
 * @class ContactTimelineControllerApi
 * @extends {BaseAPI}
 */
export declare class ContactTimelineControllerApi extends BaseAPI {
    /**
     *
     * @summary listContactTimeline
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactTimelineControllerApi
     */
    listContactTimelineUsingGET(userId: number, options?: any): Promise<import("axios").AxiosResponse<ListContactTimelineResponse, any>>;
}
/**
 * ConversationControllerApi - axios parameter creator
 * @export
 */
export declare const ConversationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addMessageToConversation
     * @param {string} caseId caseId
     * @param {AddNewCaseMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addMessageToConversationUsingPOST: (caseId: string, request: AddNewCaseMessageRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary editMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {EditConversationMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMessageUsingPUT: (caseId: string, messageId: number, request: EditConversationMessageRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getConversation
     * @param {string} caseId caseId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConversationUsingGET: (caseId: string, length?: number, page?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMessageUsingGET: (caseId: string, messageId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markMessageAsDeleted
     * @param {string} caseId caseId
     * @param {boolean} isDeleted isDeleted
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markMessageAsDeletedUsingPUT: (caseId: string, isDeleted: boolean, messageId: number, options?: any) => Promise<RequestArgs>;
};
/**
 * ConversationControllerApi - functional programming interface
 * @export
 */
export declare const ConversationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addMessageToConversation
     * @param {string} caseId caseId
     * @param {AddNewCaseMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addMessageToConversationUsingPOST(caseId: string, request: AddNewCaseMessageRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddCaseMessageResponse>>;
    /**
     *
     * @summary editMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {EditConversationMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMessageUsingPUT(caseId: string, messageId: number, request: EditConversationMessageRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getConversation
     * @param {string} caseId caseId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConversationUsingGET(caseId: string, length?: number, page?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseMessagesResponse>>;
    /**
     *
     * @summary getMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMessageUsingGET(caseId: string, messageId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseMessagesResponse>>;
    /**
     *
     * @summary markMessageAsDeleted
     * @param {string} caseId caseId
     * @param {boolean} isDeleted isDeleted
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markMessageAsDeletedUsingPUT(caseId: string, isDeleted: boolean, messageId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * ConversationControllerApi - factory interface
 * @export
 */
export declare const ConversationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addMessageToConversation
     * @param {string} caseId caseId
     * @param {AddNewCaseMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addMessageToConversationUsingPOST(caseId: string, request: AddNewCaseMessageRequest, options?: any): AxiosPromise<AddCaseMessageResponse>;
    /**
     *
     * @summary editMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {EditConversationMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMessageUsingPUT(caseId: string, messageId: number, request: EditConversationMessageRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getConversation
     * @param {string} caseId caseId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConversationUsingGET(caseId: string, length?: number, page?: number, options?: any): AxiosPromise<GetCaseMessagesResponse>;
    /**
     *
     * @summary getMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMessageUsingGET(caseId: string, messageId: number, options?: any): AxiosPromise<GetCaseMessagesResponse>;
    /**
     *
     * @summary markMessageAsDeleted
     * @param {string} caseId caseId
     * @param {boolean} isDeleted isDeleted
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markMessageAsDeletedUsingPUT(caseId: string, isDeleted: boolean, messageId: number, options?: any): AxiosPromise<object>;
};
/**
 * ConversationControllerApi - object-oriented interface
 * @export
 * @class ConversationControllerApi
 * @extends {BaseAPI}
 */
export declare class ConversationControllerApi extends BaseAPI {
    /**
     *
     * @summary addMessageToConversation
     * @param {string} caseId caseId
     * @param {AddNewCaseMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConversationControllerApi
     */
    addMessageToConversationUsingPOST(caseId: string, request: AddNewCaseMessageRequest, options?: any): Promise<import("axios").AxiosResponse<AddCaseMessageResponse, any>>;
    /**
     *
     * @summary editMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {EditConversationMessageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConversationControllerApi
     */
    editMessageUsingPUT(caseId: string, messageId: number, request: EditConversationMessageRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getConversation
     * @param {string} caseId caseId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConversationControllerApi
     */
    getConversationUsingGET(caseId: string, length?: number, page?: number, options?: any): Promise<import("axios").AxiosResponse<GetCaseMessagesResponse, any>>;
    /**
     *
     * @summary getMessage
     * @param {string} caseId caseId
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConversationControllerApi
     */
    getMessageUsingGET(caseId: string, messageId: number, options?: any): Promise<import("axios").AxiosResponse<GetCaseMessagesResponse, any>>;
    /**
     *
     * @summary markMessageAsDeleted
     * @param {string} caseId caseId
     * @param {boolean} isDeleted isDeleted
     * @param {number} messageId messageId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConversationControllerApi
     */
    markMessageAsDeletedUsingPUT(caseId: string, isDeleted: boolean, messageId: number, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * CountyControllerApi - axios parameter creator
 * @export
 */
export declare const CountyControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCounties
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountiesUsingGET: (state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any) => Promise<RequestArgs>;
};
/**
 * CountyControllerApi - functional programming interface
 * @export
 */
export declare const CountyControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCounties
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountiesUsingGET(state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCountiesResponse>>;
};
/**
 * CountyControllerApi - factory interface
 * @export
 */
export declare const CountyControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCounties
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountiesUsingGET(state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): AxiosPromise<GetCountiesResponse>;
};
/**
 * CountyControllerApi - object-oriented interface
 * @export
 * @class CountyControllerApi
 * @extends {BaseAPI}
 */
export declare class CountyControllerApi extends BaseAPI {
    /**
     *
     * @summary getCounties
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} state state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountyControllerApi
     */
    getCountiesUsingGET(state: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<import("axios").AxiosResponse<GetCountiesResponse, any>>;
}
/**
 * CourtControllerApi - axios parameter creator
 * @export
 */
export declare const CourtControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addCourt
     * @param {AddCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCourtUsingPOST: (request: AddCourtRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary findCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCourtsUsingGET: (citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary findCourtsWithNoCoverage
     * @param {string} [countryCode] countryCode
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCourtsWithNoCoverageUsingGET: (countryCode?: string, countyId?: number, regionCode?: string, trailingDays?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCourt
     * @param {number} courtId courtId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtUsingGET: (courtId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary searchCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchCourtsUsingGET: (citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCourtAddress
     * @param {number} addressId addressId
     * @param {number} courtId courtId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCourtAddressUsingPUT: (addressId: number, courtId: number, request: UpsertAddressRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCourt
     * @param {number} courtId courtId
     * @param {UpdateCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCourtUsingPUT: (courtId: number, request: UpdateCourtRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CourtControllerApi - functional programming interface
 * @export
 */
export declare const CourtControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addCourt
     * @param {AddCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCourtUsingPOST(request: AddCourtRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary findCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCourtsUsingGET(citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindsCourtsResponse>>;
    /**
     *
     * @summary findCourtsWithNoCoverage
     * @param {string} [countryCode] countryCode
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCourtsWithNoCoverageUsingGET(countryCode?: string, countyId?: number, regionCode?: string, trailingDays?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindCourtsWithNoCoverageResponse>>;
    /**
     *
     * @summary getCourt
     * @param {number} courtId courtId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtUsingGET(courtId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCourtResponse>>;
    /**
     *
     * @summary searchCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchCourtsUsingGET(citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCourtsByQueryResponse>>;
    /**
     *
     * @summary updateCourtAddress
     * @param {number} addressId addressId
     * @param {number} courtId courtId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCourtAddressUsingPUT(addressId: number, courtId: number, request: UpsertAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateCourt
     * @param {number} courtId courtId
     * @param {UpdateCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCourtUsingPUT(courtId: number, request: UpdateCourtRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CourtControllerApi - factory interface
 * @export
 */
export declare const CourtControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addCourt
     * @param {AddCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCourtUsingPOST(request: AddCourtRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary findCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCourtsUsingGET(citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): AxiosPromise<FindsCourtsResponse>;
    /**
     *
     * @summary findCourtsWithNoCoverage
     * @param {string} [countryCode] countryCode
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCourtsWithNoCoverageUsingGET(countryCode?: string, countyId?: number, regionCode?: string, trailingDays?: number, options?: any): AxiosPromise<FindCourtsWithNoCoverageResponse>;
    /**
     *
     * @summary getCourt
     * @param {number} courtId courtId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtUsingGET(courtId: number, options?: any): AxiosPromise<GetCourtResponse>;
    /**
     *
     * @summary searchCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    searchCourtsUsingGET(citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): AxiosPromise<GetCourtsByQueryResponse>;
    /**
     *
     * @summary updateCourtAddress
     * @param {number} addressId addressId
     * @param {number} courtId courtId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCourtAddressUsingPUT(addressId: number, courtId: number, request: UpsertAddressRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateCourt
     * @param {number} courtId courtId
     * @param {UpdateCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCourtUsingPUT(courtId: number, request: UpdateCourtRequest, options?: any): AxiosPromise<void>;
};
/**
 * CourtControllerApi - object-oriented interface
 * @export
 * @class CourtControllerApi
 * @extends {BaseAPI}
 */
export declare class CourtControllerApi extends BaseAPI {
    /**
     *
     * @summary addCourt
     * @param {AddCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    addCourtUsingPOST(request: AddCourtRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary findCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    findCourtsUsingGET(citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<import("axios").AxiosResponse<FindsCourtsResponse, any>>;
    /**
     *
     * @summary findCourtsWithNoCoverage
     * @param {string} [countryCode] countryCode
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {number} [trailingDays] trailingDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    findCourtsWithNoCoverageUsingGET(countryCode?: string, countyId?: number, regionCode?: string, trailingDays?: number, options?: any): Promise<import("axios").AxiosResponse<FindCourtsWithNoCoverageResponse, any>>;
    /**
     *
     * @summary getCourt
     * @param {number} courtId courtId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    getCourtUsingGET(courtId: number, options?: any): Promise<import("axios").AxiosResponse<GetCourtResponse, any>>;
    /**
     *
     * @summary searchCourts
     * @param {number} [citationId] citationId
     * @param {string} [city] city
     * @param {string} [countryCode] countryCode
     * @param {string} [county] county
     * @param {number} [length] length
     * @param {number} [offset] offset
     * @param {string} [q] q
     * @param {string} [regionCode] regionCode
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    searchCourtsUsingGET(citationId?: number, city?: string, countryCode?: string, county?: string, length?: number, offset?: number, q?: string, regionCode?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', options?: any): Promise<import("axios").AxiosResponse<GetCourtsByQueryResponse, any>>;
    /**
     *
     * @summary updateCourtAddress
     * @param {number} addressId addressId
     * @param {number} courtId courtId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    updateCourtAddressUsingPUT(addressId: number, courtId: number, request: UpsertAddressRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateCourt
     * @param {number} courtId courtId
     * @param {UpdateCourtRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourtControllerApi
     */
    updateCourtUsingPUT(courtId: number, request: UpdateCourtRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * CrmControllerApi - axios parameter creator
 * @export
 */
export declare const CrmControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary generateTemplate
     * @param {GenerateTemplateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateTemplateUsingPOST: (request: GenerateTemplateRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getOutgoingContacts
     * @param {string} recipientEmailAddress recipientEmailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOutgoingContactsUsingGET: (recipientEmailAddress: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getTemplates
     * @param {Array<string>} [category] category
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTemplatesUsingGET: (category?: Array<string>, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary replyToTicket
     * @param {number} ticketId ticketId
     * @param {ReplyToTicketRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replyToTicketUsingPOST: (ticketId: number, request: ReplyToTicketRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendConsolidatedEmailToUser
     * @param {SendConsolidatedEmailToUser} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendConsolidatedEmailToUserUsingPOST: (request: SendConsolidatedEmailToUser, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendEmailToUser
     * @param {SendEmailToUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendEmailToUserUsingPOST: (request: SendEmailToUserRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendEmailToUsers
     * @param {SendEmailToUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendEmailToUsersUsingPOST: (request: SendEmailToUsersRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CrmControllerApi - functional programming interface
 * @export
 */
export declare const CrmControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary generateTemplate
     * @param {GenerateTemplateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateTemplateUsingPOST(request: GenerateTemplateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetEmailTemplateResponse>>;
    /**
     *
     * @summary getOutgoingContacts
     * @param {string} recipientEmailAddress recipientEmailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOutgoingContactsUsingGET(recipientEmailAddress: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOutgoingContactsResponse>>;
    /**
     *
     * @summary getTemplates
     * @param {Array<string>} [category] category
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTemplatesUsingGET(category?: Array<string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    /**
     *
     * @summary replyToTicket
     * @param {number} ticketId ticketId
     * @param {ReplyToTicketRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replyToTicketUsingPOST(ticketId: number, request: ReplyToTicketRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary sendConsolidatedEmailToUser
     * @param {SendConsolidatedEmailToUser} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendConsolidatedEmailToUserUsingPOST(request: SendConsolidatedEmailToUser, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary sendEmailToUser
     * @param {SendEmailToUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendEmailToUserUsingPOST(request: SendEmailToUserRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary sendEmailToUsers
     * @param {SendEmailToUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendEmailToUsersUsingPOST(request: SendEmailToUsersRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CrmControllerApi - factory interface
 * @export
 */
export declare const CrmControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary generateTemplate
     * @param {GenerateTemplateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateTemplateUsingPOST(request: GenerateTemplateRequest, options?: any): AxiosPromise<GetEmailTemplateResponse>;
    /**
     *
     * @summary getOutgoingContacts
     * @param {string} recipientEmailAddress recipientEmailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOutgoingContactsUsingGET(recipientEmailAddress: string, options?: any): AxiosPromise<GetOutgoingContactsResponse>;
    /**
     *
     * @summary getTemplates
     * @param {Array<string>} [category] category
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTemplatesUsingGET(category?: Array<string>, options?: any): AxiosPromise<Array<string>>;
    /**
     *
     * @summary replyToTicket
     * @param {number} ticketId ticketId
     * @param {ReplyToTicketRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replyToTicketUsingPOST(ticketId: number, request: ReplyToTicketRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary sendConsolidatedEmailToUser
     * @param {SendConsolidatedEmailToUser} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendConsolidatedEmailToUserUsingPOST(request: SendConsolidatedEmailToUser, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary sendEmailToUser
     * @param {SendEmailToUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendEmailToUserUsingPOST(request: SendEmailToUserRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary sendEmailToUsers
     * @param {SendEmailToUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendEmailToUsersUsingPOST(request: SendEmailToUsersRequest, options?: any): AxiosPromise<void>;
};
/**
 * CrmControllerApi - object-oriented interface
 * @export
 * @class CrmControllerApi
 * @extends {BaseAPI}
 */
export declare class CrmControllerApi extends BaseAPI {
    /**
     *
     * @summary generateTemplate
     * @param {GenerateTemplateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    generateTemplateUsingPOST(request: GenerateTemplateRequest, options?: any): Promise<import("axios").AxiosResponse<GetEmailTemplateResponse, any>>;
    /**
     *
     * @summary getOutgoingContacts
     * @param {string} recipientEmailAddress recipientEmailAddress
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    getOutgoingContactsUsingGET(recipientEmailAddress: string, options?: any): Promise<import("axios").AxiosResponse<GetOutgoingContactsResponse, any>>;
    /**
     *
     * @summary getTemplates
     * @param {Array<string>} [category] category
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    getTemplatesUsingGET(category?: Array<string>, options?: any): Promise<import("axios").AxiosResponse<string[], any>>;
    /**
     *
     * @summary replyToTicket
     * @param {number} ticketId ticketId
     * @param {ReplyToTicketRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    replyToTicketUsingPOST(ticketId: number, request: ReplyToTicketRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary sendConsolidatedEmailToUser
     * @param {SendConsolidatedEmailToUser} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    sendConsolidatedEmailToUserUsingPOST(request: SendConsolidatedEmailToUser, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary sendEmailToUser
     * @param {SendEmailToUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    sendEmailToUserUsingPOST(request: SendEmailToUserRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary sendEmailToUsers
     * @param {SendEmailToUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CrmControllerApi
     */
    sendEmailToUsersUsingPOST(request: SendEmailToUsersRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * CustomerLeadControllerApi - axios parameter creator
 * @export
 */
export declare const CustomerLeadControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary postCustomerLead
     * @param {AddCustomerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postCustomerLeadUsingPOST: (request: AddCustomerLeadRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CustomerLeadControllerApi - functional programming interface
 * @export
 */
export declare const CustomerLeadControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary postCustomerLead
     * @param {AddCustomerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postCustomerLeadUsingPOST(request: AddCustomerLeadRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CustomerLeadControllerApi - factory interface
 * @export
 */
export declare const CustomerLeadControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary postCustomerLead
     * @param {AddCustomerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postCustomerLeadUsingPOST(request: AddCustomerLeadRequest, options?: any): AxiosPromise<void>;
};
/**
 * CustomerLeadControllerApi - object-oriented interface
 * @export
 * @class CustomerLeadControllerApi
 * @extends {BaseAPI}
 */
export declare class CustomerLeadControllerApi extends BaseAPI {
    /**
     *
     * @summary postCustomerLead
     * @param {AddCustomerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerLeadControllerApi
     */
    postCustomerLeadUsingPOST(request: AddCustomerLeadRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * CustomerReviewControllerApi - axios parameter creator
 * @export
 */
export declare const CustomerReviewControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addCustomerReview
     * @param {AddReviewRequest} addReviewRequest addReviewRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCustomerReviewUsingPOST: (addReviewRequest: AddReviewRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listCustomerReviews
     * @param {boolean} [includeAnonymous] includeAnonymous
     * @param {boolean} [includeRatings] includeRatings
     * @param {boolean} [isFeatured] isFeatured
     * @param {number} [lawfirmId] lawfirmId
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {Array<string>} [tags] tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomerReviewsUsingGET: (includeAnonymous?: boolean, includeRatings?: boolean, isFeatured?: boolean, lawfirmId?: number, limit?: number, nextPageToken?: string, previousPageToken?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', tags?: Array<string>, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listEligibleStatusesForReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEligibleStatusesForReviewUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markCommentWithVote
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {boolean} [like] like
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCommentWithVoteUsingPUT: (commentId: number, reviewId: number, like?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markReviewWithVote
     * @param {number} reviewId reviewId
     * @param {boolean} [helpful] helpful
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markReviewWithVoteUsingPUT: (reviewId: number, helpful?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary replyToCustomerReview
     * @param {number} reviewId reviewId
     * @param {ReplyToReviewRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replyToCustomerReviewUsingPOST: (reviewId: number, request: ReplyToReviewRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCommentForCustomerReview
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {UpdateReplyForCustomerReview} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCommentForCustomerReviewUsingPOST: (commentId: number, reviewId: number, request: UpdateReplyForCustomerReview, options?: any) => Promise<RequestArgs>;
};
/**
 * CustomerReviewControllerApi - functional programming interface
 * @export
 */
export declare const CustomerReviewControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addCustomerReview
     * @param {AddReviewRequest} addReviewRequest addReviewRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCustomerReviewUsingPOST(addReviewRequest: AddReviewRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary listCustomerReviews
     * @param {boolean} [includeAnonymous] includeAnonymous
     * @param {boolean} [includeRatings] includeRatings
     * @param {boolean} [isFeatured] isFeatured
     * @param {number} [lawfirmId] lawfirmId
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {Array<string>} [tags] tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomerReviewsUsingGET(includeAnonymous?: boolean, includeRatings?: boolean, isFeatured?: boolean, lawfirmId?: number, limit?: number, nextPageToken?: string, previousPageToken?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', tags?: Array<string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListReviewsResponse>>;
    /**
     *
     * @summary listEligibleStatusesForReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEligibleStatusesForReviewUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListEligibleStatusResponse>>;
    /**
     *
     * @summary markCommentWithVote
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {boolean} [like] like
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCommentWithVoteUsingPUT(commentId: number, reviewId: number, like?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary markReviewWithVote
     * @param {number} reviewId reviewId
     * @param {boolean} [helpful] helpful
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markReviewWithVoteUsingPUT(reviewId: number, helpful?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary replyToCustomerReview
     * @param {number} reviewId reviewId
     * @param {ReplyToReviewRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replyToCustomerReviewUsingPOST(reviewId: number, request: ReplyToReviewRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateCommentForCustomerReview
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {UpdateReplyForCustomerReview} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCommentForCustomerReviewUsingPOST(commentId: number, reviewId: number, request: UpdateReplyForCustomerReview, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CustomerReviewControllerApi - factory interface
 * @export
 */
export declare const CustomerReviewControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addCustomerReview
     * @param {AddReviewRequest} addReviewRequest addReviewRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCustomerReviewUsingPOST(addReviewRequest: AddReviewRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary listCustomerReviews
     * @param {boolean} [includeAnonymous] includeAnonymous
     * @param {boolean} [includeRatings] includeRatings
     * @param {boolean} [isFeatured] isFeatured
     * @param {number} [lawfirmId] lawfirmId
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {Array<string>} [tags] tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomerReviewsUsingGET(includeAnonymous?: boolean, includeRatings?: boolean, isFeatured?: boolean, lawfirmId?: number, limit?: number, nextPageToken?: string, previousPageToken?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', tags?: Array<string>, options?: any): AxiosPromise<ListReviewsResponse>;
    /**
     *
     * @summary listEligibleStatusesForReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEligibleStatusesForReviewUsingGET(options?: any): AxiosPromise<ListEligibleStatusResponse>;
    /**
     *
     * @summary markCommentWithVote
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {boolean} [like] like
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCommentWithVoteUsingPUT(commentId: number, reviewId: number, like?: boolean, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary markReviewWithVote
     * @param {number} reviewId reviewId
     * @param {boolean} [helpful] helpful
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markReviewWithVoteUsingPUT(reviewId: number, helpful?: boolean, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary replyToCustomerReview
     * @param {number} reviewId reviewId
     * @param {ReplyToReviewRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replyToCustomerReviewUsingPOST(reviewId: number, request: ReplyToReviewRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateCommentForCustomerReview
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {UpdateReplyForCustomerReview} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCommentForCustomerReviewUsingPOST(commentId: number, reviewId: number, request: UpdateReplyForCustomerReview, options?: any): AxiosPromise<void>;
};
/**
 * CustomerReviewControllerApi - object-oriented interface
 * @export
 * @class CustomerReviewControllerApi
 * @extends {BaseAPI}
 */
export declare class CustomerReviewControllerApi extends BaseAPI {
    /**
     *
     * @summary addCustomerReview
     * @param {AddReviewRequest} addReviewRequest addReviewRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    addCustomerReviewUsingPOST(addReviewRequest: AddReviewRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary listCustomerReviews
     * @param {boolean} [includeAnonymous] includeAnonymous
     * @param {boolean} [includeRatings] includeRatings
     * @param {boolean} [isFeatured] isFeatured
     * @param {number} [lawfirmId] lawfirmId
     * @param {number} [limit] limit
     * @param {string} [nextPageToken] nextPageToken
     * @param {string} [previousPageToken] previousPageToken
     * @param {'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'} [state] state
     * @param {Array<string>} [tags] tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    listCustomerReviewsUsingGET(includeAnonymous?: boolean, includeRatings?: boolean, isFeatured?: boolean, lawfirmId?: number, limit?: number, nextPageToken?: string, previousPageToken?: string, state?: 'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY', tags?: Array<string>, options?: any): Promise<import("axios").AxiosResponse<ListReviewsResponse, any>>;
    /**
     *
     * @summary listEligibleStatusesForReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    listEligibleStatusesForReviewUsingGET(options?: any): Promise<import("axios").AxiosResponse<ListEligibleStatusResponse, any>>;
    /**
     *
     * @summary markCommentWithVote
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {boolean} [like] like
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    markCommentWithVoteUsingPUT(commentId: number, reviewId: number, like?: boolean, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary markReviewWithVote
     * @param {number} reviewId reviewId
     * @param {boolean} [helpful] helpful
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    markReviewWithVoteUsingPUT(reviewId: number, helpful?: boolean, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary replyToCustomerReview
     * @param {number} reviewId reviewId
     * @param {ReplyToReviewRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    replyToCustomerReviewUsingPOST(reviewId: number, request: ReplyToReviewRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateCommentForCustomerReview
     * @param {number} commentId commentId
     * @param {number} reviewId reviewId
     * @param {UpdateReplyForCustomerReview} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerReviewControllerApi
     */
    updateCommentForCustomerReviewUsingPOST(commentId: number, reviewId: number, request: UpdateReplyForCustomerReview, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * DashboardControllerApi - axios parameter creator
 * @export
 */
export declare const DashboardControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getBookings
     * @param {GetBookingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBookingsUsingPOST: (request: GetBookingsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getRegisteredUsers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRegisteredUsersUsingPOST: (graphRequest: GraphRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getUserRegistrations
     * @param {GetUserRegistrationsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserRegistrationsUsingPOST: (request: GetUserRegistrationsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listCasesByStatus
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCasesByStatusUsingPOST: (graphRequest: GraphRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listCustomers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomersUsingPOST: (graphRequest: GraphRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listDropoffs
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDropoffsUsingPOST: (graphRequest: GraphRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listExpenses
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listExpensesUsingPOST: (graphRequest: GraphRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listLawyerLeads
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawyerLeadsUsingPOST: (graphRequest: GraphRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * DashboardControllerApi - functional programming interface
 * @export
 */
export declare const DashboardControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getBookings
     * @param {GetBookingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBookingsUsingPOST(request: GetBookingsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBookingsResponse>>;
    /**
     *
     * @summary getRegisteredUsers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRegisteredUsersUsingPOST(graphRequest: GraphRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SqlResponse>>;
    /**
     *
     * @summary getUserRegistrations
     * @param {GetUserRegistrationsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserRegistrationsUsingPOST(request: GetUserRegistrationsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserRegistrationsResponse>>;
    /**
     *
     * @summary listCasesByStatus
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCasesByStatusUsingPOST(graphRequest: GraphRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SqlResponse>>;
    /**
     *
     * @summary listCustomers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomersUsingPOST(graphRequest: GraphRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SqlResponse>>;
    /**
     *
     * @summary listDropoffs
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDropoffsUsingPOST(graphRequest: GraphRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SqlResponse>>;
    /**
     *
     * @summary listExpenses
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listExpensesUsingPOST(graphRequest: GraphRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SqlResponse>>;
    /**
     *
     * @summary listLawyerLeads
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawyerLeadsUsingPOST(graphRequest: GraphRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SqlResponse>>;
};
/**
 * DashboardControllerApi - factory interface
 * @export
 */
export declare const DashboardControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getBookings
     * @param {GetBookingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBookingsUsingPOST(request: GetBookingsRequest, options?: any): AxiosPromise<GetBookingsResponse>;
    /**
     *
     * @summary getRegisteredUsers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRegisteredUsersUsingPOST(graphRequest: GraphRequest, options?: any): AxiosPromise<SqlResponse>;
    /**
     *
     * @summary getUserRegistrations
     * @param {GetUserRegistrationsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserRegistrationsUsingPOST(request: GetUserRegistrationsRequest, options?: any): AxiosPromise<GetUserRegistrationsResponse>;
    /**
     *
     * @summary listCasesByStatus
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCasesByStatusUsingPOST(graphRequest: GraphRequest, options?: any): AxiosPromise<SqlResponse>;
    /**
     *
     * @summary listCustomers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomersUsingPOST(graphRequest: GraphRequest, options?: any): AxiosPromise<SqlResponse>;
    /**
     *
     * @summary listDropoffs
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDropoffsUsingPOST(graphRequest: GraphRequest, options?: any): AxiosPromise<SqlResponse>;
    /**
     *
     * @summary listExpenses
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listExpensesUsingPOST(graphRequest: GraphRequest, options?: any): AxiosPromise<SqlResponse>;
    /**
     *
     * @summary listLawyerLeads
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawyerLeadsUsingPOST(graphRequest: GraphRequest, options?: any): AxiosPromise<SqlResponse>;
};
/**
 * DashboardControllerApi - object-oriented interface
 * @export
 * @class DashboardControllerApi
 * @extends {BaseAPI}
 */
export declare class DashboardControllerApi extends BaseAPI {
    /**
     *
     * @summary getBookings
     * @param {GetBookingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    getBookingsUsingPOST(request: GetBookingsRequest, options?: any): Promise<import("axios").AxiosResponse<GetBookingsResponse, any>>;
    /**
     *
     * @summary getRegisteredUsers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    getRegisteredUsersUsingPOST(graphRequest: GraphRequest, options?: any): Promise<import("axios").AxiosResponse<SqlResponse, any>>;
    /**
     *
     * @summary getUserRegistrations
     * @param {GetUserRegistrationsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    getUserRegistrationsUsingPOST(request: GetUserRegistrationsRequest, options?: any): Promise<import("axios").AxiosResponse<GetUserRegistrationsResponse, any>>;
    /**
     *
     * @summary listCasesByStatus
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    listCasesByStatusUsingPOST(graphRequest: GraphRequest, options?: any): Promise<import("axios").AxiosResponse<SqlResponse, any>>;
    /**
     *
     * @summary listCustomers
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    listCustomersUsingPOST(graphRequest: GraphRequest, options?: any): Promise<import("axios").AxiosResponse<SqlResponse, any>>;
    /**
     *
     * @summary listDropoffs
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    listDropoffsUsingPOST(graphRequest: GraphRequest, options?: any): Promise<import("axios").AxiosResponse<SqlResponse, any>>;
    /**
     *
     * @summary listExpenses
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    listExpensesUsingPOST(graphRequest: GraphRequest, options?: any): Promise<import("axios").AxiosResponse<SqlResponse, any>>;
    /**
     *
     * @summary listLawyerLeads
     * @param {GraphRequest} graphRequest graphRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardControllerApi
     */
    listLawyerLeadsUsingPOST(graphRequest: GraphRequest, options?: any): Promise<import("axios").AxiosResponse<SqlResponse, any>>;
}
/**
 * DirectMailControllerApi - axios parameter creator
 * @export
 */
export declare const DirectMailControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addDirectMailTemplate
     * @param {DirectMailTemplateToAdd} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addDirectMailTemplateUsingPOST: (request: DirectMailTemplateToAdd, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getDirectMailTemplates
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDirectMailTemplatesUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getSentMail
     * @param {DirectMailGetRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSentMailUsingPOST: (request: DirectMailGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary handleLobEvent
     * @param {LobEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleLobEventUsingPOST: (request: LobEventRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendDirectMail
     * @param {DirectMailSendRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendDirectMailUsingPOST: (request: DirectMailSendRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendDirectReferralCheck
     * @param {number} userId userId
     * @param {SendDirectReferralCheckRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendDirectReferralCheckUsingPOST: (userId: number, request: SendDirectReferralCheckRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary validateDirectMailRequestForSend
     * @param {ValidateDirectMailRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateDirectMailRequestForSendUsingPOST: (request: ValidateDirectMailRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary verifyMailingAddress
     * @param {VerifyMailingAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyMailingAddressUsingPOST: (request: VerifyMailingAddressRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * DirectMailControllerApi - functional programming interface
 * @export
 */
export declare const DirectMailControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addDirectMailTemplate
     * @param {DirectMailTemplateToAdd} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addDirectMailTemplateUsingPOST(request: DirectMailTemplateToAdd, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary getDirectMailTemplates
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDirectMailTemplatesUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DirectMailTemplateResponse>>;
    /**
     *
     * @summary getSentMail
     * @param {DirectMailGetRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSentMailUsingPOST(request: DirectMailGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DirectMailContactResponse>>;
    /**
     *
     * @summary handleLobEvent
     * @param {LobEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleLobEventUsingPOST(request: LobEventRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary sendDirectMail
     * @param {DirectMailSendRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendDirectMailUsingPOST(request: DirectMailSendRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SendDirectMailResponse>>;
    /**
     *
     * @summary sendDirectReferralCheck
     * @param {number} userId userId
     * @param {SendDirectReferralCheckRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendDirectReferralCheckUsingPOST(userId: number, request: SendDirectReferralCheckRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SendDirectCheckResponse>>;
    /**
     *
     * @summary validateDirectMailRequestForSend
     * @param {ValidateDirectMailRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateDirectMailRequestForSendUsingPOST(request: ValidateDirectMailRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ValidateDirectMailResponse>>;
    /**
     *
     * @summary verifyMailingAddress
     * @param {VerifyMailingAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyMailingAddressUsingPOST(request: VerifyMailingAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyMailingAddressResponse>>;
};
/**
 * DirectMailControllerApi - factory interface
 * @export
 */
export declare const DirectMailControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addDirectMailTemplate
     * @param {DirectMailTemplateToAdd} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addDirectMailTemplateUsingPOST(request: DirectMailTemplateToAdd, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary getDirectMailTemplates
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDirectMailTemplatesUsingGET(options?: any): AxiosPromise<DirectMailTemplateResponse>;
    /**
     *
     * @summary getSentMail
     * @param {DirectMailGetRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSentMailUsingPOST(request: DirectMailGetRequest, options?: any): AxiosPromise<DirectMailContactResponse>;
    /**
     *
     * @summary handleLobEvent
     * @param {LobEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleLobEventUsingPOST(request: LobEventRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary sendDirectMail
     * @param {DirectMailSendRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendDirectMailUsingPOST(request: DirectMailSendRequest, options?: any): AxiosPromise<SendDirectMailResponse>;
    /**
     *
     * @summary sendDirectReferralCheck
     * @param {number} userId userId
     * @param {SendDirectReferralCheckRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendDirectReferralCheckUsingPOST(userId: number, request: SendDirectReferralCheckRequest, options?: any): AxiosPromise<SendDirectCheckResponse>;
    /**
     *
     * @summary validateDirectMailRequestForSend
     * @param {ValidateDirectMailRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateDirectMailRequestForSendUsingPOST(request: ValidateDirectMailRequest, options?: any): AxiosPromise<ValidateDirectMailResponse>;
    /**
     *
     * @summary verifyMailingAddress
     * @param {VerifyMailingAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyMailingAddressUsingPOST(request: VerifyMailingAddressRequest, options?: any): AxiosPromise<VerifyMailingAddressResponse>;
};
/**
 * DirectMailControllerApi - object-oriented interface
 * @export
 * @class DirectMailControllerApi
 * @extends {BaseAPI}
 */
export declare class DirectMailControllerApi extends BaseAPI {
    /**
     *
     * @summary addDirectMailTemplate
     * @param {DirectMailTemplateToAdd} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    addDirectMailTemplateUsingPOST(request: DirectMailTemplateToAdd, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary getDirectMailTemplates
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    getDirectMailTemplatesUsingGET(options?: any): Promise<import("axios").AxiosResponse<DirectMailTemplateResponse, any>>;
    /**
     *
     * @summary getSentMail
     * @param {DirectMailGetRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    getSentMailUsingPOST(request: DirectMailGetRequest, options?: any): Promise<import("axios").AxiosResponse<DirectMailContactResponse, any>>;
    /**
     *
     * @summary handleLobEvent
     * @param {LobEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    handleLobEventUsingPOST(request: LobEventRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary sendDirectMail
     * @param {DirectMailSendRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    sendDirectMailUsingPOST(request: DirectMailSendRequest, options?: any): Promise<import("axios").AxiosResponse<SendDirectMailResponse, any>>;
    /**
     *
     * @summary sendDirectReferralCheck
     * @param {number} userId userId
     * @param {SendDirectReferralCheckRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    sendDirectReferralCheckUsingPOST(userId: number, request: SendDirectReferralCheckRequest, options?: any): Promise<import("axios").AxiosResponse<SendDirectCheckResponse, any>>;
    /**
     *
     * @summary validateDirectMailRequestForSend
     * @param {ValidateDirectMailRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    validateDirectMailRequestForSendUsingPOST(request: ValidateDirectMailRequest, options?: any): Promise<import("axios").AxiosResponse<ValidateDirectMailResponse, any>>;
    /**
     *
     * @summary verifyMailingAddress
     * @param {VerifyMailingAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectMailControllerApi
     */
    verifyMailingAddressUsingPOST(request: VerifyMailingAddressRequest, options?: any): Promise<import("axios").AxiosResponse<VerifyMailingAddressResponse, any>>;
}
/**
 * DripControllerApi - axios parameter creator
 * @export
 */
export declare const DripControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary removeFromDrip
     * @param {DripRemoveRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFromDripUsingDELETE: (request: DripRemoveRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * DripControllerApi - functional programming interface
 * @export
 */
export declare const DripControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary removeFromDrip
     * @param {DripRemoveRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFromDripUsingDELETE(request: DripRemoveRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * DripControllerApi - factory interface
 * @export
 */
export declare const DripControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary removeFromDrip
     * @param {DripRemoveRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFromDripUsingDELETE(request: DripRemoveRequest, options?: any): AxiosPromise<void>;
};
/**
 * DripControllerApi - object-oriented interface
 * @export
 * @class DripControllerApi
 * @extends {BaseAPI}
 */
export declare class DripControllerApi extends BaseAPI {
    /**
     *
     * @summary removeFromDrip
     * @param {DripRemoveRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DripControllerApi
     */
    removeFromDripUsingDELETE(request: DripRemoveRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * DripWebhooksControllerApi - axios parameter creator
 * @export
 */
export declare const DripWebhooksControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary handleBounceOrComplaintEvent
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleBounceOrComplaintEventUsingPOST: (request: DripWebhookEvent, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary handleDripWebhook
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleDripWebhookUsingPOST: (request: DripWebhookEvent, options?: any) => Promise<RequestArgs>;
};
/**
 * DripWebhooksControllerApi - functional programming interface
 * @export
 */
export declare const DripWebhooksControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary handleBounceOrComplaintEvent
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleBounceOrComplaintEventUsingPOST(request: DripWebhookEvent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary handleDripWebhook
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleDripWebhookUsingPOST(request: DripWebhookEvent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * DripWebhooksControllerApi - factory interface
 * @export
 */
export declare const DripWebhooksControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary handleBounceOrComplaintEvent
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleBounceOrComplaintEventUsingPOST(request: DripWebhookEvent, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary handleDripWebhook
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleDripWebhookUsingPOST(request: DripWebhookEvent, options?: any): AxiosPromise<object>;
};
/**
 * DripWebhooksControllerApi - object-oriented interface
 * @export
 * @class DripWebhooksControllerApi
 * @extends {BaseAPI}
 */
export declare class DripWebhooksControllerApi extends BaseAPI {
    /**
     *
     * @summary handleBounceOrComplaintEvent
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DripWebhooksControllerApi
     */
    handleBounceOrComplaintEventUsingPOST(request: DripWebhookEvent, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary handleDripWebhook
     * @param {DripWebhookEvent} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DripWebhooksControllerApi
     */
    handleDripWebhookUsingPOST(request: DripWebhookEvent, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * EmailSubscriptionControllerApi - axios parameter creator
 * @export
 */
export declare const EmailSubscriptionControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary subscribe
     * @param {SubscribeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subscribeUsingPOST: (request: SubscribeRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * EmailSubscriptionControllerApi - functional programming interface
 * @export
 */
export declare const EmailSubscriptionControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary subscribe
     * @param {SubscribeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subscribeUsingPOST(request: SubscribeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * EmailSubscriptionControllerApi - factory interface
 * @export
 */
export declare const EmailSubscriptionControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary subscribe
     * @param {SubscribeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subscribeUsingPOST(request: SubscribeRequest, options?: any): AxiosPromise<object>;
};
/**
 * EmailSubscriptionControllerApi - object-oriented interface
 * @export
 * @class EmailSubscriptionControllerApi
 * @extends {BaseAPI}
 */
export declare class EmailSubscriptionControllerApi extends BaseAPI {
    /**
     *
     * @summary subscribe
     * @param {SubscribeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailSubscriptionControllerApi
     */
    subscribeUsingPOST(request: SubscribeRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * FeedbackControllerApi - axios parameter creator
 * @export
 */
export declare const FeedbackControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary postFeedback
     * @param {PostFeedbackRequest} request request
     * @param {boolean} [isReview] isReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postFeedbackUsingPOST: (request: PostFeedbackRequest, isReview?: boolean, options?: any) => Promise<RequestArgs>;
};
/**
 * FeedbackControllerApi - functional programming interface
 * @export
 */
export declare const FeedbackControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary postFeedback
     * @param {PostFeedbackRequest} request request
     * @param {boolean} [isReview] isReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postFeedbackUsingPOST(request: PostFeedbackRequest, isReview?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * FeedbackControllerApi - factory interface
 * @export
 */
export declare const FeedbackControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary postFeedback
     * @param {PostFeedbackRequest} request request
     * @param {boolean} [isReview] isReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postFeedbackUsingPOST(request: PostFeedbackRequest, isReview?: boolean, options?: any): AxiosPromise<object>;
};
/**
 * FeedbackControllerApi - object-oriented interface
 * @export
 * @class FeedbackControllerApi
 * @extends {BaseAPI}
 */
export declare class FeedbackControllerApi extends BaseAPI {
    /**
     *
     * @summary postFeedback
     * @param {PostFeedbackRequest} request request
     * @param {boolean} [isReview] isReview
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeedbackControllerApi
     */
    postFeedbackUsingPOST(request: PostFeedbackRequest, isReview?: boolean, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * FreshcallerControllerApi - axios parameter creator
 * @export
 */
export declare const FreshcallerControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary signRecordingUrl
     * @param {SignRecordingUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signRecordingUrlUsingPOST: (request: SignRecordingUrlRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * FreshcallerControllerApi - functional programming interface
 * @export
 */
export declare const FreshcallerControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary signRecordingUrl
     * @param {SignRecordingUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signRecordingUrlUsingPOST(request: SignRecordingUrlRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SignRecordingUrlResponse>>;
};
/**
 * FreshcallerControllerApi - factory interface
 * @export
 */
export declare const FreshcallerControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary signRecordingUrl
     * @param {SignRecordingUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signRecordingUrlUsingPOST(request: SignRecordingUrlRequest, options?: any): AxiosPromise<SignRecordingUrlResponse>;
};
/**
 * FreshcallerControllerApi - object-oriented interface
 * @export
 * @class FreshcallerControllerApi
 * @extends {BaseAPI}
 */
export declare class FreshcallerControllerApi extends BaseAPI {
    /**
     *
     * @summary signRecordingUrl
     * @param {SignRecordingUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FreshcallerControllerApi
     */
    signRecordingUrlUsingPOST(request: SignRecordingUrlRequest, options?: any): Promise<import("axios").AxiosResponse<SignRecordingUrlResponse, any>>;
}
/**
 * FreshdeskTicketControllerApi - axios parameter creator
 * @export
 */
export declare const FreshdeskTicketControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary mergeTicket
     * @param {number} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeTicketUsingPOST: (ticketId: number, request: FreshdeskWebhookRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary ticketStatusChangeHook
     * @param {string} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ticketStatusChangeHookUsingPUT: (ticketId: string, request: FreshdeskWebhookRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateFreshdeskTicket
     * @param {number} ticketId ticketId
     * @param {FreshDeskTicketReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateFreshdeskTicketUsingPUT: (ticketId: number, request: FreshDeskTicketReq, options?: any) => Promise<RequestArgs>;
};
/**
 * FreshdeskTicketControllerApi - functional programming interface
 * @export
 */
export declare const FreshdeskTicketControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary mergeTicket
     * @param {number} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeTicketUsingPOST(ticketId: number, request: FreshdeskWebhookRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MergeTicketResponse>>;
    /**
     *
     * @summary ticketStatusChangeHook
     * @param {string} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ticketStatusChangeHookUsingPUT(ticketId: string, request: FreshdeskWebhookRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateFreshdeskTicket
     * @param {number} ticketId ticketId
     * @param {FreshDeskTicketReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateFreshdeskTicketUsingPUT(ticketId: number, request: FreshDeskTicketReq, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FreshDeskTicketRes>>;
};
/**
 * FreshdeskTicketControllerApi - factory interface
 * @export
 */
export declare const FreshdeskTicketControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary mergeTicket
     * @param {number} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeTicketUsingPOST(ticketId: number, request: FreshdeskWebhookRequest, options?: any): AxiosPromise<MergeTicketResponse>;
    /**
     *
     * @summary ticketStatusChangeHook
     * @param {string} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ticketStatusChangeHookUsingPUT(ticketId: string, request: FreshdeskWebhookRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateFreshdeskTicket
     * @param {number} ticketId ticketId
     * @param {FreshDeskTicketReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateFreshdeskTicketUsingPUT(ticketId: number, request: FreshDeskTicketReq, options?: any): AxiosPromise<FreshDeskTicketRes>;
};
/**
 * FreshdeskTicketControllerApi - object-oriented interface
 * @export
 * @class FreshdeskTicketControllerApi
 * @extends {BaseAPI}
 */
export declare class FreshdeskTicketControllerApi extends BaseAPI {
    /**
     *
     * @summary mergeTicket
     * @param {number} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FreshdeskTicketControllerApi
     */
    mergeTicketUsingPOST(ticketId: number, request: FreshdeskWebhookRequest, options?: any): Promise<import("axios").AxiosResponse<MergeTicketResponse, any>>;
    /**
     *
     * @summary ticketStatusChangeHook
     * @param {string} ticketId ticketId
     * @param {FreshdeskWebhookRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FreshdeskTicketControllerApi
     */
    ticketStatusChangeHookUsingPUT(ticketId: string, request: FreshdeskWebhookRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateFreshdeskTicket
     * @param {number} ticketId ticketId
     * @param {FreshDeskTicketReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FreshdeskTicketControllerApi
     */
    updateFreshdeskTicketUsingPUT(ticketId: number, request: FreshDeskTicketReq, options?: any): Promise<import("axios").AxiosResponse<FreshDeskTicketRes, any>>;
}
/**
 * GetCaseControllerApi - axios parameter creator
 * @export
 */
export declare const GetCaseControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCaseClient
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseClientUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCaseFromCitation
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseFromCitationUsingGET: (citationId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * GetCaseControllerApi - functional programming interface
 * @export
 */
export declare const GetCaseControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCaseClient
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseClientUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserResponse>>;
    /**
     *
     * @summary getCaseFromCitation
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseFromCitationUsingGET(citationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseFromCitationResponse>>;
    /**
     *
     * @summary getCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseResponse>>;
};
/**
 * GetCaseControllerApi - factory interface
 * @export
 */
export declare const GetCaseControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCaseClient
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseClientUsingGET(caseId: string, options?: any): AxiosPromise<GetUserResponse>;
    /**
     *
     * @summary getCaseFromCitation
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseFromCitationUsingGET(citationId: string, options?: any): AxiosPromise<GetCaseFromCitationResponse>;
    /**
     *
     * @summary getCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCaseUsingGET(caseId: string, options?: any): AxiosPromise<GetCaseResponse>;
};
/**
 * GetCaseControllerApi - object-oriented interface
 * @export
 * @class GetCaseControllerApi
 * @extends {BaseAPI}
 */
export declare class GetCaseControllerApi extends BaseAPI {
    /**
     *
     * @summary getCaseClient
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetCaseControllerApi
     */
    getCaseClientUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetUserResponse, any>>;
    /**
     *
     * @summary getCaseFromCitation
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetCaseControllerApi
     */
    getCaseFromCitationUsingGET(citationId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseFromCitationResponse, any>>;
    /**
     *
     * @summary getCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetCaseControllerApi
     */
    getCaseUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseResponse, any>>;
}
/**
 * HouseholdMateControllerApi - axios parameter creator
 * @export
 */
export declare const HouseholdMateControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary acceptHouseholdInvite
     * @param {string} email email
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    acceptHouseholdInviteUsingPUT: (email: string, token: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary cancelHouseholdMateInvite
     * @param {string} inviteeEmail inviteeEmail
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelHouseholdMateInviteUsingDELETE: (inviteeEmail: string, userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getHouseholdMates
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHouseholdMatesUsingGET: (userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary inviteHouseholdMate
     * @param {number} userId userId
     * @param {InviteHouseholdMateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    inviteHouseholdMateUsingPOST: (userId: number, request: InviteHouseholdMateRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * HouseholdMateControllerApi - functional programming interface
 * @export
 */
export declare const HouseholdMateControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary acceptHouseholdInvite
     * @param {string} email email
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    acceptHouseholdInviteUsingPUT(email: string, token: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary cancelHouseholdMateInvite
     * @param {string} inviteeEmail inviteeEmail
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelHouseholdMateInviteUsingDELETE(inviteeEmail: string, userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary getHouseholdMates
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHouseholdMatesUsingGET(userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetHouseholdMatesResponse>>;
    /**
     *
     * @summary inviteHouseholdMate
     * @param {number} userId userId
     * @param {InviteHouseholdMateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    inviteHouseholdMateUsingPOST(userId: number, request: InviteHouseholdMateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * HouseholdMateControllerApi - factory interface
 * @export
 */
export declare const HouseholdMateControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary acceptHouseholdInvite
     * @param {string} email email
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    acceptHouseholdInviteUsingPUT(email: string, token: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary cancelHouseholdMateInvite
     * @param {string} inviteeEmail inviteeEmail
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelHouseholdMateInviteUsingDELETE(inviteeEmail: string, userId: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary getHouseholdMates
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getHouseholdMatesUsingGET(userId: string, options?: any): AxiosPromise<GetHouseholdMatesResponse>;
    /**
     *
     * @summary inviteHouseholdMate
     * @param {number} userId userId
     * @param {InviteHouseholdMateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    inviteHouseholdMateUsingPOST(userId: number, request: InviteHouseholdMateRequest, options?: any): AxiosPromise<void>;
};
/**
 * HouseholdMateControllerApi - object-oriented interface
 * @export
 * @class HouseholdMateControllerApi
 * @extends {BaseAPI}
 */
export declare class HouseholdMateControllerApi extends BaseAPI {
    /**
     *
     * @summary acceptHouseholdInvite
     * @param {string} email email
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HouseholdMateControllerApi
     */
    acceptHouseholdInviteUsingPUT(email: string, token: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary cancelHouseholdMateInvite
     * @param {string} inviteeEmail inviteeEmail
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HouseholdMateControllerApi
     */
    cancelHouseholdMateInviteUsingDELETE(inviteeEmail: string, userId: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary getHouseholdMates
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HouseholdMateControllerApi
     */
    getHouseholdMatesUsingGET(userId: string, options?: any): Promise<import("axios").AxiosResponse<GetHouseholdMatesResponse, any>>;
    /**
     *
     * @summary inviteHouseholdMate
     * @param {number} userId userId
     * @param {InviteHouseholdMateRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HouseholdMateControllerApi
     */
    inviteHouseholdMateUsingPOST(userId: number, request: InviteHouseholdMateRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * InsuranceCalculatorControllerApi - axios parameter creator
 * @export
 */
export declare const InsuranceCalculatorControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary calculateTicketSavings
     * @param {EstimateInsuranceSavingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    calculateTicketSavingsUsingPOST: (request: EstimateInsuranceSavingsRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * InsuranceCalculatorControllerApi - functional programming interface
 * @export
 */
export declare const InsuranceCalculatorControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary calculateTicketSavings
     * @param {EstimateInsuranceSavingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    calculateTicketSavingsUsingPOST(request: EstimateInsuranceSavingsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EstimateInsuranceSavingsResponse>>;
};
/**
 * InsuranceCalculatorControllerApi - factory interface
 * @export
 */
export declare const InsuranceCalculatorControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary calculateTicketSavings
     * @param {EstimateInsuranceSavingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    calculateTicketSavingsUsingPOST(request: EstimateInsuranceSavingsRequest, options?: any): AxiosPromise<EstimateInsuranceSavingsResponse>;
};
/**
 * InsuranceCalculatorControllerApi - object-oriented interface
 * @export
 * @class InsuranceCalculatorControllerApi
 * @extends {BaseAPI}
 */
export declare class InsuranceCalculatorControllerApi extends BaseAPI {
    /**
     *
     * @summary calculateTicketSavings
     * @param {EstimateInsuranceSavingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InsuranceCalculatorControllerApi
     */
    calculateTicketSavingsUsingPOST(request: EstimateInsuranceSavingsRequest, options?: any): Promise<import("axios").AxiosResponse<EstimateInsuranceSavingsResponse, any>>;
}
/**
 * LawfirmCaseDecisionControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmCaseDecisionControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary setLawfirmCaseDecision
     * @param {string} caseId caseId
     * @param {SetLawfirmCaseDecisionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setLawfirmCaseDecisionUsingPOST: (caseId: string, request: SetLawfirmCaseDecisionRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmCaseDecisionControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmCaseDecisionControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary setLawfirmCaseDecision
     * @param {string} caseId caseId
     * @param {SetLawfirmCaseDecisionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setLawfirmCaseDecisionUsingPOST(caseId: string, request: SetLawfirmCaseDecisionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * LawfirmCaseDecisionControllerApi - factory interface
 * @export
 */
export declare const LawfirmCaseDecisionControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary setLawfirmCaseDecision
     * @param {string} caseId caseId
     * @param {SetLawfirmCaseDecisionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setLawfirmCaseDecisionUsingPOST(caseId: string, request: SetLawfirmCaseDecisionRequest, options?: any): AxiosPromise<object>;
};
/**
 * LawfirmCaseDecisionControllerApi - object-oriented interface
 * @export
 * @class LawfirmCaseDecisionControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmCaseDecisionControllerApi extends BaseAPI {
    /**
     *
     * @summary setLawfirmCaseDecision
     * @param {string} caseId caseId
     * @param {SetLawfirmCaseDecisionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmCaseDecisionControllerApi
     */
    setLawfirmCaseDecisionUsingPOST(caseId: string, request: SetLawfirmCaseDecisionRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * LawfirmCasesControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmCasesControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getLawfirmCasesByPage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {GetLawfirmSummaryCaseRequest} request request
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCasesByPageUsingPOST: (lawfirmIdString: string, request: GetLawfirmSummaryCaseRequest, length?: number, page?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmCases
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCasesUsingGET: (lawfirmId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmCasesControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmCasesControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getLawfirmCasesByPage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {GetLawfirmSummaryCaseRequest} request request
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCasesByPageUsingPOST(lawfirmIdString: string, request: GetLawfirmSummaryCaseRequest, length?: number, page?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmSummaryCasesResponse>>;
    /**
     *
     * @summary getLawfirmCases
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCasesUsingGET(lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmCasesResponse>>;
};
/**
 * LawfirmCasesControllerApi - factory interface
 * @export
 */
export declare const LawfirmCasesControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getLawfirmCasesByPage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {GetLawfirmSummaryCaseRequest} request request
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCasesByPageUsingPOST(lawfirmIdString: string, request: GetLawfirmSummaryCaseRequest, length?: number, page?: number, options?: any): AxiosPromise<GetLawfirmSummaryCasesResponse>;
    /**
     *
     * @summary getLawfirmCases
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCasesUsingGET(lawfirmId: string, options?: any): AxiosPromise<GetLawfirmCasesResponse>;
};
/**
 * LawfirmCasesControllerApi - object-oriented interface
 * @export
 * @class LawfirmCasesControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmCasesControllerApi extends BaseAPI {
    /**
     *
     * @summary getLawfirmCasesByPage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {GetLawfirmSummaryCaseRequest} request request
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmCasesControllerApi
     */
    getLawfirmCasesByPageUsingPOST(lawfirmIdString: string, request: GetLawfirmSummaryCaseRequest, length?: number, page?: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmSummaryCasesResponse, any>>;
    /**
     *
     * @summary getLawfirmCases
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmCasesControllerApi
     */
    getLawfirmCasesUsingGET(lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmCasesResponse, any>>;
}
/**
 * LawfirmControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addLawfirmAddress
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addLawfirmAddressUsingPOST: (lawfirmId: number, request: UpsertAddressRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary createLawfirm
     * @param {CreateNewLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLawfirmUsingPOST: (request: CreateNewLawfirmRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteLawfirmConnectedAccount
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripeAccountId stripeAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmConnectedAccountUsingDELETE: (lawfirmId: number, stripeAccountId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteLawfirmCoverPhoto
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmCoverPhotoUsingDELETE: (lawfirmId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmAddresses
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmAddressesUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmByUrl
     * @param {string} seoUrl seoUrl
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmByUrlUsingGET: (seoUrl: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmCaseStats
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCaseStatsUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmInboxMessages
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmInboxMessagesUsingGET: (lawfirmId: number, length?: number, page?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmJobTitles
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmJobTitlesUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmLawyers
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmLawyersUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmSettings
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmSettingsUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmStatuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmStatusesUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {boolean} [isDetailsRequired] isDetailsRequired
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmUsingGET: (lawfirmIdString: string, isDetailsRequired?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirms
     * @param {boolean} [acceptsAccidentTickets] acceptsAccidentTickets
     * @param {boolean} [acceptsPastDueTickets] acceptsPastDueTickets
     * @param {boolean} [includeTestLawfirms] includeTestLawfirms
     * @param {boolean} [includeVacationMode] includeVacationMode
     * @param {string} [q] q
     * @param {Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>} [states] states
     * @param {Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>} [statuses] statuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmsUsingGET: (acceptsAccidentTickets?: boolean, acceptsPastDueTickets?: boolean, includeTestLawfirms?: boolean, includeVacationMode?: boolean, q?: string, states?: Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>, statuses?: Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getOtrLawfirmNotes
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOtrLawfirmNotesUsingGET: (lawfirmId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getStripeConnectedAccounts
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeConnectedAccountsUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getSupportedStatesForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportedStatesForLawfirmUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setVacationMode
     * @param {number} lawfirmId lawfirmId
     * @param {LawfirmVacationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setVacationModeUsingPOST: (lawfirmId: number, request: LawfirmVacationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateLawfirmAddress
     * @param {number} addressId addressId
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmAddressUsingPUT: (addressId: number, lawfirmId: number, request: UpsertAddressRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateLawfirmSettings
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmSettingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmSettingsUsingPOST: (lawfirmIdString: string, request: UpdateLawfirmSettingsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmUsingPUT: (lawfirmIdString: string, request: UpdateLawfirmRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateLawfirmWithPicture
     * @param {string} lawfirmId lawfirmId
     * @param {LawfirmPictureRequest} lawfirmPictureRequest lawfirmPictureRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmWithPictureUsingPUT: (lawfirmId: string, lawfirmPictureRequest: LawfirmPictureRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updatePaymentModel
     * @param {number} lawfirmId lawfirmId
     * @param {UpdateLawfirmPaymentModelRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentModelUsingPUT: (lawfirmId: number, request: UpdateLawfirmPaymentModelRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addLawfirmAddress
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addLawfirmAddressUsingPOST(lawfirmId: number, request: UpsertAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary createLawfirm
     * @param {CreateNewLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLawfirmUsingPOST(request: CreateNewLawfirmRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmResponse>>;
    /**
     *
     * @summary deleteLawfirmConnectedAccount
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripeAccountId stripeAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmConnectedAccountUsingDELETE(lawfirmId: number, stripeAccountId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary deleteLawfirmCoverPhoto
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmCoverPhotoUsingDELETE(lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getLawfirmAddresses
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmAddressesUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmAddressesResponse>>;
    /**
     *
     * @summary getLawfirmByUrl
     * @param {string} seoUrl seoUrl
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmByUrlUsingGET(seoUrl: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmResponse>>;
    /**
     *
     * @summary getLawfirmCaseStats
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCaseStatsUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmCaseStatsResponse>>;
    /**
     *
     * @summary getLawfirmInboxMessages
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmInboxMessagesUsingGET(lawfirmId: number, length?: number, page?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmInboxMessagesResponse>>;
    /**
     *
     * @summary getLawfirmJobTitles
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmJobTitlesUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmJobTitleResponse>>;
    /**
     *
     * @summary getLawfirmLawyers
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmLawyersUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmLawyersResponse>>;
    /**
     *
     * @summary getLawfirmSettings
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmSettingsUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmSettingsResponse>>;
    /**
     *
     * @summary getLawfirmStatuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmStatusesUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {boolean} [isDetailsRequired] isDetailsRequired
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmUsingGET(lawfirmIdString: string, isDetailsRequired?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmResponse>>;
    /**
     *
     * @summary getLawfirms
     * @param {boolean} [acceptsAccidentTickets] acceptsAccidentTickets
     * @param {boolean} [acceptsPastDueTickets] acceptsPastDueTickets
     * @param {boolean} [includeTestLawfirms] includeTestLawfirms
     * @param {boolean} [includeVacationMode] includeVacationMode
     * @param {string} [q] q
     * @param {Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>} [states] states
     * @param {Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>} [statuses] statuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmsUsingGET(acceptsAccidentTickets?: boolean, acceptsPastDueTickets?: boolean, includeTestLawfirms?: boolean, includeVacationMode?: boolean, q?: string, states?: Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>, statuses?: Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmsResponse>>;
    /**
     *
     * @summary getOtrLawfirmNotes
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOtrLawfirmNotesUsingGET(lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getStripeConnectedAccounts
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeConnectedAccountsUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetStripeConnectedAccountsResponse>>;
    /**
     *
     * @summary getSupportedStatesForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportedStatesForLawfirmUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmSupportedStatesResponse>>;
    /**
     *
     * @summary setVacationMode
     * @param {number} lawfirmId lawfirmId
     * @param {LawfirmVacationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setVacationModeUsingPOST(lawfirmId: number, request: LawfirmVacationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmResponse>>;
    /**
     *
     * @summary updateLawfirmAddress
     * @param {number} addressId addressId
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmAddressUsingPUT(addressId: number, lawfirmId: number, request: UpsertAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateLawfirmSettings
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmSettingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmSettingsUsingPOST(lawfirmIdString: string, request: UpdateLawfirmSettingsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmResponse>>;
    /**
     *
     * @summary updateLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmUsingPUT(lawfirmIdString: string, request: UpdateLawfirmRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary updateLawfirmWithPicture
     * @param {string} lawfirmId lawfirmId
     * @param {LawfirmPictureRequest} lawfirmPictureRequest lawfirmPictureRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmWithPictureUsingPUT(lawfirmId: string, lawfirmPictureRequest: LawfirmPictureRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary updatePaymentModel
     * @param {number} lawfirmId lawfirmId
     * @param {UpdateLawfirmPaymentModelRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentModelUsingPUT(lawfirmId: number, request: UpdateLawfirmPaymentModelRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * LawfirmControllerApi - factory interface
 * @export
 */
export declare const LawfirmControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addLawfirmAddress
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addLawfirmAddressUsingPOST(lawfirmId: number, request: UpsertAddressRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary createLawfirm
     * @param {CreateNewLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLawfirmUsingPOST(request: CreateNewLawfirmRequest, options?: any): AxiosPromise<GetLawfirmResponse>;
    /**
     *
     * @summary deleteLawfirmConnectedAccount
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripeAccountId stripeAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmConnectedAccountUsingDELETE(lawfirmId: number, stripeAccountId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary deleteLawfirmCoverPhoto
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmCoverPhotoUsingDELETE(lawfirmId: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getLawfirmAddresses
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmAddressesUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetLawfirmAddressesResponse>;
    /**
     *
     * @summary getLawfirmByUrl
     * @param {string} seoUrl seoUrl
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmByUrlUsingGET(seoUrl: string, options?: any): AxiosPromise<GetLawfirmResponse>;
    /**
     *
     * @summary getLawfirmCaseStats
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCaseStatsUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetLawfirmCaseStatsResponse>;
    /**
     *
     * @summary getLawfirmInboxMessages
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmInboxMessagesUsingGET(lawfirmId: number, length?: number, page?: number, options?: any): AxiosPromise<GetLawfirmInboxMessagesResponse>;
    /**
     *
     * @summary getLawfirmJobTitles
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmJobTitlesUsingGET(options?: any): AxiosPromise<GetLawfirmJobTitleResponse>;
    /**
     *
     * @summary getLawfirmLawyers
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmLawyersUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetLawfirmLawyersResponse>;
    /**
     *
     * @summary getLawfirmSettings
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmSettingsUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetLawfirmSettingsResponse>;
    /**
     *
     * @summary getLawfirmStatuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmStatusesUsingGET(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {boolean} [isDetailsRequired] isDetailsRequired
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmUsingGET(lawfirmIdString: string, isDetailsRequired?: boolean, options?: any): AxiosPromise<GetLawfirmResponse>;
    /**
     *
     * @summary getLawfirms
     * @param {boolean} [acceptsAccidentTickets] acceptsAccidentTickets
     * @param {boolean} [acceptsPastDueTickets] acceptsPastDueTickets
     * @param {boolean} [includeTestLawfirms] includeTestLawfirms
     * @param {boolean} [includeVacationMode] includeVacationMode
     * @param {string} [q] q
     * @param {Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>} [states] states
     * @param {Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>} [statuses] statuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmsUsingGET(acceptsAccidentTickets?: boolean, acceptsPastDueTickets?: boolean, includeTestLawfirms?: boolean, includeVacationMode?: boolean, q?: string, states?: Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>, statuses?: Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>, options?: any): AxiosPromise<GetLawfirmsResponse>;
    /**
     *
     * @summary getOtrLawfirmNotes
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOtrLawfirmNotesUsingGET(lawfirmId: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getStripeConnectedAccounts
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStripeConnectedAccountsUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetStripeConnectedAccountsResponse>;
    /**
     *
     * @summary getSupportedStatesForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportedStatesForLawfirmUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetLawfirmSupportedStatesResponse>;
    /**
     *
     * @summary setVacationMode
     * @param {number} lawfirmId lawfirmId
     * @param {LawfirmVacationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setVacationModeUsingPOST(lawfirmId: number, request: LawfirmVacationRequest, options?: any): AxiosPromise<GetLawfirmResponse>;
    /**
     *
     * @summary updateLawfirmAddress
     * @param {number} addressId addressId
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmAddressUsingPUT(addressId: number, lawfirmId: number, request: UpsertAddressRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateLawfirmSettings
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmSettingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmSettingsUsingPOST(lawfirmIdString: string, request: UpdateLawfirmSettingsRequest, options?: any): AxiosPromise<GetLawfirmResponse>;
    /**
     *
     * @summary updateLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmUsingPUT(lawfirmIdString: string, request: UpdateLawfirmRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary updateLawfirmWithPicture
     * @param {string} lawfirmId lawfirmId
     * @param {LawfirmPictureRequest} lawfirmPictureRequest lawfirmPictureRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmWithPictureUsingPUT(lawfirmId: string, lawfirmPictureRequest: LawfirmPictureRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary updatePaymentModel
     * @param {number} lawfirmId lawfirmId
     * @param {UpdateLawfirmPaymentModelRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePaymentModelUsingPUT(lawfirmId: number, request: UpdateLawfirmPaymentModelRequest, options?: any): AxiosPromise<void>;
};
/**
 * LawfirmControllerApi - object-oriented interface
 * @export
 * @class LawfirmControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmControllerApi extends BaseAPI {
    /**
     *
     * @summary addLawfirmAddress
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    addLawfirmAddressUsingPOST(lawfirmId: number, request: UpsertAddressRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary createLawfirm
     * @param {CreateNewLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    createLawfirmUsingPOST(request: CreateNewLawfirmRequest, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmResponse, any>>;
    /**
     *
     * @summary deleteLawfirmConnectedAccount
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripeAccountId stripeAccountId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    deleteLawfirmConnectedAccountUsingDELETE(lawfirmId: number, stripeAccountId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary deleteLawfirmCoverPhoto
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    deleteLawfirmCoverPhotoUsingDELETE(lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getLawfirmAddresses
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmAddressesUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmAddressesResponse, any>>;
    /**
     *
     * @summary getLawfirmByUrl
     * @param {string} seoUrl seoUrl
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmByUrlUsingGET(seoUrl: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmResponse, any>>;
    /**
     *
     * @summary getLawfirmCaseStats
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmCaseStatsUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmCaseStatsResponse, any>>;
    /**
     *
     * @summary getLawfirmInboxMessages
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmInboxMessagesUsingGET(lawfirmId: number, length?: number, page?: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmInboxMessagesResponse, any>>;
    /**
     *
     * @summary getLawfirmJobTitles
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmJobTitlesUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetLawfirmJobTitleResponse, any>>;
    /**
     *
     * @summary getLawfirmLawyers
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmLawyersUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmLawyersResponse, any>>;
    /**
     *
     * @summary getLawfirmSettings
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmSettingsUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmSettingsResponse, any>>;
    /**
     *
     * @summary getLawfirmStatuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmStatusesUsingGET(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {boolean} [isDetailsRequired] isDetailsRequired
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmUsingGET(lawfirmIdString: string, isDetailsRequired?: boolean, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmResponse, any>>;
    /**
     *
     * @summary getLawfirms
     * @param {boolean} [acceptsAccidentTickets] acceptsAccidentTickets
     * @param {boolean} [acceptsPastDueTickets] acceptsPastDueTickets
     * @param {boolean} [includeTestLawfirms] includeTestLawfirms
     * @param {boolean} [includeVacationMode] includeVacationMode
     * @param {string} [q] q
     * @param {Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>} [states] states
     * @param {Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>} [statuses] statuses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getLawfirmsUsingGET(acceptsAccidentTickets?: boolean, acceptsPastDueTickets?: boolean, includeTestLawfirms?: boolean, includeVacationMode?: boolean, q?: string, states?: Array<'AK' | 'AL' | 'AR' | 'AZ' | 'CA' | 'CO' | 'CT' | 'DC' | 'DE' | 'FL' | 'GA' | 'HI' | 'IA' | 'ID' | 'IL' | 'IN' | 'KS' | 'KY' | 'LA' | 'MA' | 'MD' | 'ME' | 'MI' | 'MN' | 'MO' | 'MS' | 'MT' | 'NC' | 'ND' | 'NE' | 'NH' | 'NJ' | 'NM' | 'NV' | 'NY' | 'OH' | 'OK' | 'OR' | 'PA' | 'RI' | 'SC' | 'SD' | 'TN' | 'TX' | 'UT' | 'VA' | 'VT' | 'WA' | 'WI' | 'WV' | 'WY'>, statuses?: Array<'ACCOUNT_CLOSED' | 'DUPLICATE' | 'ESTABLISHED' | 'FUTURE_LEAD' | 'IN_TRIAL' | 'LAWFIRM_INTERESTED' | 'LAWFIRM_LEAD' | 'LAWFIRM_NOT_INTERESTED' | 'NOT_INTERESTED_FEE_SPLITTING_ETHICS' | 'NOT_INTERESTED_REFUND_ETHICS' | 'ONBOARDING' | 'TEMPORARILY_TURNED_OFF' | 'TERMINATED_FRAUD' | 'TERMINATED_POOR_SERVICE' | 'TERMINATED_POOR_SUCCESS' | 'UNDER_REVIEW'>, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmsResponse, any>>;
    /**
     *
     * @summary getOtrLawfirmNotes
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getOtrLawfirmNotesUsingGET(lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getStripeConnectedAccounts
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getStripeConnectedAccountsUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetStripeConnectedAccountsResponse, any>>;
    /**
     *
     * @summary getSupportedStatesForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    getSupportedStatesForLawfirmUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmSupportedStatesResponse, any>>;
    /**
     *
     * @summary setVacationMode
     * @param {number} lawfirmId lawfirmId
     * @param {LawfirmVacationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    setVacationModeUsingPOST(lawfirmId: number, request: LawfirmVacationRequest, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmResponse, any>>;
    /**
     *
     * @summary updateLawfirmAddress
     * @param {number} addressId addressId
     * @param {number} lawfirmId lawfirmId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    updateLawfirmAddressUsingPUT(addressId: number, lawfirmId: number, request: UpsertAddressRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateLawfirmSettings
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmSettingsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    updateLawfirmSettingsUsingPOST(lawfirmIdString: string, request: UpdateLawfirmSettingsRequest, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmResponse, any>>;
    /**
     *
     * @summary updateLawfirm
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {UpdateLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    updateLawfirmUsingPUT(lawfirmIdString: string, request: UpdateLawfirmRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary updateLawfirmWithPicture
     * @param {string} lawfirmId lawfirmId
     * @param {LawfirmPictureRequest} lawfirmPictureRequest lawfirmPictureRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    updateLawfirmWithPictureUsingPUT(lawfirmId: string, lawfirmPictureRequest: LawfirmPictureRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary updatePaymentModel
     * @param {number} lawfirmId lawfirmId
     * @param {UpdateLawfirmPaymentModelRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmControllerApi
     */
    updatePaymentModelUsingPUT(lawfirmId: number, request: UpdateLawfirmPaymentModelRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * LawfirmDocumentControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmDocumentControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary generateDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {GetDocumentsRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateDocUsingPOST: (docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request?: GetDocumentsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getDocument
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDocumentUsingGET: (docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmCaseDocuments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCaseDocumentsUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markDocumentWithDecision
     * @param {string} docId docId
     * @param {DocumentDecisionRequest} decisionRequest decisionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markDocumentWithDecisionUsingPOST: (docId: string, decisionRequest: DocumentDecisionRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary previewDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {PreviewDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    previewDocUsingPOST: (docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request: PreviewDocumentRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary uploadCopy
     * @param {string} lawfirmId lawfirmId
     * @param {PutDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadCopyUsingPUT: (lawfirmId: string, request: PutDocumentRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmDocumentControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmDocumentControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary generateDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {GetDocumentsRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateDocUsingPOST(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request?: GetDocumentsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LawfirmDocumentResponse>>;
    /**
     *
     * @summary getDocument
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDocumentUsingGET(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LawfirmDocumentTemplateResponse>>;
    /**
     *
     * @summary getLawfirmCaseDocuments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCaseDocumentsUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCaseDocumentResponse>>;
    /**
     *
     * @summary markDocumentWithDecision
     * @param {string} docId docId
     * @param {DocumentDecisionRequest} decisionRequest decisionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markDocumentWithDecisionUsingPOST(docId: string, decisionRequest: DocumentDecisionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary previewDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {PreviewDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    previewDocUsingPOST(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request: PreviewDocumentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LawfirmDocumentResponse>>;
    /**
     *
     * @summary uploadCopy
     * @param {string} lawfirmId lawfirmId
     * @param {PutDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadCopyUsingPUT(lawfirmId: string, request: PutDocumentRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * LawfirmDocumentControllerApi - factory interface
 * @export
 */
export declare const LawfirmDocumentControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary generateDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {GetDocumentsRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateDocUsingPOST(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request?: GetDocumentsRequest, options?: any): AxiosPromise<LawfirmDocumentResponse>;
    /**
     *
     * @summary getDocument
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDocumentUsingGET(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, options?: any): AxiosPromise<LawfirmDocumentTemplateResponse>;
    /**
     *
     * @summary getLawfirmCaseDocuments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCaseDocumentsUsingGET(caseId: string, options?: any): AxiosPromise<GetCaseDocumentResponse>;
    /**
     *
     * @summary markDocumentWithDecision
     * @param {string} docId docId
     * @param {DocumentDecisionRequest} decisionRequest decisionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markDocumentWithDecisionUsingPOST(docId: string, decisionRequest: DocumentDecisionRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary previewDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {PreviewDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    previewDocUsingPOST(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request: PreviewDocumentRequest, options?: any): AxiosPromise<LawfirmDocumentResponse>;
    /**
     *
     * @summary uploadCopy
     * @param {string} lawfirmId lawfirmId
     * @param {PutDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadCopyUsingPUT(lawfirmId: string, request: PutDocumentRequest, options?: any): AxiosPromise<void>;
};
/**
 * LawfirmDocumentControllerApi - object-oriented interface
 * @export
 * @class LawfirmDocumentControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmDocumentControllerApi extends BaseAPI {
    /**
     *
     * @summary generateDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {GetDocumentsRequest} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmDocumentControllerApi
     */
    generateDocUsingPOST(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request?: GetDocumentsRequest, options?: any): Promise<import("axios").AxiosResponse<LawfirmDocumentResponse, any>>;
    /**
     *
     * @summary getDocument
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmDocumentControllerApi
     */
    getDocumentUsingGET(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<LawfirmDocumentTemplateResponse, any>>;
    /**
     *
     * @summary getLawfirmCaseDocuments
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmDocumentControllerApi
     */
    getLawfirmCaseDocumentsUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetCaseDocumentResponse, any>>;
    /**
     *
     * @summary markDocumentWithDecision
     * @param {string} docId docId
     * @param {DocumentDecisionRequest} decisionRequest decisionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmDocumentControllerApi
     */
    markDocumentWithDecisionUsingPOST(docId: string, decisionRequest: DocumentDecisionRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary previewDoc
     * @param {'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE'} docType doc_type
     * @param {string} lawfirmId lawfirmId
     * @param {PreviewDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmDocumentControllerApi
     */
    previewDocUsingPOST(docType: 'ENGAGEMENT_LETTER' | 'OTHER_DOCUMENT' | 'OTHER_IMAGE', lawfirmId: string, request: PreviewDocumentRequest, options?: any): Promise<import("axios").AxiosResponse<LawfirmDocumentResponse, any>>;
    /**
     *
     * @summary uploadCopy
     * @param {string} lawfirmId lawfirmId
     * @param {PutDocumentRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmDocumentControllerApi
     */
    uploadCopyUsingPUT(lawfirmId: string, request: PutDocumentRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * LawfirmFeeCoverageControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmFeeCoverageControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addCourtToCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {PostCourtCoverageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCourtToCoverageUsingPOST: (lawfirmIdString: string, request: PostCourtCoverageRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary enableViolationsForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {EnableViolationsForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    enableViolationsForLawfirmUsingPOST: (lawfirmId: string, request: EnableViolationsForLawfirmRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {boolean} [enabledFeesOnly] enabledFeesOnly
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAccountFeesUsingGET: (lawfirmId: string, enabledFeesOnly?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCoverageUsingGET: (lawfirmIdString: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmFeeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFeeCoverageUsingGET: (lawfirmId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removeAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR'} [classification] classification
     * @param {boolean} [isPermitted] isPermitted
     * @param {number} [violationId] violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAccountFeesUsingDELETE: (lawfirmId: string, classification?: 'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR', isPermitted?: boolean, violationId?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removeCourts
     * @param {Array<number>} courtsToRemove courtsToRemove
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeCourtsUsingDELETE: (courtsToRemove: Array<number>, lawfirmId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveCoverageRequest} courtsToRemove courtsToRemove
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeCoverageUsingDELETE: (lawfirmId: string, courtsToRemove: RemoveCoverageRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary resetFeesForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {ResetFeesForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetFeesForLawfirmUsingPOST: (lawfirmId: string, request: ResetFeesForLawfirmRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary saveAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {AccountLevelFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveAccountFeesUsingPOST: (lawfirmId: string, request: AccountLevelFeeRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmFeeCoverageControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmFeeCoverageControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addCourtToCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {PostCourtCoverageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCourtToCoverageUsingPOST(lawfirmIdString: string, request: PostCourtCoverageRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary enableViolationsForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {EnableViolationsForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    enableViolationsForLawfirmUsingPOST(lawfirmId: string, request: EnableViolationsForLawfirmRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnableViolationsForLawfirmResponse>>;
    /**
     *
     * @summary getAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {boolean} [enabledFeesOnly] enabledFeesOnly
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAccountFeesUsingGET(lawfirmId: string, enabledFeesOnly?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccountLevelFeeResponse>>;
    /**
     *
     * @summary getLawfirmCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCoverageUsingGET(lawfirmIdString: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmCoverageResponse>>;
    /**
     *
     * @summary getLawfirmFeeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFeeCoverageUsingGET(lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmFeeCoverageResponse>>;
    /**
     *
     * @summary removeAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR'} [classification] classification
     * @param {boolean} [isPermitted] isPermitted
     * @param {number} [violationId] violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAccountFeesUsingDELETE(lawfirmId: string, classification?: 'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR', isPermitted?: boolean, violationId?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary removeCourts
     * @param {Array<number>} courtsToRemove courtsToRemove
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeCourtsUsingDELETE(courtsToRemove: Array<number>, lawfirmId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary removeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveCoverageRequest} courtsToRemove courtsToRemove
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeCoverageUsingDELETE(lawfirmId: string, courtsToRemove: RemoveCoverageRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary resetFeesForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {ResetFeesForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetFeesForLawfirmUsingPOST(lawfirmId: string, request: ResetFeesForLawfirmRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResetFeesForLawfirmResponse>>;
    /**
     *
     * @summary saveAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {AccountLevelFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveAccountFeesUsingPOST(lawfirmId: string, request: AccountLevelFeeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * LawfirmFeeCoverageControllerApi - factory interface
 * @export
 */
export declare const LawfirmFeeCoverageControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addCourtToCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {PostCourtCoverageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCourtToCoverageUsingPOST(lawfirmIdString: string, request: PostCourtCoverageRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary enableViolationsForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {EnableViolationsForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    enableViolationsForLawfirmUsingPOST(lawfirmId: string, request: EnableViolationsForLawfirmRequest, options?: any): AxiosPromise<EnableViolationsForLawfirmResponse>;
    /**
     *
     * @summary getAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {boolean} [enabledFeesOnly] enabledFeesOnly
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAccountFeesUsingGET(lawfirmId: string, enabledFeesOnly?: boolean, options?: any): AxiosPromise<AccountLevelFeeResponse>;
    /**
     *
     * @summary getLawfirmCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCoverageUsingGET(lawfirmIdString: string, options?: any): AxiosPromise<GetLawfirmCoverageResponse>;
    /**
     *
     * @summary getLawfirmFeeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFeeCoverageUsingGET(lawfirmId: string, options?: any): AxiosPromise<GetLawfirmFeeCoverageResponse>;
    /**
     *
     * @summary removeAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR'} [classification] classification
     * @param {boolean} [isPermitted] isPermitted
     * @param {number} [violationId] violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAccountFeesUsingDELETE(lawfirmId: string, classification?: 'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR', isPermitted?: boolean, violationId?: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary removeCourts
     * @param {Array<number>} courtsToRemove courtsToRemove
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeCourtsUsingDELETE(courtsToRemove: Array<number>, lawfirmId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary removeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveCoverageRequest} courtsToRemove courtsToRemove
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeCoverageUsingDELETE(lawfirmId: string, courtsToRemove: RemoveCoverageRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary resetFeesForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {ResetFeesForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetFeesForLawfirmUsingPOST(lawfirmId: string, request: ResetFeesForLawfirmRequest, options?: any): AxiosPromise<ResetFeesForLawfirmResponse>;
    /**
     *
     * @summary saveAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {AccountLevelFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveAccountFeesUsingPOST(lawfirmId: string, request: AccountLevelFeeRequest, options?: any): AxiosPromise<object>;
};
/**
 * LawfirmFeeCoverageControllerApi - object-oriented interface
 * @export
 * @class LawfirmFeeCoverageControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmFeeCoverageControllerApi extends BaseAPI {
    /**
     *
     * @summary addCourtToCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {PostCourtCoverageRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    addCourtToCoverageUsingPOST(lawfirmIdString: string, request: PostCourtCoverageRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary enableViolationsForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {EnableViolationsForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    enableViolationsForLawfirmUsingPOST(lawfirmId: string, request: EnableViolationsForLawfirmRequest, options?: any): Promise<import("axios").AxiosResponse<EnableViolationsForLawfirmResponse, any>>;
    /**
     *
     * @summary getAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {boolean} [enabledFeesOnly] enabledFeesOnly
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    getAccountFeesUsingGET(lawfirmId: string, enabledFeesOnly?: boolean, options?: any): Promise<import("axios").AxiosResponse<AccountLevelFeeResponse, any>>;
    /**
     *
     * @summary getLawfirmCoverage
     * @param {string} lawfirmIdString lawfirmIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    getLawfirmCoverageUsingGET(lawfirmIdString: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmCoverageResponse, any>>;
    /**
     *
     * @summary getLawfirmFeeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    getLawfirmFeeCoverageUsingGET(lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmFeeCoverageResponse, any>>;
    /**
     *
     * @summary removeAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR'} [classification] classification
     * @param {boolean} [isPermitted] isPermitted
     * @param {number} [violationId] violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    removeAccountFeesUsingDELETE(lawfirmId: string, classification?: 'CLASS_1_FELONY' | 'CLASS_1_MISDEMEANOR' | 'CLASS_2_FELONY' | 'CLASS_2_MISDEMEANOR' | 'CLASS_3_FELONY' | 'CLASS_3_MISDEMEANOR' | 'CLASS_4_FELONY' | 'CLASS_4_MISDEMEANOR' | 'CLASS_5_FELONY' | 'CLASS_6_FELONY' | 'CLASS_A1_MISDEMEANOR' | 'CLASS_A_FELONY' | 'CLASS_A_INFRACTION' | 'CLASS_A_MISDEMEANOR' | 'CLASS_A_VIOLATION' | 'CLASS_B_FELONY' | 'CLASS_B_INFRACTION' | 'CLASS_B_MISDEMEANOR' | 'CLASS_B_VIOLATION' | 'CLASS_C_FELONY' | 'CLASS_C_MISDEMEANOR' | 'CLASS_C_VIOLATION' | 'CLASS_D_FELONY' | 'CLASS_D_MISDEMEANOR' | 'CLASS_D_VIOLATION' | 'CLASS_E_FELONY' | 'CLASS_F_FELONY' | 'CLASS_H_FELONY' | 'DISORDERLY_PERSONS_OFFENSE' | 'FELONY' | 'FELONY_1ST_DEGREE' | 'FELONY_2ND_DEGREE' | 'FELONY_3RD_DEGREE' | 'FELONY_4TH_DEGREE' | 'FELONY_5TH_DEGREE' | 'GROSS_MISDEMEANOR' | 'HIGH_AND_AGGRAVATED_MISDEMEANOR' | 'INFRACTION' | 'MINOR_MISDEMEANOR' | 'MISDEMEANOR' | 'MISDEMEANOR_1ST_DEGREE' | 'MISDEMEANOR_2ND_DEGREE' | 'MISDEMEANOR_3RD_DEGREE' | 'MISDEMEANOR_4TH_DEGREE' | 'MISDEMEANOR_WITH_REFUND' | 'NON_MOVING' | 'NON_REPORTABLE' | 'PETTY_MISDEMEANOR' | 'QUASI_CRIMINAL' | 'SUMMARY_OFFENSE' | 'SUMMARY_OFFENSE_NO_REFUND' | 'WOBBLER_TO_FELONY' | 'WOBBLER_TO_MISDEMEANOR', isPermitted?: boolean, violationId?: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary removeCourts
     * @param {Array<number>} courtsToRemove courtsToRemove
     * @param {string} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    removeCourtsUsingDELETE(courtsToRemove: Array<number>, lawfirmId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary removeCoverage
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveCoverageRequest} courtsToRemove courtsToRemove
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    removeCoverageUsingDELETE(lawfirmId: string, courtsToRemove: RemoveCoverageRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary resetFeesForLawfirm
     * @param {string} lawfirmId lawfirmId
     * @param {ResetFeesForLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    resetFeesForLawfirmUsingPOST(lawfirmId: string, request: ResetFeesForLawfirmRequest, options?: any): Promise<import("axios").AxiosResponse<ResetFeesForLawfirmResponse, any>>;
    /**
     *
     * @summary saveAccountFees
     * @param {string} lawfirmId lawfirmId
     * @param {AccountLevelFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmFeeCoverageControllerApi
     */
    saveAccountFeesUsingPOST(lawfirmId: string, request: AccountLevelFeeRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * LawfirmPaymentModelControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmPaymentModelControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getPaymentModelTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentModelTypesUsingGET: (options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmPaymentModelControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmPaymentModelControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getPaymentModelTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentModelTypesUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPaymentModelTypesResponse>>;
};
/**
 * LawfirmPaymentModelControllerApi - factory interface
 * @export
 */
export declare const LawfirmPaymentModelControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getPaymentModelTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentModelTypesUsingGET(options?: any): AxiosPromise<GetPaymentModelTypesResponse>;
};
/**
 * LawfirmPaymentModelControllerApi - object-oriented interface
 * @export
 * @class LawfirmPaymentModelControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmPaymentModelControllerApi extends BaseAPI {
    /**
     *
     * @summary getPaymentModelTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmPaymentModelControllerApi
     */
    getPaymentModelTypesUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetPaymentModelTypesResponse, any>>;
}
/**
 * LawfirmRatesControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmRatesControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getActiveRatesByArea
     * @param {GeoRatesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActiveRatesByAreaUsingPOST: (request: GeoRatesRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmRatesControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmRatesControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getActiveRatesByArea
     * @param {GeoRatesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActiveRatesByAreaUsingPOST(request: GeoRatesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LawfirmsRatesResponse>>;
};
/**
 * LawfirmRatesControllerApi - factory interface
 * @export
 */
export declare const LawfirmRatesControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getActiveRatesByArea
     * @param {GeoRatesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActiveRatesByAreaUsingPOST(request: GeoRatesRequest, options?: any): AxiosPromise<LawfirmsRatesResponse>;
};
/**
 * LawfirmRatesControllerApi - object-oriented interface
 * @export
 * @class LawfirmRatesControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmRatesControllerApi extends BaseAPI {
    /**
     *
     * @summary getActiveRatesByArea
     * @param {GeoRatesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmRatesControllerApi
     */
    getActiveRatesByAreaUsingPOST(request: GeoRatesRequest, options?: any): Promise<import("axios").AxiosResponse<LawfirmsRatesResponse, any>>;
}
/**
 * LawfirmStorefrontControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmStorefrontControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary listLawfirmStorefronts
     * @param {number} [page] page
     * @param {string} [regionCode] regionCode
     * @param {number} [size] size
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmStorefrontsUsingGET: (page?: number, regionCode?: string, size?: number, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmStorefrontControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmStorefrontControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary listLawfirmStorefronts
     * @param {number} [page] page
     * @param {string} [regionCode] regionCode
     * @param {number} [size] size
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmStorefrontsUsingGET(page?: number, regionCode?: string, size?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLawfirmStorefrontsResponse>>;
};
/**
 * LawfirmStorefrontControllerApi - factory interface
 * @export
 */
export declare const LawfirmStorefrontControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary listLawfirmStorefronts
     * @param {number} [page] page
     * @param {string} [regionCode] regionCode
     * @param {number} [size] size
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmStorefrontsUsingGET(page?: number, regionCode?: string, size?: number, options?: any): AxiosPromise<ListLawfirmStorefrontsResponse>;
};
/**
 * LawfirmStorefrontControllerApi - object-oriented interface
 * @export
 * @class LawfirmStorefrontControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmStorefrontControllerApi extends BaseAPI {
    /**
     *
     * @summary listLawfirmStorefronts
     * @param {number} [page] page
     * @param {string} [regionCode] regionCode
     * @param {number} [size] size
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmStorefrontControllerApi
     */
    listLawfirmStorefrontsUsingGET(page?: number, regionCode?: string, size?: number, options?: any): Promise<import("axios").AxiosResponse<ListLawfirmStorefrontsResponse, any>>;
}
/**
 * LawfirmSurchargeControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmSurchargeControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary listLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT'} [featureType] featureType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmSurchargesUsingGET: (lawfirmId: string, featureType?: 'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT', options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removeSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveLawfirmSurchargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeSurchargesUsingDELETE: (lawfirmId: string, request: RemoveLawfirmSurchargeRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary saveLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {SaveLawfirmSurchargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawfirmSurchargesUsingPOST: (lawfirmId: string, request: SaveLawfirmSurchargesRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmSurchargeControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmSurchargeControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary listLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT'} [featureType] featureType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmSurchargesUsingGET(lawfirmId: string, featureType?: 'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLawfirmSurchargesResponse>>;
    /**
     *
     * @summary removeSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveLawfirmSurchargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeSurchargesUsingDELETE(lawfirmId: string, request: RemoveLawfirmSurchargeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary saveLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {SaveLawfirmSurchargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawfirmSurchargesUsingPOST(lawfirmId: string, request: SaveLawfirmSurchargesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * LawfirmSurchargeControllerApi - factory interface
 * @export
 */
export declare const LawfirmSurchargeControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary listLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT'} [featureType] featureType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLawfirmSurchargesUsingGET(lawfirmId: string, featureType?: 'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT', options?: any): AxiosPromise<ListLawfirmSurchargesResponse>;
    /**
     *
     * @summary removeSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveLawfirmSurchargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeSurchargesUsingDELETE(lawfirmId: string, request: RemoveLawfirmSurchargeRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary saveLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {SaveLawfirmSurchargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawfirmSurchargesUsingPOST(lawfirmId: string, request: SaveLawfirmSurchargesRequest, options?: any): AxiosPromise<object>;
};
/**
 * LawfirmSurchargeControllerApi - object-oriented interface
 * @export
 * @class LawfirmSurchargeControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmSurchargeControllerApi extends BaseAPI {
    /**
     *
     * @summary listLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT'} [featureType] featureType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmSurchargeControllerApi
     */
    listLawfirmSurchargesUsingGET(lawfirmId: string, featureType?: 'BLACK_BOX' | 'STATE_PAGE' | 'STOREFRONT', options?: any): Promise<import("axios").AxiosResponse<ListLawfirmSurchargesResponse, any>>;
    /**
     *
     * @summary removeSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {RemoveLawfirmSurchargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmSurchargeControllerApi
     */
    removeSurchargesUsingDELETE(lawfirmId: string, request: RemoveLawfirmSurchargeRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary saveLawfirmSurcharges
     * @param {string} lawfirmId lawfirmId
     * @param {SaveLawfirmSurchargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmSurchargeControllerApi
     */
    saveLawfirmSurchargesUsingPOST(lawfirmId: string, request: SaveLawfirmSurchargesRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * LawfirmTransactionsControllerApi - axios parameter creator
 * @export
 */
export declare const LawfirmTransactionsControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary chargeFeeToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {ChargeFeeToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    chargeFeeToLawfirmUsingPOST: (lawfirmId: number, request: ChargeFeeToLawfirmRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary debitLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    debitLawfirmFeeUsingPOST: (lawfirmFeeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteLawfirmFeeRecord
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmFeeRecordUsingDELETE: (lawfirmFeeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteLawfirmPayoutRecord
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmPayoutRecordUsingDELETE: (lawfirmPayoutId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary executeLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    executeLawfirmPayoutUsingPOST: (lawfirmPayoutId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmFees
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFeesUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmFinancialTransactions
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFinancialTransactionsUsingGET: (lawfirmId: number, length?: number, page?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmPayoutReversals
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPayoutReversalsUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmPayouts
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPayoutsUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmTransactionsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmTransactionsForCaseUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary refundLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {RefundLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundLawfirmFeeUsingPOST: (lawfirmFeeId: string, request: RefundLawfirmFeeRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary reverseLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {ReverseLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reverseLawfirmPayoutUsingPOST: (lawfirmPayoutId: string, request: ReverseLawfirmPayoutRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendPayoutToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {SendPayoutToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendPayoutToLawfirmUsingPOST: (lawfirmId: number, request: SendPayoutToLawfirmRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {UpdateLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmFeeUsingPUT: (lawfirmFeeId: string, request: UpdateLawfirmFeeRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {UpdateLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmPayoutUsingPUT: (lawfirmPayoutId: string, request: UpdateLawfirmPayoutRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawfirmTransactionsControllerApi - functional programming interface
 * @export
 */
export declare const LawfirmTransactionsControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary chargeFeeToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {ChargeFeeToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    chargeFeeToLawfirmUsingPOST(lawfirmId: number, request: ChargeFeeToLawfirmRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ChargeFeeToLawfirmResponse>>;
    /**
     *
     * @summary debitLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    debitLawfirmFeeUsingPOST(lawfirmFeeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary deleteLawfirmFeeRecord
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmFeeRecordUsingDELETE(lawfirmFeeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary deleteLawfirmPayoutRecord
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmPayoutRecordUsingDELETE(lawfirmPayoutId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary executeLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    executeLawfirmPayoutUsingPOST(lawfirmPayoutId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary getLawfirmFees
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFeesUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmFeesResponse>>;
    /**
     *
     * @summary getLawfirmFinancialTransactions
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFinancialTransactionsUsingGET(lawfirmId: number, length?: number, page?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmFinancialTransactionsResponse>>;
    /**
     *
     * @summary getLawfirmPayoutReversals
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPayoutReversalsUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmPayoutReversalsResponse>>;
    /**
     *
     * @summary getLawfirmPayouts
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPayoutsUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmPayoutsResponse>>;
    /**
     *
     * @summary getLawfirmTransactionsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmTransactionsForCaseUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmTransactionsForCaseResponse>>;
    /**
     *
     * @summary refundLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {RefundLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundLawfirmFeeUsingPOST(lawfirmFeeId: string, request: RefundLawfirmFeeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary reverseLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {ReverseLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reverseLawfirmPayoutUsingPOST(lawfirmPayoutId: string, request: ReverseLawfirmPayoutRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary sendPayoutToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {SendPayoutToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendPayoutToLawfirmUsingPOST(lawfirmId: number, request: SendPayoutToLawfirmRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SendPayoutToLawfirmResponse>>;
    /**
     *
     * @summary updateLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {UpdateLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmFeeUsingPUT(lawfirmFeeId: string, request: UpdateLawfirmFeeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateLawfirmFeeResponse>>;
    /**
     *
     * @summary updateLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {UpdateLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmPayoutUsingPUT(lawfirmPayoutId: string, request: UpdateLawfirmPayoutRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateLawfirmPayoutResponse>>;
};
/**
 * LawfirmTransactionsControllerApi - factory interface
 * @export
 */
export declare const LawfirmTransactionsControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary chargeFeeToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {ChargeFeeToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    chargeFeeToLawfirmUsingPOST(lawfirmId: number, request: ChargeFeeToLawfirmRequest, options?: any): AxiosPromise<ChargeFeeToLawfirmResponse>;
    /**
     *
     * @summary debitLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    debitLawfirmFeeUsingPOST(lawfirmFeeId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary deleteLawfirmFeeRecord
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmFeeRecordUsingDELETE(lawfirmFeeId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary deleteLawfirmPayoutRecord
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawfirmPayoutRecordUsingDELETE(lawfirmPayoutId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary executeLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    executeLawfirmPayoutUsingPOST(lawfirmPayoutId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary getLawfirmFees
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFeesUsingGET(caseId: string, options?: any): AxiosPromise<GetLawfirmFeesResponse>;
    /**
     *
     * @summary getLawfirmFinancialTransactions
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmFinancialTransactionsUsingGET(lawfirmId: number, length?: number, page?: number, options?: any): AxiosPromise<GetLawfirmFinancialTransactionsResponse>;
    /**
     *
     * @summary getLawfirmPayoutReversals
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPayoutReversalsUsingGET(caseId: string, options?: any): AxiosPromise<GetLawfirmPayoutReversalsResponse>;
    /**
     *
     * @summary getLawfirmPayouts
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPayoutsUsingGET(caseId: string, options?: any): AxiosPromise<GetLawfirmPayoutsResponse>;
    /**
     *
     * @summary getLawfirmTransactionsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmTransactionsForCaseUsingGET(caseId: string, options?: any): AxiosPromise<GetLawfirmTransactionsForCaseResponse>;
    /**
     *
     * @summary refundLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {RefundLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refundLawfirmFeeUsingPOST(lawfirmFeeId: string, request: RefundLawfirmFeeRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary reverseLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {ReverseLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    reverseLawfirmPayoutUsingPOST(lawfirmPayoutId: string, request: ReverseLawfirmPayoutRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary sendPayoutToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {SendPayoutToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendPayoutToLawfirmUsingPOST(lawfirmId: number, request: SendPayoutToLawfirmRequest, options?: any): AxiosPromise<SendPayoutToLawfirmResponse>;
    /**
     *
     * @summary updateLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {UpdateLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmFeeUsingPUT(lawfirmFeeId: string, request: UpdateLawfirmFeeRequest, options?: any): AxiosPromise<UpdateLawfirmFeeResponse>;
    /**
     *
     * @summary updateLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {UpdateLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLawfirmPayoutUsingPUT(lawfirmPayoutId: string, request: UpdateLawfirmPayoutRequest, options?: any): AxiosPromise<UpdateLawfirmPayoutResponse>;
};
/**
 * LawfirmTransactionsControllerApi - object-oriented interface
 * @export
 * @class LawfirmTransactionsControllerApi
 * @extends {BaseAPI}
 */
export declare class LawfirmTransactionsControllerApi extends BaseAPI {
    /**
     *
     * @summary chargeFeeToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {ChargeFeeToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    chargeFeeToLawfirmUsingPOST(lawfirmId: number, request: ChargeFeeToLawfirmRequest, options?: any): Promise<import("axios").AxiosResponse<ChargeFeeToLawfirmResponse, any>>;
    /**
     *
     * @summary debitLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    debitLawfirmFeeUsingPOST(lawfirmFeeId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary deleteLawfirmFeeRecord
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    deleteLawfirmFeeRecordUsingDELETE(lawfirmFeeId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary deleteLawfirmPayoutRecord
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    deleteLawfirmPayoutRecordUsingDELETE(lawfirmPayoutId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary executeLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    executeLawfirmPayoutUsingPOST(lawfirmPayoutId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary getLawfirmFees
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    getLawfirmFeesUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmFeesResponse, any>>;
    /**
     *
     * @summary getLawfirmFinancialTransactions
     * @param {number} lawfirmId lawfirmId
     * @param {number} [length] length
     * @param {number} [page] page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    getLawfirmFinancialTransactionsUsingGET(lawfirmId: number, length?: number, page?: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmFinancialTransactionsResponse, any>>;
    /**
     *
     * @summary getLawfirmPayoutReversals
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    getLawfirmPayoutReversalsUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmPayoutReversalsResponse, any>>;
    /**
     *
     * @summary getLawfirmPayouts
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    getLawfirmPayoutsUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmPayoutsResponse, any>>;
    /**
     *
     * @summary getLawfirmTransactionsForCase
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    getLawfirmTransactionsForCaseUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmTransactionsForCaseResponse, any>>;
    /**
     *
     * @summary refundLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {RefundLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    refundLawfirmFeeUsingPOST(lawfirmFeeId: string, request: RefundLawfirmFeeRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary reverseLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {ReverseLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    reverseLawfirmPayoutUsingPOST(lawfirmPayoutId: string, request: ReverseLawfirmPayoutRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary sendPayoutToLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {SendPayoutToLawfirmRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    sendPayoutToLawfirmUsingPOST(lawfirmId: number, request: SendPayoutToLawfirmRequest, options?: any): Promise<import("axios").AxiosResponse<SendPayoutToLawfirmResponse, any>>;
    /**
     *
     * @summary updateLawfirmFee
     * @param {string} lawfirmFeeId lawfirmFeeId
     * @param {UpdateLawfirmFeeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    updateLawfirmFeeUsingPUT(lawfirmFeeId: string, request: UpdateLawfirmFeeRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateLawfirmFeeResponse, any>>;
    /**
     *
     * @summary updateLawfirmPayout
     * @param {string} lawfirmPayoutId lawfirmPayoutId
     * @param {UpdateLawfirmPayoutRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawfirmTransactionsControllerApi
     */
    updateLawfirmPayoutUsingPUT(lawfirmPayoutId: string, request: UpdateLawfirmPayoutRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateLawfirmPayoutResponse, any>>;
}
/**
 * LawyerControllerApi - axios parameter creator
 * @export
 */
export declare const LawyerControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary deleteLawyerLicenses
     * @param {string} userId userId
     * @param {DeleteLawyerLicenseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawyerLicensesUsingDELETE: (userId: string, request: DeleteLawyerLicenseRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawyerEmailGuesses
     * @param {number} lawyerId lawyerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawyerEmailGuessesUsingGET: (lawyerId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary saveLawyerLead
     * @param {SaveLawyerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawyerLeadUsingPOST: (request: SaveLawyerLeadRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary saveLawyerLicenses
     * @param {string} userId userId
     * @param {SaveLawyerLicensesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawyerLicensesUsingPOST: (userId: string, request: SaveLawyerLicensesRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary upsertLawyer
     * @param {SaveLawyerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upsertLawyerUsingPOST: (request: SaveLawyerRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LawyerControllerApi - functional programming interface
 * @export
 */
export declare const LawyerControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary deleteLawyerLicenses
     * @param {string} userId userId
     * @param {DeleteLawyerLicenseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawyerLicensesUsingDELETE(userId: string, request: DeleteLawyerLicenseRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getLawyerEmailGuesses
     * @param {number} lawyerId lawyerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawyerEmailGuessesUsingGET(lawyerId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary saveLawyerLead
     * @param {SaveLawyerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawyerLeadUsingPOST(request: SaveLawyerLeadRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary saveLawyerLicenses
     * @param {string} userId userId
     * @param {SaveLawyerLicensesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawyerLicensesUsingPOST(userId: string, request: SaveLawyerLicensesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary upsertLawyer
     * @param {SaveLawyerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upsertLawyerUsingPOST(request: SaveLawyerRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * LawyerControllerApi - factory interface
 * @export
 */
export declare const LawyerControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary deleteLawyerLicenses
     * @param {string} userId userId
     * @param {DeleteLawyerLicenseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteLawyerLicensesUsingDELETE(userId: string, request: DeleteLawyerLicenseRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getLawyerEmailGuesses
     * @param {number} lawyerId lawyerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawyerEmailGuessesUsingGET(lawyerId: number, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary saveLawyerLead
     * @param {SaveLawyerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawyerLeadUsingPOST(request: SaveLawyerLeadRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary saveLawyerLicenses
     * @param {string} userId userId
     * @param {SaveLawyerLicensesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    saveLawyerLicensesUsingPOST(userId: string, request: SaveLawyerLicensesRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary upsertLawyer
     * @param {SaveLawyerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upsertLawyerUsingPOST(request: SaveLawyerRequest, options?: any): AxiosPromise<object>;
};
/**
 * LawyerControllerApi - object-oriented interface
 * @export
 * @class LawyerControllerApi
 * @extends {BaseAPI}
 */
export declare class LawyerControllerApi extends BaseAPI {
    /**
     *
     * @summary deleteLawyerLicenses
     * @param {string} userId userId
     * @param {DeleteLawyerLicenseRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawyerControllerApi
     */
    deleteLawyerLicensesUsingDELETE(userId: string, request: DeleteLawyerLicenseRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getLawyerEmailGuesses
     * @param {number} lawyerId lawyerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawyerControllerApi
     */
    getLawyerEmailGuessesUsingGET(lawyerId: number, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary saveLawyerLead
     * @param {SaveLawyerLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawyerControllerApi
     */
    saveLawyerLeadUsingPOST(request: SaveLawyerLeadRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary saveLawyerLicenses
     * @param {string} userId userId
     * @param {SaveLawyerLicensesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawyerControllerApi
     */
    saveLawyerLicensesUsingPOST(userId: string, request: SaveLawyerLicensesRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary upsertLawyer
     * @param {SaveLawyerRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LawyerControllerApi
     */
    upsertLawyerUsingPOST(request: SaveLawyerRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * LineItemControllerApi - axios parameter creator
 * @export
 */
export declare const LineItemControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary deleteCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCaseLineItemUsingDELETE: (caseId: string, lineItemId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLineItemTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLineItemTypesUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLineItems
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLineItemsUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary insertCaseLineItem
     * @param {string} caseId caseId
     * @param {InsertInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertCaseLineItemUsingPOST: (caseId: string, request: InsertInvoiceLineItemRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {UpdateInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCaseLineItemUsingPUT: (caseId: string, lineItemId: string, request: UpdateInvoiceLineItemRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LineItemControllerApi - functional programming interface
 * @export
 */
export declare const LineItemControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary deleteCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCaseLineItemUsingDELETE(caseId: string, lineItemId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary getLineItemTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLineItemTypesUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLineItemTypesResponse>>;
    /**
     *
     * @summary getLineItems
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLineItemsUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLineItemsResponse>>;
    /**
     *
     * @summary insertCaseLineItem
     * @param {string} caseId caseId
     * @param {InsertInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertCaseLineItemUsingPOST(caseId: string, request: InsertInvoiceLineItemRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InsertCaseLineItemResponse>>;
    /**
     *
     * @summary updateCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {UpdateInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCaseLineItemUsingPUT(caseId: string, lineItemId: string, request: UpdateInvoiceLineItemRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * LineItemControllerApi - factory interface
 * @export
 */
export declare const LineItemControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary deleteCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCaseLineItemUsingDELETE(caseId: string, lineItemId: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary getLineItemTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLineItemTypesUsingGET(options?: any): AxiosPromise<GetLineItemTypesResponse>;
    /**
     *
     * @summary getLineItems
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLineItemsUsingGET(caseId: string, options?: any): AxiosPromise<GetLineItemsResponse>;
    /**
     *
     * @summary insertCaseLineItem
     * @param {string} caseId caseId
     * @param {InsertInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    insertCaseLineItemUsingPOST(caseId: string, request: InsertInvoiceLineItemRequest, options?: any): AxiosPromise<InsertCaseLineItemResponse>;
    /**
     *
     * @summary updateCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {UpdateInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCaseLineItemUsingPUT(caseId: string, lineItemId: string, request: UpdateInvoiceLineItemRequest, options?: any): AxiosPromise<object>;
};
/**
 * LineItemControllerApi - object-oriented interface
 * @export
 * @class LineItemControllerApi
 * @extends {BaseAPI}
 */
export declare class LineItemControllerApi extends BaseAPI {
    /**
     *
     * @summary deleteCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LineItemControllerApi
     */
    deleteCaseLineItemUsingDELETE(caseId: string, lineItemId: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary getLineItemTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LineItemControllerApi
     */
    getLineItemTypesUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetLineItemTypesResponse, any>>;
    /**
     *
     * @summary getLineItems
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LineItemControllerApi
     */
    getLineItemsUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<GetLineItemsResponse, any>>;
    /**
     *
     * @summary insertCaseLineItem
     * @param {string} caseId caseId
     * @param {InsertInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LineItemControllerApi
     */
    insertCaseLineItemUsingPOST(caseId: string, request: InsertInvoiceLineItemRequest, options?: any): Promise<import("axios").AxiosResponse<InsertCaseLineItemResponse, any>>;
    /**
     *
     * @summary updateCaseLineItem
     * @param {string} caseId caseId
     * @param {string} lineItemId lineItemId
     * @param {UpdateInvoiceLineItemRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LineItemControllerApi
     */
    updateCaseLineItemUsingPUT(caseId: string, lineItemId: string, request: UpdateInvoiceLineItemRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * ListCasesControllerApi - axios parameter creator
 * @export
 */
export declare const ListCasesControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCasesForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesForUserUsingGET: (userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getUserCases
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserCasesUsingGET: (userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listDashboardCases
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {string} [previousPageToken] previousPageToken
     * @param {'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE'} [sortBy] sortBy
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [statusCategories] statusCategories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardCasesUsingGET: (userId: number, limit?: number, previousPageToken?: string, sortBy?: 'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE', statusCategories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any) => Promise<RequestArgs>;
};
/**
 * ListCasesControllerApi - functional programming interface
 * @export
 */
export declare const ListCasesControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCasesForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesForUserUsingGET(userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClientCasesResponse>>;
    /**
     *
     * @summary getUserCases
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserCasesUsingGET(userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserCasesResponse>>;
    /**
     *
     * @summary listDashboardCases
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {string} [previousPageToken] previousPageToken
     * @param {'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE'} [sortBy] sortBy
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [statusCategories] statusCategories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardCasesUsingGET(userId: number, limit?: number, previousPageToken?: string, sortBy?: 'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE', statusCategories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDashboardCasesResponse>>;
};
/**
 * ListCasesControllerApi - factory interface
 * @export
 */
export declare const ListCasesControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCasesForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCasesForUserUsingGET(userId: string, options?: any): AxiosPromise<GetClientCasesResponse>;
    /**
     *
     * @summary getUserCases
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserCasesUsingGET(userId: number, options?: any): AxiosPromise<GetUserCasesResponse>;
    /**
     *
     * @summary listDashboardCases
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {string} [previousPageToken] previousPageToken
     * @param {'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE'} [sortBy] sortBy
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [statusCategories] statusCategories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardCasesUsingGET(userId: number, limit?: number, previousPageToken?: string, sortBy?: 'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE', statusCategories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any): AxiosPromise<ListDashboardCasesResponse>;
};
/**
 * ListCasesControllerApi - object-oriented interface
 * @export
 * @class ListCasesControllerApi
 * @extends {BaseAPI}
 */
export declare class ListCasesControllerApi extends BaseAPI {
    /**
     *
     * @summary getCasesForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListCasesControllerApi
     */
    getCasesForUserUsingGET(userId: string, options?: any): Promise<import("axios").AxiosResponse<GetClientCasesResponse, any>>;
    /**
     *
     * @summary getUserCases
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListCasesControllerApi
     */
    getUserCasesUsingGET(userId: number, options?: any): Promise<import("axios").AxiosResponse<GetUserCasesResponse, any>>;
    /**
     *
     * @summary listDashboardCases
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {string} [previousPageToken] previousPageToken
     * @param {'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE'} [sortBy] sortBy
     * @param {Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>} [statusCategories] statusCategories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ListCasesControllerApi
     */
    listDashboardCasesUsingGET(userId: number, limit?: number, previousPageToken?: string, sortBy?: 'BOOKING_CONFIRMED_DATE' | 'CITATION_ISSUE_DATE', statusCategories?: Array<'ACTIVE' | 'CANCELLED' | 'RESOLVED' | 'UNCONFIRMED'>, options?: any): Promise<import("axios").AxiosResponse<ListDashboardCasesResponse, any>>;
}
/**
 * NotesControllerApi - axios parameter creator
 * @export
 */
export declare const NotesControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary createNote
     * @param {CreateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createNoteUsingPOST: (request: CreateNoteRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteNote
     * @param {number} noteId noteId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteNoteUsingDELETE: (noteId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateNote
     * @param {number} noteId noteId
     * @param {UpdateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateNoteUsingPUT: (noteId: number, request: UpdateNoteRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * NotesControllerApi - functional programming interface
 * @export
 */
export declare const NotesControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary createNote
     * @param {CreateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createNoteUsingPOST(request: CreateNoteRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateNoteResponse>>;
    /**
     *
     * @summary deleteNote
     * @param {number} noteId noteId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteNoteUsingDELETE(noteId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateNote
     * @param {number} noteId noteId
     * @param {UpdateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateNoteUsingPUT(noteId: number, request: UpdateNoteRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateNoteResponse>>;
};
/**
 * NotesControllerApi - factory interface
 * @export
 */
export declare const NotesControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary createNote
     * @param {CreateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createNoteUsingPOST(request: CreateNoteRequest, options?: any): AxiosPromise<CreateNoteResponse>;
    /**
     *
     * @summary deleteNote
     * @param {number} noteId noteId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteNoteUsingDELETE(noteId: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateNote
     * @param {number} noteId noteId
     * @param {UpdateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateNoteUsingPUT(noteId: number, request: UpdateNoteRequest, options?: any): AxiosPromise<UpdateNoteResponse>;
};
/**
 * NotesControllerApi - object-oriented interface
 * @export
 * @class NotesControllerApi
 * @extends {BaseAPI}
 */
export declare class NotesControllerApi extends BaseAPI {
    /**
     *
     * @summary createNote
     * @param {CreateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotesControllerApi
     */
    createNoteUsingPOST(request: CreateNoteRequest, options?: any): Promise<import("axios").AxiosResponse<CreateNoteResponse, any>>;
    /**
     *
     * @summary deleteNote
     * @param {number} noteId noteId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotesControllerApi
     */
    deleteNoteUsingDELETE(noteId: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateNote
     * @param {number} noteId noteId
     * @param {UpdateNoteRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotesControllerApi
     */
    updateNoteUsingPUT(noteId: number, request: UpdateNoteRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateNoteResponse, any>>;
}
/**
 * OnDemandRequestControllerApi - axios parameter creator
 * @export
 */
export declare const OnDemandRequestControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary requestLawyer
     * @param {string} caseId caseId
     * @param {NoLawyerAvailableRequest} lawyerRequest lawyerRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestLawyerUsingPOST: (caseId: string, lawyerRequest: NoLawyerAvailableRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * OnDemandRequestControllerApi - functional programming interface
 * @export
 */
export declare const OnDemandRequestControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary requestLawyer
     * @param {string} caseId caseId
     * @param {NoLawyerAvailableRequest} lawyerRequest lawyerRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestLawyerUsingPOST(caseId: string, lawyerRequest: NoLawyerAvailableRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * OnDemandRequestControllerApi - factory interface
 * @export
 */
export declare const OnDemandRequestControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary requestLawyer
     * @param {string} caseId caseId
     * @param {NoLawyerAvailableRequest} lawyerRequest lawyerRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestLawyerUsingPOST(caseId: string, lawyerRequest: NoLawyerAvailableRequest, options?: any): AxiosPromise<object>;
};
/**
 * OnDemandRequestControllerApi - object-oriented interface
 * @export
 * @class OnDemandRequestControllerApi
 * @extends {BaseAPI}
 */
export declare class OnDemandRequestControllerApi extends BaseAPI {
    /**
     *
     * @summary requestLawyer
     * @param {string} caseId caseId
     * @param {NoLawyerAvailableRequest} lawyerRequest lawyerRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OnDemandRequestControllerApi
     */
    requestLawyerUsingPOST(caseId: string, lawyerRequest: NoLawyerAvailableRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * OneTimePasswordControllerApi - axios parameter creator
 * @export
 */
export declare const OneTimePasswordControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary sendOneTimePassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendOneTimePasswordUsingPOST: (options?: any) => Promise<RequestArgs>;
};
/**
 * OneTimePasswordControllerApi - functional programming interface
 * @export
 */
export declare const OneTimePasswordControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary sendOneTimePassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendOneTimePasswordUsingPOST(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * OneTimePasswordControllerApi - factory interface
 * @export
 */
export declare const OneTimePasswordControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary sendOneTimePassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendOneTimePasswordUsingPOST(options?: any): AxiosPromise<void>;
};
/**
 * OneTimePasswordControllerApi - object-oriented interface
 * @export
 * @class OneTimePasswordControllerApi
 * @extends {BaseAPI}
 */
export declare class OneTimePasswordControllerApi extends BaseAPI {
    /**
     *
     * @summary sendOneTimePassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OneTimePasswordControllerApi
     */
    sendOneTimePasswordUsingPOST(options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * PhoneLeadsControllerApi - axios parameter creator
 * @export
 */
export declare const PhoneLeadsControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addNoteToPhoneLead
     * @param {AddNoteToPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addNoteToPhoneLeadUsingPOST: (request: AddNoteToPhoneLeadRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary dismissPhoneLead
     * @param {DismissPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dismissPhoneLeadUsingPOST: (request: DismissPhoneLeadRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * PhoneLeadsControllerApi - functional programming interface
 * @export
 */
export declare const PhoneLeadsControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addNoteToPhoneLead
     * @param {AddNoteToPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addNoteToPhoneLeadUsingPOST(request: AddNoteToPhoneLeadRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateNoteResponse>>;
    /**
     *
     * @summary dismissPhoneLead
     * @param {DismissPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dismissPhoneLeadUsingPOST(request: DismissPhoneLeadRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * PhoneLeadsControllerApi - factory interface
 * @export
 */
export declare const PhoneLeadsControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addNoteToPhoneLead
     * @param {AddNoteToPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addNoteToPhoneLeadUsingPOST(request: AddNoteToPhoneLeadRequest, options?: any): AxiosPromise<CreateNoteResponse>;
    /**
     *
     * @summary dismissPhoneLead
     * @param {DismissPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dismissPhoneLeadUsingPOST(request: DismissPhoneLeadRequest, options?: any): AxiosPromise<void>;
};
/**
 * PhoneLeadsControllerApi - object-oriented interface
 * @export
 * @class PhoneLeadsControllerApi
 * @extends {BaseAPI}
 */
export declare class PhoneLeadsControllerApi extends BaseAPI {
    /**
     *
     * @summary addNoteToPhoneLead
     * @param {AddNoteToPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PhoneLeadsControllerApi
     */
    addNoteToPhoneLeadUsingPOST(request: AddNoteToPhoneLeadRequest, options?: any): Promise<import("axios").AxiosResponse<CreateNoteResponse, any>>;
    /**
     *
     * @summary dismissPhoneLead
     * @param {DismissPhoneLeadRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PhoneLeadsControllerApi
     */
    dismissPhoneLeadUsingPOST(request: DismissPhoneLeadRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * PushNotificationControllerApi - axios parameter creator
 * @export
 */
export declare const PushNotificationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getUnreadCounts
     * @param {boolean} [includeMessage] includeMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUnreadCountsUsingGET: (includeMessage?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markAllReadForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markAllReadForUserUsingDELETE: (userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markPageTypesAsRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationByPagesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markPageTypesAsReadUsingDELETE: (caseId: string, request: DeleteNotificationByPagesRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markReadUsingDELETE: (caseId: string, request: DeleteNotificationEventRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary pushCaseMessage
     * @param {string} caseId caseId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pushCaseMessageUsingPOST: (caseId: string, pushRequest: PushNotificationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary pushNotificationToUser
     * @param {string} recipientId recipientId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pushNotificationToUserUsingPOST: (recipientId: string, pushRequest: PushNotificationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary register
     * @param {PushNotificationRegistrationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUsingPOST: (request: PushNotificationRegistrationRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * PushNotificationControllerApi - functional programming interface
 * @export
 */
export declare const PushNotificationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getUnreadCounts
     * @param {boolean} [includeMessage] includeMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUnreadCountsUsingGET(includeMessage?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NotificationEvents>>;
    /**
     *
     * @summary markAllReadForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markAllReadForUserUsingDELETE(userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary markPageTypesAsRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationByPagesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markPageTypesAsReadUsingDELETE(caseId: string, request: DeleteNotificationByPagesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NotificationEvents>>;
    /**
     *
     * @summary markRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markReadUsingDELETE(caseId: string, request: DeleteNotificationEventRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NotificationEvents>>;
    /**
     *
     * @summary pushCaseMessage
     * @param {string} caseId caseId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pushCaseMessageUsingPOST(caseId: string, pushRequest: PushNotificationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary pushNotificationToUser
     * @param {string} recipientId recipientId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pushNotificationToUserUsingPOST(recipientId: string, pushRequest: PushNotificationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary register
     * @param {PushNotificationRegistrationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUsingPOST(request: PushNotificationRegistrationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * PushNotificationControllerApi - factory interface
 * @export
 */
export declare const PushNotificationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getUnreadCounts
     * @param {boolean} [includeMessage] includeMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUnreadCountsUsingGET(includeMessage?: boolean, options?: any): AxiosPromise<NotificationEvents>;
    /**
     *
     * @summary markAllReadForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markAllReadForUserUsingDELETE(userId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary markPageTypesAsRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationByPagesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markPageTypesAsReadUsingDELETE(caseId: string, request: DeleteNotificationByPagesRequest, options?: any): AxiosPromise<NotificationEvents>;
    /**
     *
     * @summary markRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markReadUsingDELETE(caseId: string, request: DeleteNotificationEventRequest, options?: any): AxiosPromise<NotificationEvents>;
    /**
     *
     * @summary pushCaseMessage
     * @param {string} caseId caseId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pushCaseMessageUsingPOST(caseId: string, pushRequest: PushNotificationRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary pushNotificationToUser
     * @param {string} recipientId recipientId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    pushNotificationToUserUsingPOST(recipientId: string, pushRequest: PushNotificationRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary register
     * @param {PushNotificationRegistrationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUsingPOST(request: PushNotificationRegistrationRequest, options?: any): AxiosPromise<object>;
};
/**
 * PushNotificationControllerApi - object-oriented interface
 * @export
 * @class PushNotificationControllerApi
 * @extends {BaseAPI}
 */
export declare class PushNotificationControllerApi extends BaseAPI {
    /**
     *
     * @summary getUnreadCounts
     * @param {boolean} [includeMessage] includeMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    getUnreadCountsUsingGET(includeMessage?: boolean, options?: any): Promise<import("axios").AxiosResponse<NotificationEvents, any>>;
    /**
     *
     * @summary markAllReadForUser
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    markAllReadForUserUsingDELETE(userId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary markPageTypesAsRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationByPagesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    markPageTypesAsReadUsingDELETE(caseId: string, request: DeleteNotificationByPagesRequest, options?: any): Promise<import("axios").AxiosResponse<NotificationEvents, any>>;
    /**
     *
     * @summary markRead
     * @param {string} caseId caseId
     * @param {DeleteNotificationEventRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    markReadUsingDELETE(caseId: string, request: DeleteNotificationEventRequest, options?: any): Promise<import("axios").AxiosResponse<NotificationEvents, any>>;
    /**
     *
     * @summary pushCaseMessage
     * @param {string} caseId caseId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    pushCaseMessageUsingPOST(caseId: string, pushRequest: PushNotificationRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary pushNotificationToUser
     * @param {string} recipientId recipientId
     * @param {PushNotificationRequest} pushRequest pushRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    pushNotificationToUserUsingPOST(recipientId: string, pushRequest: PushNotificationRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary register
     * @param {PushNotificationRegistrationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PushNotificationControllerApi
     */
    registerUsingPOST(request: PushNotificationRegistrationRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * RecurringBillingControllerApi - axios parameter creator
 * @export
 */
export declare const RecurringBillingControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary cancelBillingSubscription
     * @param {string} id id
     * @param {string} userId userId
     * @param {boolean} [isProrated] isProrated
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelBillingSubscriptionUsingDELETE: (id: string, userId: string, isProrated?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary createBillingSubscription
     * @param {number} userId userId
     * @param {CreateBillingSubscriptionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBillingSubscriptionUsingPOST: (userId: number, request: CreateBillingSubscriptionRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listBillingProducts
     * @param {boolean} [active] active
     * @param {string} [audience] audience
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBillingProductsUsingGET: (active?: boolean, audience?: string, limit?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listBillingSubscriptions
     * @param {number} userId userId
     * @param {boolean} [includeInactive] includeInactive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBillingSubscriptionsUsingGET: (userId: number, includeInactive?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listSubscriptionInvoices
     * @param {string} id id
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSubscriptionInvoicesUsingGET: (id: string, userId: number, limit?: number, options?: any) => Promise<RequestArgs>;
};
/**
 * RecurringBillingControllerApi - functional programming interface
 * @export
 */
export declare const RecurringBillingControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary cancelBillingSubscription
     * @param {string} id id
     * @param {string} userId userId
     * @param {boolean} [isProrated] isProrated
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelBillingSubscriptionUsingDELETE(id: string, userId: string, isProrated?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CancelBillingSubscriptionResponse>>;
    /**
     *
     * @summary createBillingSubscription
     * @param {number} userId userId
     * @param {CreateBillingSubscriptionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBillingSubscriptionUsingPOST(userId: number, request: CreateBillingSubscriptionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBillingSubscriptionResponse>>;
    /**
     *
     * @summary listBillingProducts
     * @param {boolean} [active] active
     * @param {string} [audience] audience
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBillingProductsUsingGET(active?: boolean, audience?: string, limit?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBillingProductsResponse>>;
    /**
     *
     * @summary listBillingSubscriptions
     * @param {number} userId userId
     * @param {boolean} [includeInactive] includeInactive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBillingSubscriptionsUsingGET(userId: number, includeInactive?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBillingSubscriptionsResponse>>;
    /**
     *
     * @summary listSubscriptionInvoices
     * @param {string} id id
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSubscriptionInvoicesUsingGET(id: string, userId: number, limit?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListSubscriptionInvoicesResponse>>;
};
/**
 * RecurringBillingControllerApi - factory interface
 * @export
 */
export declare const RecurringBillingControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary cancelBillingSubscription
     * @param {string} id id
     * @param {string} userId userId
     * @param {boolean} [isProrated] isProrated
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelBillingSubscriptionUsingDELETE(id: string, userId: string, isProrated?: boolean, options?: any): AxiosPromise<CancelBillingSubscriptionResponse>;
    /**
     *
     * @summary createBillingSubscription
     * @param {number} userId userId
     * @param {CreateBillingSubscriptionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBillingSubscriptionUsingPOST(userId: number, request: CreateBillingSubscriptionRequest, options?: any): AxiosPromise<CreateBillingSubscriptionResponse>;
    /**
     *
     * @summary listBillingProducts
     * @param {boolean} [active] active
     * @param {string} [audience] audience
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBillingProductsUsingGET(active?: boolean, audience?: string, limit?: number, options?: any): AxiosPromise<ListBillingProductsResponse>;
    /**
     *
     * @summary listBillingSubscriptions
     * @param {number} userId userId
     * @param {boolean} [includeInactive] includeInactive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBillingSubscriptionsUsingGET(userId: number, includeInactive?: boolean, options?: any): AxiosPromise<ListBillingSubscriptionsResponse>;
    /**
     *
     * @summary listSubscriptionInvoices
     * @param {string} id id
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSubscriptionInvoicesUsingGET(id: string, userId: number, limit?: number, options?: any): AxiosPromise<ListSubscriptionInvoicesResponse>;
};
/**
 * RecurringBillingControllerApi - object-oriented interface
 * @export
 * @class RecurringBillingControllerApi
 * @extends {BaseAPI}
 */
export declare class RecurringBillingControllerApi extends BaseAPI {
    /**
     *
     * @summary cancelBillingSubscription
     * @param {string} id id
     * @param {string} userId userId
     * @param {boolean} [isProrated] isProrated
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringBillingControllerApi
     */
    cancelBillingSubscriptionUsingDELETE(id: string, userId: string, isProrated?: boolean, options?: any): Promise<import("axios").AxiosResponse<CancelBillingSubscriptionResponse, any>>;
    /**
     *
     * @summary createBillingSubscription
     * @param {number} userId userId
     * @param {CreateBillingSubscriptionRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringBillingControllerApi
     */
    createBillingSubscriptionUsingPOST(userId: number, request: CreateBillingSubscriptionRequest, options?: any): Promise<import("axios").AxiosResponse<CreateBillingSubscriptionResponse, any>>;
    /**
     *
     * @summary listBillingProducts
     * @param {boolean} [active] active
     * @param {string} [audience] audience
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringBillingControllerApi
     */
    listBillingProductsUsingGET(active?: boolean, audience?: string, limit?: number, options?: any): Promise<import("axios").AxiosResponse<ListBillingProductsResponse, any>>;
    /**
     *
     * @summary listBillingSubscriptions
     * @param {number} userId userId
     * @param {boolean} [includeInactive] includeInactive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringBillingControllerApi
     */
    listBillingSubscriptionsUsingGET(userId: number, includeInactive?: boolean, options?: any): Promise<import("axios").AxiosResponse<ListBillingSubscriptionsResponse, any>>;
    /**
     *
     * @summary listSubscriptionInvoices
     * @param {string} id id
     * @param {number} userId userId
     * @param {number} [limit] limit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringBillingControllerApi
     */
    listSubscriptionInvoicesUsingGET(id: string, userId: number, limit?: number, options?: any): Promise<import("axios").AxiosResponse<ListSubscriptionInvoicesResponse, any>>;
}
/**
 * RefLinkControllerApi - axios parameter creator
 * @export
 */
export declare const RefLinkControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getRefLinksForUser
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRefLinksForUserUsingGET: (userIdString: string, options?: any) => Promise<RequestArgs>;
};
/**
 * RefLinkControllerApi - functional programming interface
 * @export
 */
export declare const RefLinkControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getRefLinksForUser
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRefLinksForUserUsingGET(userIdString: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserRefLinksResponse>>;
};
/**
 * RefLinkControllerApi - factory interface
 * @export
 */
export declare const RefLinkControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getRefLinksForUser
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRefLinksForUserUsingGET(userIdString: string, options?: any): AxiosPromise<GetUserRefLinksResponse>;
};
/**
 * RefLinkControllerApi - object-oriented interface
 * @export
 * @class RefLinkControllerApi
 * @extends {BaseAPI}
 */
export declare class RefLinkControllerApi extends BaseAPI {
    /**
     *
     * @summary getRefLinksForUser
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RefLinkControllerApi
     */
    getRefLinksForUserUsingGET(userIdString: string, options?: any): Promise<import("axios").AxiosResponse<GetUserRefLinksResponse, any>>;
}
/**
 * ReferralCodeControllerApi - axios parameter creator
 * @export
 */
export declare const ReferralCodeControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Only for admins. This will approve and activate a given referral code
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    approveReferralCodeUsingPUT: (codeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Referral codes are currently immutable. Meaning, once a referral code is created then no modification is allowed. In urgent scenarios, we can update the values via SQL. If you want to apply a discount to the referee then enter a negative value (applies both for percentage_discount and cents_value types), and enter a positive value if you want to increase the price.
     * @param {CreateReferralCodeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateReferralCodeUsingPOST: (request: CreateReferralCodeRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getReferralCode
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralCodeUsingGET: (codeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getReferralCodes
     * @param {boolean} [isActive] isActive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralCodesUsingGET: (isActive?: boolean, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary markCodeAsInactive
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCodeAsInactiveUsingDELETE: (codeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Validates and returns the referral code. Validation includes: Are we passed the expiration date? Has the code exceeded it\'s max use count?
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateReferralCodeUsingGET: (codeId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ReferralCodeControllerApi - functional programming interface
 * @export
 */
export declare const ReferralCodeControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Only for admins. This will approve and activate a given referral code
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    approveReferralCodeUsingPUT(codeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Referral codes are currently immutable. Meaning, once a referral code is created then no modification is allowed. In urgent scenarios, we can update the values via SQL. If you want to apply a discount to the referee then enter a negative value (applies both for percentage_discount and cents_value types), and enter a positive value if you want to increase the price.
     * @param {CreateReferralCodeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateReferralCodeUsingPOST(request: CreateReferralCodeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateReferralCodeResponse>>;
    /**
     *
     * @summary getReferralCode
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralCodeUsingGET(codeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetReferralCodeResponse>>;
    /**
     *
     * @summary getReferralCodes
     * @param {boolean} [isActive] isActive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralCodesUsingGET(isActive?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetReferralCodesResponse>>;
    /**
     *
     * @summary markCodeAsInactive
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCodeAsInactiveUsingDELETE(codeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Validates and returns the referral code. Validation includes: Are we passed the expiration date? Has the code exceeded it\'s max use count?
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateReferralCodeUsingGET(codeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetReferralCodeResponse>>;
};
/**
 * ReferralCodeControllerApi - factory interface
 * @export
 */
export declare const ReferralCodeControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Only for admins. This will approve and activate a given referral code
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    approveReferralCodeUsingPUT(codeId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Referral codes are currently immutable. Meaning, once a referral code is created then no modification is allowed. In urgent scenarios, we can update the values via SQL. If you want to apply a discount to the referee then enter a negative value (applies both for percentage_discount and cents_value types), and enter a positive value if you want to increase the price.
     * @param {CreateReferralCodeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    generateReferralCodeUsingPOST(request: CreateReferralCodeRequest, options?: any): AxiosPromise<CreateReferralCodeResponse>;
    /**
     *
     * @summary getReferralCode
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralCodeUsingGET(codeId: string, options?: any): AxiosPromise<GetReferralCodeResponse>;
    /**
     *
     * @summary getReferralCodes
     * @param {boolean} [isActive] isActive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralCodesUsingGET(isActive?: boolean, options?: any): AxiosPromise<GetReferralCodesResponse>;
    /**
     *
     * @summary markCodeAsInactive
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    markCodeAsInactiveUsingDELETE(codeId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Validates and returns the referral code. Validation includes: Are we passed the expiration date? Has the code exceeded it\'s max use count?
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateReferralCodeUsingGET(codeId: string, options?: any): AxiosPromise<GetReferralCodeResponse>;
};
/**
 * ReferralCodeControllerApi - object-oriented interface
 * @export
 * @class ReferralCodeControllerApi
 * @extends {BaseAPI}
 */
export declare class ReferralCodeControllerApi extends BaseAPI {
    /**
     *
     * @summary Only for admins. This will approve and activate a given referral code
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralCodeControllerApi
     */
    approveReferralCodeUsingPUT(codeId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Referral codes are currently immutable. Meaning, once a referral code is created then no modification is allowed. In urgent scenarios, we can update the values via SQL. If you want to apply a discount to the referee then enter a negative value (applies both for percentage_discount and cents_value types), and enter a positive value if you want to increase the price.
     * @param {CreateReferralCodeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralCodeControllerApi
     */
    generateReferralCodeUsingPOST(request: CreateReferralCodeRequest, options?: any): Promise<import("axios").AxiosResponse<CreateReferralCodeResponse, any>>;
    /**
     *
     * @summary getReferralCode
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralCodeControllerApi
     */
    getReferralCodeUsingGET(codeId: string, options?: any): Promise<import("axios").AxiosResponse<GetReferralCodeResponse, any>>;
    /**
     *
     * @summary getReferralCodes
     * @param {boolean} [isActive] isActive
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralCodeControllerApi
     */
    getReferralCodesUsingGET(isActive?: boolean, options?: any): Promise<import("axios").AxiosResponse<GetReferralCodesResponse, any>>;
    /**
     *
     * @summary markCodeAsInactive
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralCodeControllerApi
     */
    markCodeAsInactiveUsingDELETE(codeId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Validates and returns the referral code. Validation includes: Are we passed the expiration date? Has the code exceeded it\'s max use count?
     * @param {string} codeId codeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralCodeControllerApi
     */
    validateReferralCodeUsingGET(codeId: string, options?: any): Promise<import("axios").AxiosResponse<GetReferralCodeResponse, any>>;
}
/**
 * ReferralControllerApi - axios parameter creator
 * @export
 */
export declare const ReferralControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getReferralHistory
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralHistoryUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listReferrals
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listReferralsUsingGET: (userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary publishReferralContacts
     * @param {PublishReferralRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishReferralContactsUsingPOST: (request: PublishReferralRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ReferralControllerApi - functional programming interface
 * @export
 */
export declare const ReferralControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getReferralHistory
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralHistoryUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetReferralsHistoryResponse>>;
    /**
     *
     * @summary listReferrals
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listReferralsUsingGET(userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListReferralsResponse>>;
    /**
     *
     * @summary publishReferralContacts
     * @param {PublishReferralRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishReferralContactsUsingPOST(request: PublishReferralRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PublishReferralContactsResponse>>;
};
/**
 * ReferralControllerApi - factory interface
 * @export
 */
export declare const ReferralControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getReferralHistory
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReferralHistoryUsingGET(options?: any): AxiosPromise<GetReferralsHistoryResponse>;
    /**
     *
     * @summary listReferrals
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listReferralsUsingGET(userId: number, options?: any): AxiosPromise<ListReferralsResponse>;
    /**
     *
     * @summary publishReferralContacts
     * @param {PublishReferralRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishReferralContactsUsingPOST(request: PublishReferralRequest, options?: any): AxiosPromise<PublishReferralContactsResponse>;
};
/**
 * ReferralControllerApi - object-oriented interface
 * @export
 * @class ReferralControllerApi
 * @extends {BaseAPI}
 */
export declare class ReferralControllerApi extends BaseAPI {
    /**
     *
     * @summary getReferralHistory
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralControllerApi
     */
    getReferralHistoryUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetReferralsHistoryResponse, any>>;
    /**
     *
     * @summary listReferrals
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralControllerApi
     */
    listReferralsUsingGET(userId: number, options?: any): Promise<import("axios").AxiosResponse<ListReferralsResponse, any>>;
    /**
     *
     * @summary publishReferralContacts
     * @param {PublishReferralRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralControllerApi
     */
    publishReferralContactsUsingPOST(request: PublishReferralRequest, options?: any): Promise<import("axios").AxiosResponse<PublishReferralContactsResponse, any>>;
}
/**
 * ReferralSourceControllerApi - axios parameter creator
 * @export
 */
export declare const ReferralSourceControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getUserReferralSourceTypes
     * @param {'ALL' | 'ENABLED'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserReferralSourceTypesUsingGET: (flavor?: 'ALL' | 'ENABLED', options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setReferralSource
     * @param {SetReferralSourceRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setReferralSourceUsingPOST: (request: SetReferralSourceRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ReferralSourceControllerApi - functional programming interface
 * @export
 */
export declare const ReferralSourceControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getUserReferralSourceTypes
     * @param {'ALL' | 'ENABLED'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserReferralSourceTypesUsingGET(flavor?: 'ALL' | 'ENABLED', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserReferralSourceTypesResponse>>;
    /**
     *
     * @summary setReferralSource
     * @param {SetReferralSourceRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setReferralSourceUsingPOST(request: SetReferralSourceRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegisterNewUserResponse>>;
};
/**
 * ReferralSourceControllerApi - factory interface
 * @export
 */
export declare const ReferralSourceControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getUserReferralSourceTypes
     * @param {'ALL' | 'ENABLED'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserReferralSourceTypesUsingGET(flavor?: 'ALL' | 'ENABLED', options?: any): AxiosPromise<GetUserReferralSourceTypesResponse>;
    /**
     *
     * @summary setReferralSource
     * @param {SetReferralSourceRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setReferralSourceUsingPOST(request: SetReferralSourceRequest, options?: any): AxiosPromise<RegisterNewUserResponse>;
};
/**
 * ReferralSourceControllerApi - object-oriented interface
 * @export
 * @class ReferralSourceControllerApi
 * @extends {BaseAPI}
 */
export declare class ReferralSourceControllerApi extends BaseAPI {
    /**
     *
     * @summary getUserReferralSourceTypes
     * @param {'ALL' | 'ENABLED'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralSourceControllerApi
     */
    getUserReferralSourceTypesUsingGET(flavor?: 'ALL' | 'ENABLED', options?: any): Promise<import("axios").AxiosResponse<GetUserReferralSourceTypesResponse, any>>;
    /**
     *
     * @summary setReferralSource
     * @param {SetReferralSourceRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReferralSourceControllerApi
     */
    setReferralSourceUsingPOST(request: SetReferralSourceRequest, options?: any): Promise<import("axios").AxiosResponse<RegisterNewUserResponse, any>>;
}
/**
 * RefundEligibilityControllerApi - axios parameter creator
 * @export
 */
export declare const RefundEligibilityControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary isRefundEligible
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    isRefundEligibleUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * RefundEligibilityControllerApi - functional programming interface
 * @export
 */
export declare const RefundEligibilityControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary isRefundEligible
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    isRefundEligibleUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IsRefundEligibleResponse>>;
};
/**
 * RefundEligibilityControllerApi - factory interface
 * @export
 */
export declare const RefundEligibilityControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary isRefundEligible
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    isRefundEligibleUsingGET(caseId: string, options?: any): AxiosPromise<IsRefundEligibleResponse>;
};
/**
 * RefundEligibilityControllerApi - object-oriented interface
 * @export
 * @class RefundEligibilityControllerApi
 * @extends {BaseAPI}
 */
export declare class RefundEligibilityControllerApi extends BaseAPI {
    /**
     *
     * @summary isRefundEligible
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RefundEligibilityControllerApi
     */
    isRefundEligibleUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<IsRefundEligibleResponse, any>>;
}
/**
 * RegistrationControllerApi - axios parameter creator
 * @export
 */
export declare const RegistrationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary registerNewUser
     * @param {RegisterNewUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerNewUserUsingPOST: (request: RegisterNewUserRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateBranchLinksForAllUsers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBranchLinksForAllUsersUsingPOST: (options?: any) => Promise<RequestArgs>;
};
/**
 * RegistrationControllerApi - functional programming interface
 * @export
 */
export declare const RegistrationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary registerNewUser
     * @param {RegisterNewUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerNewUserUsingPOST(request: RegisterNewUserRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegisterNewUserResponse>>;
    /**
     *
     * @summary updateBranchLinksForAllUsers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBranchLinksForAllUsersUsingPOST(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * RegistrationControllerApi - factory interface
 * @export
 */
export declare const RegistrationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary registerNewUser
     * @param {RegisterNewUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerNewUserUsingPOST(request: RegisterNewUserRequest, options?: any): AxiosPromise<RegisterNewUserResponse>;
    /**
     *
     * @summary updateBranchLinksForAllUsers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateBranchLinksForAllUsersUsingPOST(options?: any): AxiosPromise<object>;
};
/**
 * RegistrationControllerApi - object-oriented interface
 * @export
 * @class RegistrationControllerApi
 * @extends {BaseAPI}
 */
export declare class RegistrationControllerApi extends BaseAPI {
    /**
     *
     * @summary registerNewUser
     * @param {RegisterNewUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RegistrationControllerApi
     */
    registerNewUserUsingPOST(request: RegisterNewUserRequest, options?: any): Promise<import("axios").AxiosResponse<RegisterNewUserResponse, any>>;
    /**
     *
     * @summary updateBranchLinksForAllUsers
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RegistrationControllerApi
     */
    updateBranchLinksForAllUsersUsingPOST(options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * ReportingControllerApi - axios parameter creator
 * @export
 */
export declare const ReportingControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getCourtCoverageForCountyReport
     * @param {number} countyId countyId
     * @param {string} regionCode regionCode
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageForCountyReportUsingGET: (countyId: number, regionCode: string, urWindowInDays?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCourtCoverageForStateReport
     * @param {string} regionCode regionCode
     * @param {number} [countyId] countyId
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageForStateReportUsingGET: (regionCode: string, countyId?: number, urWindowInDays?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCourtCoverageReport
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageReportUsingGET: (urWindowInDays?: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getLawfirmCoverageReport
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCoverageReportUsingGET: (countyId?: number, regionCode?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ReportingControllerApi - functional programming interface
 * @export
 */
export declare const ReportingControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getCourtCoverageForCountyReport
     * @param {number} countyId countyId
     * @param {string} regionCode regionCode
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageForCountyReportUsingGET(countyId: number, regionCode: string, urWindowInDays?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCourtCoverageForCountyReportResponse>>;
    /**
     *
     * @summary getCourtCoverageForStateReport
     * @param {string} regionCode regionCode
     * @param {number} [countyId] countyId
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageForStateReportUsingGET(regionCode: string, countyId?: number, urWindowInDays?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCourtCoverageForStateReportResponse>>;
    /**
     *
     * @summary getCourtCoverageReport
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageReportUsingGET(urWindowInDays?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCourtCoverageReportResponse>>;
    /**
     *
     * @summary getLawfirmCoverageReport
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCoverageReportUsingGET(countyId?: number, regionCode?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmCoverageReportResponse>>;
};
/**
 * ReportingControllerApi - factory interface
 * @export
 */
export declare const ReportingControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getCourtCoverageForCountyReport
     * @param {number} countyId countyId
     * @param {string} regionCode regionCode
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageForCountyReportUsingGET(countyId: number, regionCode: string, urWindowInDays?: number, options?: any): AxiosPromise<GetCourtCoverageForCountyReportResponse>;
    /**
     *
     * @summary getCourtCoverageForStateReport
     * @param {string} regionCode regionCode
     * @param {number} [countyId] countyId
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageForStateReportUsingGET(regionCode: string, countyId?: number, urWindowInDays?: number, options?: any): AxiosPromise<GetCourtCoverageForStateReportResponse>;
    /**
     *
     * @summary getCourtCoverageReport
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourtCoverageReportUsingGET(urWindowInDays?: number, options?: any): AxiosPromise<GetCourtCoverageReportResponse>;
    /**
     *
     * @summary getLawfirmCoverageReport
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmCoverageReportUsingGET(countyId?: number, regionCode?: string, options?: any): AxiosPromise<GetLawfirmCoverageReportResponse>;
};
/**
 * ReportingControllerApi - object-oriented interface
 * @export
 * @class ReportingControllerApi
 * @extends {BaseAPI}
 */
export declare class ReportingControllerApi extends BaseAPI {
    /**
     *
     * @summary getCourtCoverageForCountyReport
     * @param {number} countyId countyId
     * @param {string} regionCode regionCode
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportingControllerApi
     */
    getCourtCoverageForCountyReportUsingGET(countyId: number, regionCode: string, urWindowInDays?: number, options?: any): Promise<import("axios").AxiosResponse<GetCourtCoverageForCountyReportResponse, any>>;
    /**
     *
     * @summary getCourtCoverageForStateReport
     * @param {string} regionCode regionCode
     * @param {number} [countyId] countyId
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportingControllerApi
     */
    getCourtCoverageForStateReportUsingGET(regionCode: string, countyId?: number, urWindowInDays?: number, options?: any): Promise<import("axios").AxiosResponse<GetCourtCoverageForStateReportResponse, any>>;
    /**
     *
     * @summary getCourtCoverageReport
     * @param {number} [urWindowInDays] urWindowInDays
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportingControllerApi
     */
    getCourtCoverageReportUsingGET(urWindowInDays?: number, options?: any): Promise<import("axios").AxiosResponse<GetCourtCoverageReportResponse, any>>;
    /**
     *
     * @summary getLawfirmCoverageReport
     * @param {number} [countyId] countyId
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportingControllerApi
     */
    getLawfirmCoverageReportUsingGET(countyId?: number, regionCode?: string, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmCoverageReportResponse, any>>;
}
/**
 * ScheduledTaskControllerApi - axios parameter creator
 * @export
 */
export declare const ScheduledTaskControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary deleteScheduledTask
     * @param {number} taskId taskId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteScheduledTaskUsingDELETE: (taskId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getScheduledTasks
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getScheduledTasksUsingGET: (caseId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary rescheduleTask
     * @param {string} taskId taskId
     * @param {RescheduleTaskRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rescheduleTaskUsingPUT: (taskId: string, request: RescheduleTaskRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ScheduledTaskControllerApi - functional programming interface
 * @export
 */
export declare const ScheduledTaskControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary deleteScheduledTask
     * @param {number} taskId taskId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteScheduledTaskUsingDELETE(taskId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ScheduledTaskGetResponse>>;
    /**
     *
     * @summary getScheduledTasks
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getScheduledTasksUsingGET(caseId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ScheduledTaskGetResponse>>;
    /**
     *
     * @summary rescheduleTask
     * @param {string} taskId taskId
     * @param {RescheduleTaskRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rescheduleTaskUsingPUT(taskId: string, request: RescheduleTaskRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ScheduledTaskControllerApi - factory interface
 * @export
 */
export declare const ScheduledTaskControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary deleteScheduledTask
     * @param {number} taskId taskId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteScheduledTaskUsingDELETE(taskId: number, options?: any): AxiosPromise<ScheduledTaskGetResponse>;
    /**
     *
     * @summary getScheduledTasks
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getScheduledTasksUsingGET(caseId: string, options?: any): AxiosPromise<ScheduledTaskGetResponse>;
    /**
     *
     * @summary rescheduleTask
     * @param {string} taskId taskId
     * @param {RescheduleTaskRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rescheduleTaskUsingPUT(taskId: string, request: RescheduleTaskRequest, options?: any): AxiosPromise<void>;
};
/**
 * ScheduledTaskControllerApi - object-oriented interface
 * @export
 * @class ScheduledTaskControllerApi
 * @extends {BaseAPI}
 */
export declare class ScheduledTaskControllerApi extends BaseAPI {
    /**
     *
     * @summary deleteScheduledTask
     * @param {number} taskId taskId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ScheduledTaskControllerApi
     */
    deleteScheduledTaskUsingDELETE(taskId: number, options?: any): Promise<import("axios").AxiosResponse<ScheduledTaskGetResponse, any>>;
    /**
     *
     * @summary getScheduledTasks
     * @param {string} caseId caseId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ScheduledTaskControllerApi
     */
    getScheduledTasksUsingGET(caseId: string, options?: any): Promise<import("axios").AxiosResponse<ScheduledTaskGetResponse, any>>;
    /**
     *
     * @summary rescheduleTask
     * @param {string} taskId taskId
     * @param {RescheduleTaskRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ScheduledTaskControllerApi
     */
    rescheduleTaskUsingPUT(taskId: string, request: RescheduleTaskRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * SnsListenerControllerApi - axios parameter creator
 * @export
 */
export declare const SnsListenerControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary handleBounceComplaintEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleBounceComplaintEmailsUsingPOST: (request: SNSNotificationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary handleIncomingEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleIncomingEmailsUsingPOST: (request: SNSNotificationRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * SnsListenerControllerApi - functional programming interface
 * @export
 */
export declare const SnsListenerControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary handleBounceComplaintEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleBounceComplaintEmailsUsingPOST(request: SNSNotificationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary handleIncomingEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleIncomingEmailsUsingPOST(request: SNSNotificationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * SnsListenerControllerApi - factory interface
 * @export
 */
export declare const SnsListenerControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary handleBounceComplaintEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleBounceComplaintEmailsUsingPOST(request: SNSNotificationRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary handleIncomingEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleIncomingEmailsUsingPOST(request: SNSNotificationRequest, options?: any): AxiosPromise<void>;
};
/**
 * SnsListenerControllerApi - object-oriented interface
 * @export
 * @class SnsListenerControllerApi
 * @extends {BaseAPI}
 */
export declare class SnsListenerControllerApi extends BaseAPI {
    /**
     *
     * @summary handleBounceComplaintEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SnsListenerControllerApi
     */
    handleBounceComplaintEmailsUsingPOST(request: SNSNotificationRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary handleIncomingEmails
     * @param {SNSNotificationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SnsListenerControllerApi
     */
    handleIncomingEmailsUsingPOST(request: SNSNotificationRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * SocialLoginControllerApi - axios parameter creator
 * @export
 */
export declare const SocialLoginControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary appleConnect
     * @param {AppleLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    appleConnectUsingPOST: (request: AppleLoginRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary facebookConnect
     * @param {string} providerId providerId
     * @param {SocialLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    facebookConnectUsingPOST: (providerId: string, request: SocialLoginRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * SocialLoginControllerApi - functional programming interface
 * @export
 */
export declare const SocialLoginControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary appleConnect
     * @param {AppleLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    appleConnectUsingPOST(request: AppleLoginRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SocialLoginResponse>>;
    /**
     *
     * @summary facebookConnect
     * @param {string} providerId providerId
     * @param {SocialLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    facebookConnectUsingPOST(providerId: string, request: SocialLoginRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SocialLoginResponse>>;
};
/**
 * SocialLoginControllerApi - factory interface
 * @export
 */
export declare const SocialLoginControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary appleConnect
     * @param {AppleLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    appleConnectUsingPOST(request: AppleLoginRequest, options?: any): AxiosPromise<SocialLoginResponse>;
    /**
     *
     * @summary facebookConnect
     * @param {string} providerId providerId
     * @param {SocialLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    facebookConnectUsingPOST(providerId: string, request: SocialLoginRequest, options?: any): AxiosPromise<SocialLoginResponse>;
};
/**
 * SocialLoginControllerApi - object-oriented interface
 * @export
 * @class SocialLoginControllerApi
 * @extends {BaseAPI}
 */
export declare class SocialLoginControllerApi extends BaseAPI {
    /**
     *
     * @summary appleConnect
     * @param {AppleLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SocialLoginControllerApi
     */
    appleConnectUsingPOST(request: AppleLoginRequest, options?: any): Promise<import("axios").AxiosResponse<SocialLoginResponse, any>>;
    /**
     *
     * @summary facebookConnect
     * @param {string} providerId providerId
     * @param {SocialLoginRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SocialLoginControllerApi
     */
    facebookConnectUsingPOST(providerId: string, request: SocialLoginRequest, options?: any): Promise<import("axios").AxiosResponse<SocialLoginResponse, any>>;
}
/**
 * StripeCardControllerApi - axios parameter creator
 * @export
 */
export declare const StripeCardControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addACHToLawfirmStripeAccount
     * @param {string} lawfirmId lawfirmId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addACHToLawfirmStripeAccountUsingPOST: (lawfirmId: string, request: AddACHToStripeAccountRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary addACHToUserStripeAccount
     * @param {string} userId userId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addACHToUserStripeAccountUsingPOST: (userId: string, request: AddACHToStripeAccountRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary addCardToStripeAccount
     * @param {AddCardToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCardToStripeAccountUsingPOST: (request: AddCardToStripeAccountRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteBankAccountFromLawfirmStripeAccount
     * @param {string} bankAccountId bankAccountId
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBankAccountFromLawfirmStripeAccountUsingDELETE: (bankAccountId: string, lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteCardForUser
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCardForUserUsingDELETE: (cardId: string, userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCardUsingDELETE: (cardId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCardUsingGET: (cardId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieves all the payment methods available on the lawfirm\'s Stripe account.
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPaymentMethodsUsingGET: (lawfirmId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieves all the payment methods available on the user\'s Stripe account.
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentMethodsForUserUsingGET: (userIdString: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setCardAsPrimary
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCardAsPrimaryUsingPUT: (cardId: string, userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setDefaultPaymentMethodForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripePaymentSourceId stripePaymentSourceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setDefaultPaymentMethodForLawfirmUsingPUT: (lawfirmId: number, stripePaymentSourceId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * StripeCardControllerApi - functional programming interface
 * @export
 */
export declare const StripeCardControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addACHToLawfirmStripeAccount
     * @param {string} lawfirmId lawfirmId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addACHToLawfirmStripeAccountUsingPOST(lawfirmId: string, request: AddACHToStripeAccountRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary addACHToUserStripeAccount
     * @param {string} userId userId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addACHToUserStripeAccountUsingPOST(userId: string, request: AddACHToStripeAccountRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary addCardToStripeAccount
     * @param {AddCardToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCardToStripeAccountUsingPOST(request: AddCardToStripeAccountRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddCardToStripeAccountResponse>>;
    /**
     *
     * @summary deleteBankAccountFromLawfirmStripeAccount
     * @param {string} bankAccountId bankAccountId
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBankAccountFromLawfirmStripeAccountUsingDELETE(bankAccountId: string, lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary deleteCardForUser
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCardForUserUsingDELETE(cardId: string, userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StripeCardDomain>>;
    /**
     *
     * @summary deleteCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCardUsingDELETE(cardId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StripeCardDomain>>;
    /**
     *
     * @summary getCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCardUsingGET(cardId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StripeCardDomain>>;
    /**
     *
     * @summary Retrieves all the payment methods available on the lawfirm\'s Stripe account.
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPaymentMethodsUsingGET(lawfirmId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLawfirmPaymentMethodsResponse>>;
    /**
     *
     * @summary Retrieves all the payment methods available on the user\'s Stripe account.
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentMethodsForUserUsingGET(userIdString: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPaymentMethodsForUserResponse>>;
    /**
     *
     * @summary setCardAsPrimary
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCardAsPrimaryUsingPUT(cardId: string, userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary setDefaultPaymentMethodForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripePaymentSourceId stripePaymentSourceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setDefaultPaymentMethodForLawfirmUsingPUT(lawfirmId: number, stripePaymentSourceId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * StripeCardControllerApi - factory interface
 * @export
 */
export declare const StripeCardControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addACHToLawfirmStripeAccount
     * @param {string} lawfirmId lawfirmId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addACHToLawfirmStripeAccountUsingPOST(lawfirmId: string, request: AddACHToStripeAccountRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary addACHToUserStripeAccount
     * @param {string} userId userId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addACHToUserStripeAccountUsingPOST(userId: string, request: AddACHToStripeAccountRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary addCardToStripeAccount
     * @param {AddCardToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addCardToStripeAccountUsingPOST(request: AddCardToStripeAccountRequest, options?: any): AxiosPromise<AddCardToStripeAccountResponse>;
    /**
     *
     * @summary deleteBankAccountFromLawfirmStripeAccount
     * @param {string} bankAccountId bankAccountId
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBankAccountFromLawfirmStripeAccountUsingDELETE(bankAccountId: string, lawfirmId: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary deleteCardForUser
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCardForUserUsingDELETE(cardId: string, userId: string, options?: any): AxiosPromise<StripeCardDomain>;
    /**
     *
     * @summary deleteCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCardUsingDELETE(cardId: string, options?: any): AxiosPromise<StripeCardDomain>;
    /**
     *
     * @summary getCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCardUsingGET(cardId: string, options?: any): AxiosPromise<StripeCardDomain>;
    /**
     *
     * @summary Retrieves all the payment methods available on the lawfirm\'s Stripe account.
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLawfirmPaymentMethodsUsingGET(lawfirmId: number, options?: any): AxiosPromise<GetLawfirmPaymentMethodsResponse>;
    /**
     *
     * @summary Retrieves all the payment methods available on the user\'s Stripe account.
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPaymentMethodsForUserUsingGET(userIdString: string, options?: any): AxiosPromise<GetPaymentMethodsForUserResponse>;
    /**
     *
     * @summary setCardAsPrimary
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setCardAsPrimaryUsingPUT(cardId: string, userId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary setDefaultPaymentMethodForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripePaymentSourceId stripePaymentSourceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setDefaultPaymentMethodForLawfirmUsingPUT(lawfirmId: number, stripePaymentSourceId: string, options?: any): AxiosPromise<void>;
};
/**
 * StripeCardControllerApi - object-oriented interface
 * @export
 * @class StripeCardControllerApi
 * @extends {BaseAPI}
 */
export declare class StripeCardControllerApi extends BaseAPI {
    /**
     *
     * @summary addACHToLawfirmStripeAccount
     * @param {string} lawfirmId lawfirmId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    addACHToLawfirmStripeAccountUsingPOST(lawfirmId: string, request: AddACHToStripeAccountRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary addACHToUserStripeAccount
     * @param {string} userId userId
     * @param {AddACHToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    addACHToUserStripeAccountUsingPOST(userId: string, request: AddACHToStripeAccountRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary addCardToStripeAccount
     * @param {AddCardToStripeAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    addCardToStripeAccountUsingPOST(request: AddCardToStripeAccountRequest, options?: any): Promise<import("axios").AxiosResponse<AddCardToStripeAccountResponse, any>>;
    /**
     *
     * @summary deleteBankAccountFromLawfirmStripeAccount
     * @param {string} bankAccountId bankAccountId
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    deleteBankAccountFromLawfirmStripeAccountUsingDELETE(bankAccountId: string, lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary deleteCardForUser
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    deleteCardForUserUsingDELETE(cardId: string, userId: string, options?: any): Promise<import("axios").AxiosResponse<StripeCardDomain, any>>;
    /**
     *
     * @summary deleteCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    deleteCardUsingDELETE(cardId: string, options?: any): Promise<import("axios").AxiosResponse<StripeCardDomain, any>>;
    /**
     *
     * @summary getCard
     * @param {string} cardId cardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    getCardUsingGET(cardId: string, options?: any): Promise<import("axios").AxiosResponse<StripeCardDomain, any>>;
    /**
     *
     * @summary Retrieves all the payment methods available on the lawfirm\'s Stripe account.
     * @param {number} lawfirmId lawfirmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    getLawfirmPaymentMethodsUsingGET(lawfirmId: number, options?: any): Promise<import("axios").AxiosResponse<GetLawfirmPaymentMethodsResponse, any>>;
    /**
     *
     * @summary Retrieves all the payment methods available on the user\'s Stripe account.
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    getPaymentMethodsForUserUsingGET(userIdString: string, options?: any): Promise<import("axios").AxiosResponse<GetPaymentMethodsForUserResponse, any>>;
    /**
     *
     * @summary setCardAsPrimary
     * @param {string} cardId cardId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    setCardAsPrimaryUsingPUT(cardId: string, userId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary setDefaultPaymentMethodForLawfirm
     * @param {number} lawfirmId lawfirmId
     * @param {string} stripePaymentSourceId stripePaymentSourceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeCardControllerApi
     */
    setDefaultPaymentMethodForLawfirmUsingPUT(lawfirmId: number, stripePaymentSourceId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * StripeControllerApi - axios parameter creator
 * @export
 */
export declare const StripeControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary connectStripeAccount
     * @param {string} code code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectStripeAccountUsingPOST: (code: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary createConnectAccountLink
     * @param {CreateConnectAccountLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConnectAccountLinkUsingPOST: (request: CreateConnectAccountLinkRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary createStripeConnectAccount
     * @param {CreateStripeConnectAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createStripeConnectAccountUsingPOST: (request: CreateStripeConnectAccountRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary handleOrphanedStripeCharges
     * @param {HandleOrphanedStripeChargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleOrphanedStripeChargesUsingPOST: (request: HandleOrphanedStripeChargeRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateDispute
     * @param {string} disputeId disputeId
     * @param {UpdateDisputeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDisputeUsingPUT: (disputeId: string, request: UpdateDisputeRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * StripeControllerApi - functional programming interface
 * @export
 */
export declare const StripeControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary connectStripeAccount
     * @param {string} code code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectStripeAccountUsingPOST(code: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary createConnectAccountLink
     * @param {CreateConnectAccountLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConnectAccountLinkUsingPOST(request: CreateConnectAccountLinkRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateConnectAccountLinkResponse>>;
    /**
     *
     * @summary createStripeConnectAccount
     * @param {CreateStripeConnectAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createStripeConnectAccountUsingPOST(request: CreateStripeConnectAccountRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateStripeConnectAccountResponse>>;
    /**
     *
     * @summary handleOrphanedStripeCharges
     * @param {HandleOrphanedStripeChargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleOrphanedStripeChargesUsingPOST(request: HandleOrphanedStripeChargeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HandleOrphanedStripeChargeResponse>>;
    /**
     *
     * @summary updateDispute
     * @param {string} disputeId disputeId
     * @param {UpdateDisputeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDisputeUsingPUT(disputeId: string, request: UpdateDisputeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * StripeControllerApi - factory interface
 * @export
 */
export declare const StripeControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary connectStripeAccount
     * @param {string} code code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    connectStripeAccountUsingPOST(code: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary createConnectAccountLink
     * @param {CreateConnectAccountLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConnectAccountLinkUsingPOST(request: CreateConnectAccountLinkRequest, options?: any): AxiosPromise<CreateConnectAccountLinkResponse>;
    /**
     *
     * @summary createStripeConnectAccount
     * @param {CreateStripeConnectAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createStripeConnectAccountUsingPOST(request: CreateStripeConnectAccountRequest, options?: any): AxiosPromise<CreateStripeConnectAccountResponse>;
    /**
     *
     * @summary handleOrphanedStripeCharges
     * @param {HandleOrphanedStripeChargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleOrphanedStripeChargesUsingPOST(request: HandleOrphanedStripeChargeRequest, options?: any): AxiosPromise<HandleOrphanedStripeChargeResponse>;
    /**
     *
     * @summary updateDispute
     * @param {string} disputeId disputeId
     * @param {UpdateDisputeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDisputeUsingPUT(disputeId: string, request: UpdateDisputeRequest, options?: any): AxiosPromise<void>;
};
/**
 * StripeControllerApi - object-oriented interface
 * @export
 * @class StripeControllerApi
 * @extends {BaseAPI}
 */
export declare class StripeControllerApi extends BaseAPI {
    /**
     *
     * @summary connectStripeAccount
     * @param {string} code code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeControllerApi
     */
    connectStripeAccountUsingPOST(code: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary createConnectAccountLink
     * @param {CreateConnectAccountLinkRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeControllerApi
     */
    createConnectAccountLinkUsingPOST(request: CreateConnectAccountLinkRequest, options?: any): Promise<import("axios").AxiosResponse<CreateConnectAccountLinkResponse, any>>;
    /**
     *
     * @summary createStripeConnectAccount
     * @param {CreateStripeConnectAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeControllerApi
     */
    createStripeConnectAccountUsingPOST(request: CreateStripeConnectAccountRequest, options?: any): Promise<import("axios").AxiosResponse<CreateStripeConnectAccountResponse, any>>;
    /**
     *
     * @summary handleOrphanedStripeCharges
     * @param {HandleOrphanedStripeChargeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeControllerApi
     */
    handleOrphanedStripeChargesUsingPOST(request: HandleOrphanedStripeChargeRequest, options?: any): Promise<import("axios").AxiosResponse<HandleOrphanedStripeChargeResponse, any>>;
    /**
     *
     * @summary updateDispute
     * @param {string} disputeId disputeId
     * @param {UpdateDisputeRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeControllerApi
     */
    updateDisputeUsingPUT(disputeId: string, request: UpdateDisputeRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * StripeSyncControllerApi - axios parameter creator
 * @export
 */
export declare const StripeSyncControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary syncAllDisputes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncAllDisputesUsingPOST: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary syncDispute
     * @param {string} disputeId disputeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncDisputeUsingPOST: (disputeId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary syncStripeCharges
     * @param {SyncStripeChargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeChargesUsingPOST: (request: SyncStripeChargesRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary syncStripePayments
     * @param {SyncStripePaymentsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripePaymentsUsingPOST: (request: SyncStripePaymentsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary syncStripeRefunds
     * @param {SyncStripeRefundsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeRefundsUsingPOST: (request: SyncStripeRefundsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary syncStripeTransfers
     * @param {SyncStripeTransfersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeTransfersUsingPOST: (request: SyncStripeTransfersRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * StripeSyncControllerApi - functional programming interface
 * @export
 */
export declare const StripeSyncControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary syncAllDisputes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncAllDisputesUsingPOST(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary syncDispute
     * @param {string} disputeId disputeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncDisputeUsingPOST(disputeId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SyncStripeDisputeResponse>>;
    /**
     *
     * @summary syncStripeCharges
     * @param {SyncStripeChargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeChargesUsingPOST(request: SyncStripeChargesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SyncStripeChargesResponse>>;
    /**
     *
     * @summary syncStripePayments
     * @param {SyncStripePaymentsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripePaymentsUsingPOST(request: SyncStripePaymentsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SyncStripePaymentsResponse>>;
    /**
     *
     * @summary syncStripeRefunds
     * @param {SyncStripeRefundsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeRefundsUsingPOST(request: SyncStripeRefundsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SyncStripeChargesResponse>>;
    /**
     *
     * @summary syncStripeTransfers
     * @param {SyncStripeTransfersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeTransfersUsingPOST(request: SyncStripeTransfersRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SyncStripeTransfersResponse>>;
};
/**
 * StripeSyncControllerApi - factory interface
 * @export
 */
export declare const StripeSyncControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary syncAllDisputes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncAllDisputesUsingPOST(options?: any): AxiosPromise<void>;
    /**
     *
     * @summary syncDispute
     * @param {string} disputeId disputeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncDisputeUsingPOST(disputeId: string, options?: any): AxiosPromise<SyncStripeDisputeResponse>;
    /**
     *
     * @summary syncStripeCharges
     * @param {SyncStripeChargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeChargesUsingPOST(request: SyncStripeChargesRequest, options?: any): AxiosPromise<SyncStripeChargesResponse>;
    /**
     *
     * @summary syncStripePayments
     * @param {SyncStripePaymentsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripePaymentsUsingPOST(request: SyncStripePaymentsRequest, options?: any): AxiosPromise<SyncStripePaymentsResponse>;
    /**
     *
     * @summary syncStripeRefunds
     * @param {SyncStripeRefundsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeRefundsUsingPOST(request: SyncStripeRefundsRequest, options?: any): AxiosPromise<SyncStripeChargesResponse>;
    /**
     *
     * @summary syncStripeTransfers
     * @param {SyncStripeTransfersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    syncStripeTransfersUsingPOST(request: SyncStripeTransfersRequest, options?: any): AxiosPromise<SyncStripeTransfersResponse>;
};
/**
 * StripeSyncControllerApi - object-oriented interface
 * @export
 * @class StripeSyncControllerApi
 * @extends {BaseAPI}
 */
export declare class StripeSyncControllerApi extends BaseAPI {
    /**
     *
     * @summary syncAllDisputes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeSyncControllerApi
     */
    syncAllDisputesUsingPOST(options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary syncDispute
     * @param {string} disputeId disputeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeSyncControllerApi
     */
    syncDisputeUsingPOST(disputeId: string, options?: any): Promise<import("axios").AxiosResponse<SyncStripeDisputeResponse, any>>;
    /**
     *
     * @summary syncStripeCharges
     * @param {SyncStripeChargesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeSyncControllerApi
     */
    syncStripeChargesUsingPOST(request: SyncStripeChargesRequest, options?: any): Promise<import("axios").AxiosResponse<SyncStripeChargesResponse, any>>;
    /**
     *
     * @summary syncStripePayments
     * @param {SyncStripePaymentsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeSyncControllerApi
     */
    syncStripePaymentsUsingPOST(request: SyncStripePaymentsRequest, options?: any): Promise<import("axios").AxiosResponse<SyncStripePaymentsResponse, any>>;
    /**
     *
     * @summary syncStripeRefunds
     * @param {SyncStripeRefundsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeSyncControllerApi
     */
    syncStripeRefundsUsingPOST(request: SyncStripeRefundsRequest, options?: any): Promise<import("axios").AxiosResponse<SyncStripeChargesResponse, any>>;
    /**
     *
     * @summary syncStripeTransfers
     * @param {SyncStripeTransfersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeSyncControllerApi
     */
    syncStripeTransfersUsingPOST(request: SyncStripeTransfersRequest, options?: any): Promise<import("axios").AxiosResponse<SyncStripeTransfersResponse, any>>;
}
/**
 * StripeWebhookControllerApi - axios parameter creator
 * @export
 */
export declare const StripeWebhookControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary handleStripeWebhookFromLawfirmAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleStripeWebhookFromLawfirmAccountUsingPOST: (request?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary handleStripeWebhookFromOTRAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleStripeWebhookFromOTRAccountUsingPOST: (request?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * StripeWebhookControllerApi - functional programming interface
 * @export
 */
export declare const StripeWebhookControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary handleStripeWebhookFromLawfirmAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleStripeWebhookFromLawfirmAccountUsingPOST(request?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @summary handleStripeWebhookFromOTRAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleStripeWebhookFromOTRAccountUsingPOST(request?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * StripeWebhookControllerApi - factory interface
 * @export
 */
export declare const StripeWebhookControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary handleStripeWebhookFromLawfirmAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleStripeWebhookFromLawfirmAccountUsingPOST(request?: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @summary handleStripeWebhookFromOTRAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleStripeWebhookFromOTRAccountUsingPOST(request?: string, options?: any): AxiosPromise<string>;
};
/**
 * StripeWebhookControllerApi - object-oriented interface
 * @export
 * @class StripeWebhookControllerApi
 * @extends {BaseAPI}
 */
export declare class StripeWebhookControllerApi extends BaseAPI {
    /**
     *
     * @summary handleStripeWebhookFromLawfirmAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeWebhookControllerApi
     */
    handleStripeWebhookFromLawfirmAccountUsingPOST(request?: string, options?: any): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @summary handleStripeWebhookFromOTRAccount
     * @param {string} [request] request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeWebhookControllerApi
     */
    handleStripeWebhookFromOTRAccountUsingPOST(request?: string, options?: any): Promise<import("axios").AxiosResponse<string, any>>;
}
/**
 * TicketReviewControllerApi - axios parameter creator
 * @export
 */
export declare const TicketReviewControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getTicketReviewInfo
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTicketReviewInfoUsingGET: (citationId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary persistTicketEvaluation
     * @param {PersistTicketEvaluationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    persistTicketEvaluationUsingPOST: (request: PersistTicketEvaluationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateTicketEvaluationRequest
     * @param {number} ticketEvaluationRequestId ticketEvaluationRequestId
     * @param {TicketReviewRequestReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateTicketEvaluationRequestUsingPUT: (ticketEvaluationRequestId: number, request: TicketReviewRequestReq, options?: any) => Promise<RequestArgs>;
};
/**
 * TicketReviewControllerApi - functional programming interface
 * @export
 */
export declare const TicketReviewControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getTicketReviewInfo
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTicketReviewInfoUsingGET(citationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTicketReviewResponse>>;
    /**
     *
     * @summary persistTicketEvaluation
     * @param {PersistTicketEvaluationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    persistTicketEvaluationUsingPOST(request: PersistTicketEvaluationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    /**
     *
     * @summary updateTicketEvaluationRequest
     * @param {number} ticketEvaluationRequestId ticketEvaluationRequestId
     * @param {TicketReviewRequestReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateTicketEvaluationRequestUsingPUT(ticketEvaluationRequestId: number, request: TicketReviewRequestReq, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * TicketReviewControllerApi - factory interface
 * @export
 */
export declare const TicketReviewControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getTicketReviewInfo
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTicketReviewInfoUsingGET(citationId: string, options?: any): AxiosPromise<GetTicketReviewResponse>;
    /**
     *
     * @summary persistTicketEvaluation
     * @param {PersistTicketEvaluationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    persistTicketEvaluationUsingPOST(request: PersistTicketEvaluationRequest, options?: any): AxiosPromise<number>;
    /**
     *
     * @summary updateTicketEvaluationRequest
     * @param {number} ticketEvaluationRequestId ticketEvaluationRequestId
     * @param {TicketReviewRequestReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateTicketEvaluationRequestUsingPUT(ticketEvaluationRequestId: number, request: TicketReviewRequestReq, options?: any): AxiosPromise<object>;
};
/**
 * TicketReviewControllerApi - object-oriented interface
 * @export
 * @class TicketReviewControllerApi
 * @extends {BaseAPI}
 */
export declare class TicketReviewControllerApi extends BaseAPI {
    /**
     *
     * @summary getTicketReviewInfo
     * @param {string} citationId citationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TicketReviewControllerApi
     */
    getTicketReviewInfoUsingGET(citationId: string, options?: any): Promise<import("axios").AxiosResponse<GetTicketReviewResponse, any>>;
    /**
     *
     * @summary persistTicketEvaluation
     * @param {PersistTicketEvaluationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TicketReviewControllerApi
     */
    persistTicketEvaluationUsingPOST(request: PersistTicketEvaluationRequest, options?: any): Promise<import("axios").AxiosResponse<number, any>>;
    /**
     *
     * @summary updateTicketEvaluationRequest
     * @param {number} ticketEvaluationRequestId ticketEvaluationRequestId
     * @param {TicketReviewRequestReq} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TicketReviewControllerApi
     */
    updateTicketEvaluationRequestUsingPUT(ticketEvaluationRequestId: number, request: TicketReviewRequestReq, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * TrafficViolationControllerApi - axios parameter creator
 * @export
 */
export declare const TrafficViolationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addViolation
     * @param {boolean} isLive isLive
     * @param {AddViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addViolationUsingPOST: (isLive: boolean, request: AddViolationRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteViolation
     * @param {number} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteViolationUsingDELETE: (violationId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getRegionsWithViolations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRegionsWithViolationsUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getTrafficViolationTypes
     * @param {string} [audience] audience
     * @param {string} [flavor] flavor
     * @param {boolean} [includePenalties] includePenalties
     * @param {string} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrafficViolationTypesUsingGET: (audience?: string, flavor?: string, includePenalties?: boolean, state?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary listViolationClassifications
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listViolationClassificationsUsingGET: (regionCode?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateViolation
     * @param {number} violationId violationId
     * @param {UpdateViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateViolationUsingPUT: (violationId: number, request: UpdateViolationRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * TrafficViolationControllerApi - functional programming interface
 * @export
 */
export declare const TrafficViolationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addViolation
     * @param {boolean} isLive isLive
     * @param {AddViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addViolationUsingPOST(isLive: boolean, request: AddViolationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddViolationResponse>>;
    /**
     *
     * @summary deleteViolation
     * @param {number} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteViolationUsingDELETE(violationId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary getRegionsWithViolations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRegionsWithViolationsUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRegionsWithViolationsResponse>>;
    /**
     *
     * @summary getTrafficViolationTypes
     * @param {string} [audience] audience
     * @param {string} [flavor] flavor
     * @param {boolean} [includePenalties] includePenalties
     * @param {string} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrafficViolationTypesUsingGET(audience?: string, flavor?: string, includePenalties?: boolean, state?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTrafficViolationTypesResponse>>;
    /**
     *
     * @summary listViolationClassifications
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listViolationClassificationsUsingGET(regionCode?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListViolationClassificationResponse>>;
    /**
     *
     * @summary updateViolation
     * @param {number} violationId violationId
     * @param {UpdateViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateViolationUsingPUT(violationId: number, request: UpdateViolationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * TrafficViolationControllerApi - factory interface
 * @export
 */
export declare const TrafficViolationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addViolation
     * @param {boolean} isLive isLive
     * @param {AddViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addViolationUsingPOST(isLive: boolean, request: AddViolationRequest, options?: any): AxiosPromise<AddViolationResponse>;
    /**
     *
     * @summary deleteViolation
     * @param {number} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteViolationUsingDELETE(violationId: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary getRegionsWithViolations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRegionsWithViolationsUsingGET(options?: any): AxiosPromise<GetRegionsWithViolationsResponse>;
    /**
     *
     * @summary getTrafficViolationTypes
     * @param {string} [audience] audience
     * @param {string} [flavor] flavor
     * @param {boolean} [includePenalties] includePenalties
     * @param {string} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTrafficViolationTypesUsingGET(audience?: string, flavor?: string, includePenalties?: boolean, state?: string, options?: any): AxiosPromise<GetTrafficViolationTypesResponse>;
    /**
     *
     * @summary listViolationClassifications
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listViolationClassificationsUsingGET(regionCode?: string, options?: any): AxiosPromise<ListViolationClassificationResponse>;
    /**
     *
     * @summary updateViolation
     * @param {number} violationId violationId
     * @param {UpdateViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateViolationUsingPUT(violationId: number, request: UpdateViolationRequest, options?: any): AxiosPromise<void>;
};
/**
 * TrafficViolationControllerApi - object-oriented interface
 * @export
 * @class TrafficViolationControllerApi
 * @extends {BaseAPI}
 */
export declare class TrafficViolationControllerApi extends BaseAPI {
    /**
     *
     * @summary addViolation
     * @param {boolean} isLive isLive
     * @param {AddViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrafficViolationControllerApi
     */
    addViolationUsingPOST(isLive: boolean, request: AddViolationRequest, options?: any): Promise<import("axios").AxiosResponse<AddViolationResponse, any>>;
    /**
     *
     * @summary deleteViolation
     * @param {number} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrafficViolationControllerApi
     */
    deleteViolationUsingDELETE(violationId: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary getRegionsWithViolations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrafficViolationControllerApi
     */
    getRegionsWithViolationsUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetRegionsWithViolationsResponse, any>>;
    /**
     *
     * @summary getTrafficViolationTypes
     * @param {string} [audience] audience
     * @param {string} [flavor] flavor
     * @param {boolean} [includePenalties] includePenalties
     * @param {string} [state] state
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrafficViolationControllerApi
     */
    getTrafficViolationTypesUsingGET(audience?: string, flavor?: string, includePenalties?: boolean, state?: string, options?: any): Promise<import("axios").AxiosResponse<GetTrafficViolationTypesResponse, any>>;
    /**
     *
     * @summary listViolationClassifications
     * @param {string} [regionCode] regionCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrafficViolationControllerApi
     */
    listViolationClassificationsUsingGET(regionCode?: string, options?: any): Promise<import("axios").AxiosResponse<ListViolationClassificationResponse, any>>;
    /**
     *
     * @summary updateViolation
     * @param {number} violationId violationId
     * @param {UpdateViolationRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrafficViolationControllerApi
     */
    updateViolationUsingPUT(violationId: number, request: UpdateViolationRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * UrlRedirectControllerApi - axios parameter creator
 * @export
 */
export declare const UrlRedirectControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addRedirectUrl
     * @param {AddRedirectUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addRedirectUrlUsingPOST: (request: AddRedirectUrlRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary clearCache
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    clearCacheUsingPOST: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getRedirectUrl
     * @param {string} [landingPageUrl] landingPageUrl
     * @param {string} [lawfirmId] lawfirmId
     * @param {'DEBUG' | 'SEO' | 'VANITY'} [pageType] pageType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRedirectUrlUsingGET: (landingPageUrl?: string, lawfirmId?: string, pageType?: 'DEBUG' | 'SEO' | 'VANITY', options?: any) => Promise<RequestArgs>;
};
/**
 * UrlRedirectControllerApi - functional programming interface
 * @export
 */
export declare const UrlRedirectControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addRedirectUrl
     * @param {AddRedirectUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addRedirectUrlUsingPOST(request: AddRedirectUrlRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary clearCache
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    clearCacheUsingPOST(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary getRedirectUrl
     * @param {string} [landingPageUrl] landingPageUrl
     * @param {string} [lawfirmId] lawfirmId
     * @param {'DEBUG' | 'SEO' | 'VANITY'} [pageType] pageType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRedirectUrlUsingGET(landingPageUrl?: string, lawfirmId?: string, pageType?: 'DEBUG' | 'SEO' | 'VANITY', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRedirectUrlResponse>>;
};
/**
 * UrlRedirectControllerApi - factory interface
 * @export
 */
export declare const UrlRedirectControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addRedirectUrl
     * @param {AddRedirectUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addRedirectUrlUsingPOST(request: AddRedirectUrlRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary clearCache
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    clearCacheUsingPOST(options?: any): AxiosPromise<void>;
    /**
     *
     * @summary getRedirectUrl
     * @param {string} [landingPageUrl] landingPageUrl
     * @param {string} [lawfirmId] lawfirmId
     * @param {'DEBUG' | 'SEO' | 'VANITY'} [pageType] pageType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRedirectUrlUsingGET(landingPageUrl?: string, lawfirmId?: string, pageType?: 'DEBUG' | 'SEO' | 'VANITY', options?: any): AxiosPromise<GetRedirectUrlResponse>;
};
/**
 * UrlRedirectControllerApi - object-oriented interface
 * @export
 * @class UrlRedirectControllerApi
 * @extends {BaseAPI}
 */
export declare class UrlRedirectControllerApi extends BaseAPI {
    /**
     *
     * @summary addRedirectUrl
     * @param {AddRedirectUrlRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UrlRedirectControllerApi
     */
    addRedirectUrlUsingPOST(request: AddRedirectUrlRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary clearCache
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UrlRedirectControllerApi
     */
    clearCacheUsingPOST(options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary getRedirectUrl
     * @param {string} [landingPageUrl] landingPageUrl
     * @param {string} [lawfirmId] lawfirmId
     * @param {'DEBUG' | 'SEO' | 'VANITY'} [pageType] pageType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UrlRedirectControllerApi
     */
    getRedirectUrlUsingGET(landingPageUrl?: string, lawfirmId?: string, pageType?: 'DEBUG' | 'SEO' | 'VANITY', options?: any): Promise<import("axios").AxiosResponse<GetRedirectUrlResponse, any>>;
}
/**
 * UserAccountControllerApi - axios parameter creator
 * @export
 */
export declare const UserAccountControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addExtraAccount
     * @param {string} userId userId
     * @param {AddExtraAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addExtraAccountUsingPOST: (userId: string, request: AddExtraAccountRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removeAdditionalUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAdditionalUserHandleUsingDELETE: (userHandle: string, userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setPrimaryUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setPrimaryUserHandleUsingPUT: (userHandle: string, userId: number, options?: any) => Promise<RequestArgs>;
};
/**
 * UserAccountControllerApi - functional programming interface
 * @export
 */
export declare const UserAccountControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addExtraAccount
     * @param {string} userId userId
     * @param {AddExtraAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addExtraAccountUsingPOST(userId: string, request: AddExtraAccountRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary removeAdditionalUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAdditionalUserHandleUsingDELETE(userHandle: string, userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary setPrimaryUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setPrimaryUserHandleUsingPUT(userHandle: string, userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * UserAccountControllerApi - factory interface
 * @export
 */
export declare const UserAccountControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addExtraAccount
     * @param {string} userId userId
     * @param {AddExtraAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addExtraAccountUsingPOST(userId: string, request: AddExtraAccountRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary removeAdditionalUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAdditionalUserHandleUsingDELETE(userHandle: string, userId: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary setPrimaryUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setPrimaryUserHandleUsingPUT(userHandle: string, userId: number, options?: any): AxiosPromise<void>;
};
/**
 * UserAccountControllerApi - object-oriented interface
 * @export
 * @class UserAccountControllerApi
 * @extends {BaseAPI}
 */
export declare class UserAccountControllerApi extends BaseAPI {
    /**
     *
     * @summary addExtraAccount
     * @param {string} userId userId
     * @param {AddExtraAccountRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserAccountControllerApi
     */
    addExtraAccountUsingPOST(userId: string, request: AddExtraAccountRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary removeAdditionalUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserAccountControllerApi
     */
    removeAdditionalUserHandleUsingDELETE(userHandle: string, userId: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary setPrimaryUserHandle
     * @param {string} userHandle userHandle
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserAccountControllerApi
     */
    setPrimaryUserHandleUsingPUT(userHandle: string, userId: number, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * UserControllerApi - axios parameter creator
 * @export
 */
export declare const UserControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary findChargeDisputesByUserId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findChargeDisputesByUserIdUsingGET: (userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCurrentUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCurrentUserInfoUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getOverduePayments
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOverduePaymentsUsingGET: (userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getSupportTicketsForUser
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportTicketsForUserUsingGET: (email: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getUserDetails
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserDetailsUsingGET: (userIdString: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getUserStripeAccount
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserStripeAccountUsingGET: (userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary isUserLoggedIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    isUserLoggedInUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateUserProfile
     * @param {number} userId userId
     * @param {UpdateUserProfileRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserProfileUsingPUT: (userId: number, request: UpdateUserProfileRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateUserRoles
     * @param {UpdateUserRolesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserRolesUsingPOST: (request: UpdateUserRolesRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary validateUserByEmail
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateUserByEmailUsingGET: (email: string, options?: any) => Promise<RequestArgs>;
};
/**
 * UserControllerApi - functional programming interface
 * @export
 */
export declare const UserControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary findChargeDisputesByUserId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findChargeDisputesByUserIdUsingGET(userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindChargeDisputesResponse>>;
    /**
     *
     * @summary getCurrentUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCurrentUserInfoUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCurrentUserResponse>>;
    /**
     *
     * @summary getOverduePayments
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOverduePaymentsUsingGET(userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOverduePaymentsResponse>>;
    /**
     *
     * @summary getSupportTicketsForUser
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportTicketsForUserUsingGET(email: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSupportTicketsResponse>>;
    /**
     *
     * @summary getUserDetails
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserDetailsUsingGET(userIdString: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserDetailsResponse>>;
    /**
     *
     * @summary getUserStripeAccount
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserStripeAccountUsingGET(userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserStripeAccountResponse>>;
    /**
     *
     * @summary isUserLoggedIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    isUserLoggedInUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IsUserLoggedInResponse>>;
    /**
     *
     * @summary updateUserProfile
     * @param {number} userId userId
     * @param {UpdateUserProfileRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserProfileUsingPUT(userId: number, request: UpdateUserProfileRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateUserDetailsResponse>>;
    /**
     *
     * @summary updateUserRoles
     * @param {UpdateUserRolesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserRolesUsingPOST(request: UpdateUserRolesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary validateUserByEmail
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateUserByEmailUsingGET(email: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ValidateUserEmailResponse>>;
};
/**
 * UserControllerApi - factory interface
 * @export
 */
export declare const UserControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary findChargeDisputesByUserId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findChargeDisputesByUserIdUsingGET(userId: string, options?: any): AxiosPromise<FindChargeDisputesResponse>;
    /**
     *
     * @summary getCurrentUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCurrentUserInfoUsingGET(options?: any): AxiosPromise<GetCurrentUserResponse>;
    /**
     *
     * @summary getOverduePayments
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOverduePaymentsUsingGET(userId: number, options?: any): AxiosPromise<GetOverduePaymentsResponse>;
    /**
     *
     * @summary getSupportTicketsForUser
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportTicketsForUserUsingGET(email: string, options?: any): AxiosPromise<GetSupportTicketsResponse>;
    /**
     *
     * @summary getUserDetails
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserDetailsUsingGET(userIdString: string, options?: any): AxiosPromise<GetUserDetailsResponse>;
    /**
     *
     * @summary getUserStripeAccount
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserStripeAccountUsingGET(userId: number, options?: any): AxiosPromise<GetUserStripeAccountResponse>;
    /**
     *
     * @summary isUserLoggedIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    isUserLoggedInUsingGET(options?: any): AxiosPromise<IsUserLoggedInResponse>;
    /**
     *
     * @summary updateUserProfile
     * @param {number} userId userId
     * @param {UpdateUserProfileRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserProfileUsingPUT(userId: number, request: UpdateUserProfileRequest, options?: any): AxiosPromise<UpdateUserDetailsResponse>;
    /**
     *
     * @summary updateUserRoles
     * @param {UpdateUserRolesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserRolesUsingPOST(request: UpdateUserRolesRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary validateUserByEmail
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateUserByEmailUsingGET(email: string, options?: any): AxiosPromise<ValidateUserEmailResponse>;
};
/**
 * UserControllerApi - object-oriented interface
 * @export
 * @class UserControllerApi
 * @extends {BaseAPI}
 */
export declare class UserControllerApi extends BaseAPI {
    /**
     *
     * @summary findChargeDisputesByUserId
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    findChargeDisputesByUserIdUsingGET(userId: string, options?: any): Promise<import("axios").AxiosResponse<FindChargeDisputesResponse, any>>;
    /**
     *
     * @summary getCurrentUserInfo
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    getCurrentUserInfoUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetCurrentUserResponse, any>>;
    /**
     *
     * @summary getOverduePayments
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    getOverduePaymentsUsingGET(userId: number, options?: any): Promise<import("axios").AxiosResponse<GetOverduePaymentsResponse, any>>;
    /**
     *
     * @summary getSupportTicketsForUser
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    getSupportTicketsForUserUsingGET(email: string, options?: any): Promise<import("axios").AxiosResponse<GetSupportTicketsResponse, any>>;
    /**
     *
     * @summary getUserDetails
     * @param {string} userIdString userIdString
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    getUserDetailsUsingGET(userIdString: string, options?: any): Promise<import("axios").AxiosResponse<GetUserDetailsResponse, any>>;
    /**
     *
     * @summary getUserStripeAccount
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    getUserStripeAccountUsingGET(userId: number, options?: any): Promise<import("axios").AxiosResponse<GetUserStripeAccountResponse, any>>;
    /**
     *
     * @summary isUserLoggedIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    isUserLoggedInUsingGET(options?: any): Promise<import("axios").AxiosResponse<IsUserLoggedInResponse, any>>;
    /**
     *
     * @summary updateUserProfile
     * @param {number} userId userId
     * @param {UpdateUserProfileRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    updateUserProfileUsingPUT(userId: number, request: UpdateUserProfileRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateUserDetailsResponse, any>>;
    /**
     *
     * @summary updateUserRoles
     * @param {UpdateUserRolesRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    updateUserRolesUsingPOST(request: UpdateUserRolesRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary validateUserByEmail
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApi
     */
    validateUserByEmailUsingGET(email: string, options?: any): Promise<import("axios").AxiosResponse<ValidateUserEmailResponse, any>>;
}
/**
 * UserPasswordControllerApi - axios parameter creator
 * @export
 */
export declare const UserPasswordControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary changeUserPassword
     * @param {ChangeUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeUserPasswordUsingPUT: (request: ChangeUserPasswordRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary resetUserPasswordByAdmin
     * @param {number} userId userId
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetUserPasswordByAdminUsingPUT: (userId: number, request: ResetUserPasswordRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary resetUserPassword
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetUserPasswordUsingPOST: (request: ResetUserPasswordRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendAccountVerificationCode
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendAccountVerificationCodeUsingPOST: (userId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary sendResetPasswordToken
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendResetPasswordTokenUsingPOST: (email: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary verifyPwdResetToken
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyPwdResetTokenUsingGET: (token: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary verifyUserAccount
     * @param {string} code code
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyUserAccountUsingPUT: (code: string, userId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * UserPasswordControllerApi - functional programming interface
 * @export
 */
export declare const UserPasswordControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary changeUserPassword
     * @param {ChangeUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeUserPasswordUsingPUT(request: ChangeUserPasswordRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary resetUserPasswordByAdmin
     * @param {number} userId userId
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetUserPasswordByAdminUsingPUT(userId: number, request: ResetUserPasswordRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary resetUserPassword
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetUserPasswordUsingPOST(request: ResetUserPasswordRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary sendAccountVerificationCode
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendAccountVerificationCodeUsingPOST(userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary sendResetPasswordToken
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendResetPasswordTokenUsingPOST(email: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary verifyPwdResetToken
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyPwdResetTokenUsingGET(token: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyPasswordResetTokenResponse>>;
    /**
     *
     * @summary verifyUserAccount
     * @param {string} code code
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyUserAccountUsingPUT(code: string, userId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyUserAccountResponse>>;
};
/**
 * UserPasswordControllerApi - factory interface
 * @export
 */
export declare const UserPasswordControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary changeUserPassword
     * @param {ChangeUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeUserPasswordUsingPUT(request: ChangeUserPasswordRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary resetUserPasswordByAdmin
     * @param {number} userId userId
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetUserPasswordByAdminUsingPUT(userId: number, request: ResetUserPasswordRequest, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary resetUserPassword
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetUserPasswordUsingPOST(request: ResetUserPasswordRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary sendAccountVerificationCode
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendAccountVerificationCodeUsingPOST(userId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary sendResetPasswordToken
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sendResetPasswordTokenUsingPOST(email: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary verifyPwdResetToken
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyPwdResetTokenUsingGET(token: string, options?: any): AxiosPromise<VerifyPasswordResetTokenResponse>;
    /**
     *
     * @summary verifyUserAccount
     * @param {string} code code
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyUserAccountUsingPUT(code: string, userId: string, options?: any): AxiosPromise<VerifyUserAccountResponse>;
};
/**
 * UserPasswordControllerApi - object-oriented interface
 * @export
 * @class UserPasswordControllerApi
 * @extends {BaseAPI}
 */
export declare class UserPasswordControllerApi extends BaseAPI {
    /**
     *
     * @summary changeUserPassword
     * @param {ChangeUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    changeUserPasswordUsingPUT(request: ChangeUserPasswordRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary resetUserPasswordByAdmin
     * @param {number} userId userId
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    resetUserPasswordByAdminUsingPUT(userId: number, request: ResetUserPasswordRequest, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary resetUserPassword
     * @param {ResetUserPasswordRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    resetUserPasswordUsingPOST(request: ResetUserPasswordRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary sendAccountVerificationCode
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    sendAccountVerificationCodeUsingPOST(userId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary sendResetPasswordToken
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    sendResetPasswordTokenUsingPOST(email: string, options?: any): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary verifyPwdResetToken
     * @param {string} token token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    verifyPwdResetTokenUsingGET(token: string, options?: any): Promise<import("axios").AxiosResponse<VerifyPasswordResetTokenResponse, any>>;
    /**
     *
     * @summary verifyUserAccount
     * @param {string} code code
     * @param {string} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserPasswordControllerApi
     */
    verifyUserAccountUsingPUT(code: string, userId: string, options?: any): Promise<import("axios").AxiosResponse<VerifyUserAccountResponse, any>>;
}
/**
 * UserProfileControllerApi - axios parameter creator
 * @export
 */
export declare const UserProfileControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary addUserAddress
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addUserAddressUsingPOST: (userId: number, request: UpsertAddressRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary addUserPhoneNumber
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addUserPhoneNumberUsingPOST: (userId: number, request: UpdateUserPhoneNumberRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary deleteUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUserPhoneNumberUsingDELETE: (phoneNumberId: number, userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getUserAddresses
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserAddressesUsingGET: (userId: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary mergeUser
     * @param {string} primaryUserId primaryUserId
     * @param {MergeUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeUserUsingPOST: (primaryUserId: string, request: MergeUserRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateProfilePicture
     * @param {number} userId userId
     * @param {UpdateProfilePictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProfilePictureUsingPUT: (userId: number, request: UpdateProfilePictureRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateUserAddress
     * @param {number} addressId addressId
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserAddressUsingPUT: (addressId: number, userId: number, request: UpsertAddressRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary updateUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserPhoneNumberUsingPUT: (phoneNumberId: number, userId: number, request: UpdateUserPhoneNumberRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * UserProfileControllerApi - functional programming interface
 * @export
 */
export declare const UserProfileControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary addUserAddress
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addUserAddressUsingPOST(userId: number, request: UpsertAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary addUserPhoneNumber
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addUserPhoneNumberUsingPOST(userId: number, request: UpdateUserPhoneNumberRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateUserDetailsResponse>>;
    /**
     *
     * @summary deleteUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUserPhoneNumberUsingDELETE(phoneNumberId: number, userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateUserDetailsResponse>>;
    /**
     *
     * @summary getUserAddresses
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserAddressesUsingGET(userId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUserAddressesResponse>>;
    /**
     *
     * @summary mergeUser
     * @param {string} primaryUserId primaryUserId
     * @param {MergeUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeUserUsingPOST(primaryUserId: string, request: MergeUserRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MergeUserResponse>>;
    /**
     *
     * @summary updateProfilePicture
     * @param {number} userId userId
     * @param {UpdateProfilePictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProfilePictureUsingPUT(userId: number, request: UpdateProfilePictureRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateUserAddress
     * @param {number} addressId addressId
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserAddressUsingPUT(addressId: number, userId: number, request: UpsertAddressRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary updateUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserPhoneNumberUsingPUT(phoneNumberId: number, userId: number, request: UpdateUserPhoneNumberRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateUserDetailsResponse>>;
};
/**
 * UserProfileControllerApi - factory interface
 * @export
 */
export declare const UserProfileControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary addUserAddress
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addUserAddressUsingPOST(userId: number, request: UpsertAddressRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary addUserPhoneNumber
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addUserPhoneNumberUsingPOST(userId: number, request: UpdateUserPhoneNumberRequest, options?: any): AxiosPromise<UpdateUserDetailsResponse>;
    /**
     *
     * @summary deleteUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUserPhoneNumberUsingDELETE(phoneNumberId: number, userId: number, options?: any): AxiosPromise<UpdateUserDetailsResponse>;
    /**
     *
     * @summary getUserAddresses
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserAddressesUsingGET(userId: number, options?: any): AxiosPromise<GetUserAddressesResponse>;
    /**
     *
     * @summary mergeUser
     * @param {string} primaryUserId primaryUserId
     * @param {MergeUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeUserUsingPOST(primaryUserId: string, request: MergeUserRequest, options?: any): AxiosPromise<MergeUserResponse>;
    /**
     *
     * @summary updateProfilePicture
     * @param {number} userId userId
     * @param {UpdateProfilePictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProfilePictureUsingPUT(userId: number, request: UpdateProfilePictureRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateUserAddress
     * @param {number} addressId addressId
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserAddressUsingPUT(addressId: number, userId: number, request: UpsertAddressRequest, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary updateUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUserPhoneNumberUsingPUT(phoneNumberId: number, userId: number, request: UpdateUserPhoneNumberRequest, options?: any): AxiosPromise<UpdateUserDetailsResponse>;
};
/**
 * UserProfileControllerApi - object-oriented interface
 * @export
 * @class UserProfileControllerApi
 * @extends {BaseAPI}
 */
export declare class UserProfileControllerApi extends BaseAPI {
    /**
     *
     * @summary addUserAddress
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    addUserAddressUsingPOST(userId: number, request: UpsertAddressRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary addUserPhoneNumber
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    addUserPhoneNumberUsingPOST(userId: number, request: UpdateUserPhoneNumberRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateUserDetailsResponse, any>>;
    /**
     *
     * @summary deleteUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    deleteUserPhoneNumberUsingDELETE(phoneNumberId: number, userId: number, options?: any): Promise<import("axios").AxiosResponse<UpdateUserDetailsResponse, any>>;
    /**
     *
     * @summary getUserAddresses
     * @param {number} userId userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    getUserAddressesUsingGET(userId: number, options?: any): Promise<import("axios").AxiosResponse<GetUserAddressesResponse, any>>;
    /**
     *
     * @summary mergeUser
     * @param {string} primaryUserId primaryUserId
     * @param {MergeUserRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    mergeUserUsingPOST(primaryUserId: string, request: MergeUserRequest, options?: any): Promise<import("axios").AxiosResponse<MergeUserResponse, any>>;
    /**
     *
     * @summary updateProfilePicture
     * @param {number} userId userId
     * @param {UpdateProfilePictureRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    updateProfilePictureUsingPUT(userId: number, request: UpdateProfilePictureRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateUserAddress
     * @param {number} addressId addressId
     * @param {number} userId userId
     * @param {UpsertAddressRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    updateUserAddressUsingPUT(addressId: number, userId: number, request: UpsertAddressRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary updateUserPhoneNumber
     * @param {number} phoneNumberId phoneNumberId
     * @param {number} userId userId
     * @param {UpdateUserPhoneNumberRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserProfileControllerApi
     */
    updateUserPhoneNumberUsingPUT(phoneNumberId: number, userId: number, request: UpdateUserPhoneNumberRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateUserDetailsResponse, any>>;
}
/**
 * UserSearchControllerApi - axios parameter creator
 * @export
 */
export declare const UserSearchControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary findMatchingUsers
     * @param {FindMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findMatchingUsersUsingPOST: (request: FindMatchingUsersRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getCountOfMatchingUsers
     * @param {GetCountOfMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountOfMatchingUsersUsingPOST: (request: GetCountOfMatchingUsersRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * UserSearchControllerApi - functional programming interface
 * @export
 */
export declare const UserSearchControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary findMatchingUsers
     * @param {FindMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findMatchingUsersUsingPOST(request: FindMatchingUsersRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindMatchingUsersResponse>>;
    /**
     *
     * @summary getCountOfMatchingUsers
     * @param {GetCountOfMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountOfMatchingUsersUsingPOST(request: GetCountOfMatchingUsersRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCountOfMatchingUsersResponse>>;
};
/**
 * UserSearchControllerApi - factory interface
 * @export
 */
export declare const UserSearchControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary findMatchingUsers
     * @param {FindMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findMatchingUsersUsingPOST(request: FindMatchingUsersRequest, options?: any): AxiosPromise<FindMatchingUsersResponse>;
    /**
     *
     * @summary getCountOfMatchingUsers
     * @param {GetCountOfMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountOfMatchingUsersUsingPOST(request: GetCountOfMatchingUsersRequest, options?: any): AxiosPromise<GetCountOfMatchingUsersResponse>;
};
/**
 * UserSearchControllerApi - object-oriented interface
 * @export
 * @class UserSearchControllerApi
 * @extends {BaseAPI}
 */
export declare class UserSearchControllerApi extends BaseAPI {
    /**
     *
     * @summary findMatchingUsers
     * @param {FindMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserSearchControllerApi
     */
    findMatchingUsersUsingPOST(request: FindMatchingUsersRequest, options?: any): Promise<import("axios").AxiosResponse<FindMatchingUsersResponse, any>>;
    /**
     *
     * @summary getCountOfMatchingUsers
     * @param {GetCountOfMatchingUsersRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserSearchControllerApi
     */
    getCountOfMatchingUsersUsingPOST(request: GetCountOfMatchingUsersRequest, options?: any): Promise<import("axios").AxiosResponse<GetCountOfMatchingUsersResponse, any>>;
}
/**
 * UtilityControllerApi - axios parameter creator
 * @export
 */
export declare const UtilityControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary backfillLawfirmTransactionRecords
     * @param {BackfillLawfirmTransactionRecordsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backfillLawfirmTransactionRecordsUsingPOST: (request: BackfillLawfirmTransactionRecordsRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStatusUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary setStatus
     * @param {boolean} [lawfirmTransactionsStatus] lawfirmTransactionsStatus
     * @param {boolean} [syncStatus] syncStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setStatusUsingPOST: (lawfirmTransactionsStatus?: boolean, syncStatus?: boolean, options?: any) => Promise<RequestArgs>;
};
/**
 * UtilityControllerApi - functional programming interface
 * @export
 */
export declare const UtilityControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary backfillLawfirmTransactionRecords
     * @param {BackfillLawfirmTransactionRecordsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backfillLawfirmTransactionRecordsUsingPOST(request: BackfillLawfirmTransactionRecordsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackfillLawfirmTransactionRecordsResponse>>;
    /**
     *
     * @summary getStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStatusUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: boolean;
    }>>;
    /**
     *
     * @summary setStatus
     * @param {boolean} [lawfirmTransactionsStatus] lawfirmTransactionsStatus
     * @param {boolean} [syncStatus] syncStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setStatusUsingPOST(lawfirmTransactionsStatus?: boolean, syncStatus?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: boolean;
    }>>;
};
/**
 * UtilityControllerApi - factory interface
 * @export
 */
export declare const UtilityControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary backfillLawfirmTransactionRecords
     * @param {BackfillLawfirmTransactionRecordsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backfillLawfirmTransactionRecordsUsingPOST(request: BackfillLawfirmTransactionRecordsRequest, options?: any): AxiosPromise<BackfillLawfirmTransactionRecordsResponse>;
    /**
     *
     * @summary getStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStatusUsingGET(options?: any): AxiosPromise<{
        [key: string]: boolean;
    }>;
    /**
     *
     * @summary setStatus
     * @param {boolean} [lawfirmTransactionsStatus] lawfirmTransactionsStatus
     * @param {boolean} [syncStatus] syncStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setStatusUsingPOST(lawfirmTransactionsStatus?: boolean, syncStatus?: boolean, options?: any): AxiosPromise<{
        [key: string]: boolean;
    }>;
};
/**
 * UtilityControllerApi - object-oriented interface
 * @export
 * @class UtilityControllerApi
 * @extends {BaseAPI}
 */
export declare class UtilityControllerApi extends BaseAPI {
    /**
     *
     * @summary backfillLawfirmTransactionRecords
     * @param {BackfillLawfirmTransactionRecordsRequest} request request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UtilityControllerApi
     */
    backfillLawfirmTransactionRecordsUsingPOST(request: BackfillLawfirmTransactionRecordsRequest, options?: any): Promise<import("axios").AxiosResponse<BackfillLawfirmTransactionRecordsResponse, any>>;
    /**
     *
     * @summary getStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UtilityControllerApi
     */
    getStatusUsingGET(options?: any): Promise<import("axios").AxiosResponse<{
        [key: string]: boolean;
    }, any>>;
    /**
     *
     * @summary setStatus
     * @param {boolean} [lawfirmTransactionsStatus] lawfirmTransactionsStatus
     * @param {boolean} [syncStatus] syncStatus
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UtilityControllerApi
     */
    setStatusUsingPOST(lawfirmTransactionsStatus?: boolean, syncStatus?: boolean, options?: any): Promise<import("axios").AxiosResponse<{
        [key: string]: boolean;
    }, any>>;
}
/**
 * ValidationControllerApi - axios parameter creator
 * @export
 */
export declare const ValidationControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary validateEmailAddress
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateEmailAddressUsingGET: (email: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ValidationControllerApi - functional programming interface
 * @export
 */
export declare const ValidationControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary validateEmailAddress
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateEmailAddressUsingGET(email: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean>>;
};
/**
 * ValidationControllerApi - factory interface
 * @export
 */
export declare const ValidationControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary validateEmailAddress
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateEmailAddressUsingGET(email: string, options?: any): AxiosPromise<boolean>;
};
/**
 * ValidationControllerApi - object-oriented interface
 * @export
 * @class ValidationControllerApi
 * @extends {BaseAPI}
 */
export declare class ValidationControllerApi extends BaseAPI {
    /**
     *
     * @summary validateEmailAddress
     * @param {string} email email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ValidationControllerApi
     */
    validateEmailAddressUsingGET(email: string, options?: any): Promise<import("axios").AxiosResponse<boolean, any>>;
}
/**
 * ViolationPenaltyControllerApi - axios parameter creator
 * @export
 */
export declare const ViolationPenaltyControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary getPenaltiesByViolation
     * @param {string} violationId violationId
     * @param {'ALL' | 'SHORT'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPenaltiesByViolationUsingGET: (violationId: string, flavor?: 'ALL' | 'SHORT', options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary getPenaltyTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPenaltyTypesUsingGET: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary removePenalty
     * @param {string} penaltyTypeId penaltyTypeId
     * @param {string} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removePenaltyUsingDELETE: (penaltyTypeId: string, violationId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary upsertPenalty
     * @param {string} violationId violationId
     * @param {AddPenaltyRequest} penaltyToAdd penaltyToAdd
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upsertPenaltyUsingPOST: (violationId: string, penaltyToAdd: AddPenaltyRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * ViolationPenaltyControllerApi - functional programming interface
 * @export
 */
export declare const ViolationPenaltyControllerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary getPenaltiesByViolation
     * @param {string} violationId violationId
     * @param {'ALL' | 'SHORT'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPenaltiesByViolationUsingGET(violationId: string, flavor?: 'ALL' | 'SHORT', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ViolationPenaltyResponse>>;
    /**
     *
     * @summary getPenaltyTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPenaltyTypesUsingGET(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPenaltyTypesResponse>>;
    /**
     *
     * @summary removePenalty
     * @param {string} penaltyTypeId penaltyTypeId
     * @param {string} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removePenaltyUsingDELETE(penaltyTypeId: string, violationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary upsertPenalty
     * @param {string} violationId violationId
     * @param {AddPenaltyRequest} penaltyToAdd penaltyToAdd
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upsertPenaltyUsingPOST(violationId: string, penaltyToAdd: AddPenaltyRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ViolationPenaltyControllerApi - factory interface
 * @export
 */
export declare const ViolationPenaltyControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary getPenaltiesByViolation
     * @param {string} violationId violationId
     * @param {'ALL' | 'SHORT'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPenaltiesByViolationUsingGET(violationId: string, flavor?: 'ALL' | 'SHORT', options?: any): AxiosPromise<ViolationPenaltyResponse>;
    /**
     *
     * @summary getPenaltyTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPenaltyTypesUsingGET(options?: any): AxiosPromise<GetPenaltyTypesResponse>;
    /**
     *
     * @summary removePenalty
     * @param {string} penaltyTypeId penaltyTypeId
     * @param {string} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removePenaltyUsingDELETE(penaltyTypeId: string, violationId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary upsertPenalty
     * @param {string} violationId violationId
     * @param {AddPenaltyRequest} penaltyToAdd penaltyToAdd
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upsertPenaltyUsingPOST(violationId: string, penaltyToAdd: AddPenaltyRequest, options?: any): AxiosPromise<void>;
};
/**
 * ViolationPenaltyControllerApi - object-oriented interface
 * @export
 * @class ViolationPenaltyControllerApi
 * @extends {BaseAPI}
 */
export declare class ViolationPenaltyControllerApi extends BaseAPI {
    /**
     *
     * @summary getPenaltiesByViolation
     * @param {string} violationId violationId
     * @param {'ALL' | 'SHORT'} [flavor] flavor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViolationPenaltyControllerApi
     */
    getPenaltiesByViolationUsingGET(violationId: string, flavor?: 'ALL' | 'SHORT', options?: any): Promise<import("axios").AxiosResponse<ViolationPenaltyResponse, any>>;
    /**
     *
     * @summary getPenaltyTypes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViolationPenaltyControllerApi
     */
    getPenaltyTypesUsingGET(options?: any): Promise<import("axios").AxiosResponse<GetPenaltyTypesResponse, any>>;
    /**
     *
     * @summary removePenalty
     * @param {string} penaltyTypeId penaltyTypeId
     * @param {string} violationId violationId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViolationPenaltyControllerApi
     */
    removePenaltyUsingDELETE(penaltyTypeId: string, violationId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary upsertPenalty
     * @param {string} violationId violationId
     * @param {AddPenaltyRequest} penaltyToAdd penaltyToAdd
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViolationPenaltyControllerApi
     */
    upsertPenaltyUsingPOST(violationId: string, penaltyToAdd: AddPenaltyRequest, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
}
