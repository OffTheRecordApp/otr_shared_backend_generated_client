/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PhoneNumberDomain,
    PhoneNumberDomainFromJSON,
    PhoneNumberDomainFromJSONTyped,
    PhoneNumberDomainToJSON,
} from './';

/**
 * 
 * @export
 * @interface NewUser
 */
export interface NewUser {
    /**
     * 
     * @type {string}
     * @memberof NewUser
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof NewUser
     */
    firstname?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NewUser
     */
    isEmailConfirmed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NewUser
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof NewUser
     */
    loginProvider?: NewUserLoginProviderEnum;
    /**
     * 
     * @type {string}
     * @memberof NewUser
     */
    password?: string;
    /**
     * 
     * @type {Array<PhoneNumberDomain>}
     * @memberof NewUser
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
    /**
     * 
     * @type {boolean}
     * @memberof NewUser
     */
    shouldOptInForMarketingNotifications?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NewUser
     */
    shouldOptInForSmsNotifications?: boolean;
}

export function NewUserFromJSON(json: any): NewUser {
    return NewUserFromJSONTyped(json, false);
}

export function NewUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'isEmailConfirmed': !exists(json, 'isEmailConfirmed') ? undefined : json['isEmailConfirmed'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'loginProvider': !exists(json, 'loginProvider') ? undefined : json['loginProvider'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'phoneNumbers': !exists(json, 'phoneNumbers') ? undefined : ((json['phoneNumbers'] as Array<any>).map(PhoneNumberDomainFromJSON)),
        'shouldOptInForMarketingNotifications': !exists(json, 'shouldOptInForMarketingNotifications') ? undefined : json['shouldOptInForMarketingNotifications'],
        'shouldOptInForSmsNotifications': !exists(json, 'shouldOptInForSmsNotifications') ? undefined : json['shouldOptInForSmsNotifications'],
    };
}

export function NewUserToJSON(value?: NewUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'isEmailConfirmed': value.isEmailConfirmed,
        'lastname': value.lastname,
        'loginProvider': value.loginProvider,
        'password': value.password,
        'phoneNumbers': value.phoneNumbers === undefined ? undefined : ((value.phoneNumbers as Array<any>).map(PhoneNumberDomainToJSON)),
        'shouldOptInForMarketingNotifications': value.shouldOptInForMarketingNotifications,
        'shouldOptInForSmsNotifications': value.shouldOptInForSmsNotifications,
    };
}

/**
* @export
* @enum {string}
*/
export enum NewUserLoginProviderEnum {
    APPLE = 'APPLE',
    EMAIL = 'EMAIL',
    FACEBOOK = 'FACEBOOK',
    GOOGLE = 'GOOGLE',
    PHONE = 'PHONE',
    TWITTER = 'TWITTER',
    UNKNOWN = 'UNKNOWN'
}


