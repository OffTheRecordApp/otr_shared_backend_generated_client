/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PhoneNumberDomain,
    PhoneNumberDomainFromJSON,
    PhoneNumberDomainFromJSONTyped,
    PhoneNumberDomainToJSON,
} from './';

/**
 * 
 * @export
 * @interface GhostUser
 */
export interface GhostUser {
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    clientType?: GhostUserClientTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof GhostUser
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    driverLicenseNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    gender?: GhostUserGenderEnum;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    password?: string;
    /**
     * 
     * @type {Array<PhoneNumberDomain>}
     * @memberof GhostUser
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
    /**
     * 
     * @type {string}
     * @memberof GhostUser
     */
    race?: GhostUserRaceEnum;
}

export function GhostUserFromJSON(json: any): GhostUser {
    return GhostUserFromJSONTyped(json, false);
}

export function GhostUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): GhostUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clientType': !exists(json, 'clientType') ? undefined : json['clientType'],
        'dob': !exists(json, 'dob') ? undefined : (new Date(json['dob'])),
        'driverLicenseNumber': !exists(json, 'driverLicenseNumber') ? undefined : json['driverLicenseNumber'],
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'phoneNumbers': !exists(json, 'phoneNumbers') ? undefined : ((json['phoneNumbers'] as Array<any>).map(PhoneNumberDomainFromJSON)),
        'race': !exists(json, 'race') ? undefined : json['race'],
    };
}

export function GhostUserToJSON(value?: GhostUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clientType': value.clientType,
        'dob': value.dob === undefined ? undefined : (value.dob.toISOString()),
        'driverLicenseNumber': value.driverLicenseNumber,
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'gender': value.gender,
        'lastname': value.lastname,
        'password': value.password,
        'phoneNumbers': value.phoneNumbers === undefined ? undefined : ((value.phoneNumbers as Array<any>).map(PhoneNumberDomainToJSON)),
        'race': value.race,
    };
}

/**
* @export
* @enum {string}
*/
export enum GhostUserClientTypeEnum {
    ANDROID = 'ANDROID',
    DESKTOPWEBAPP = 'DESKTOP_WEBAPP',
    DMVGO = 'DMV_GO',
    DMVORG = 'DMV_ORG',
    EMAIL = 'EMAIL',
    FRESHDESK = 'FRESH_DESK',
    IOS = 'IOS',
    LOCALHOST = 'LOCALHOST',
    MOBILEWEBAPP = 'MOBILE_WEBAPP',
    OTRADMINCONSOLE = 'OTR_ADMIN_CONSOLE',
    OTRADMINCONSOLEDEVO = 'OTR_ADMIN_CONSOLE_DEVO',
    OTRADMINCONSOLELOCALHOST = 'OTR_ADMIN_CONSOLE_LOCALHOST',
    OTREXPLORER = 'OTR_EXPLORER',
    OTRJOBSCHEDULER = 'OTR_JOB_SCHEDULER',
    OTRLAWFIRMPORTAL = 'OTR_LAWFIRM_PORTAL',
    OTRLAWFIRMPORTALDEVO = 'OTR_LAWFIRM_PORTAL_DEVO',
    OTRLAWFIRMPORTALLOCALHOST = 'OTR_LAWFIRM_PORTAL_LOCALHOST',
    OTRWEBSITE = 'OTR_WEBSITE',
    OTRWEBSITEDEVO = 'OTR_WEBSITE_DEVO',
    OTRWEBSITELOCALHOST = 'OTR_WEBSITE_LOCALHOST',
    OTRWIDGET = 'OTR_WIDGET',
    UNKNOWN = 'UNKNOWN'
}
/**
* @export
* @enum {string}
*/
export enum GhostUserGenderEnum {
    FEMALE = 'FEMALE',
    MALE = 'MALE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    NOTLISTED = 'NOT_LISTED',
    UNVERIFIED = 'UNVERIFIED',
    X = 'X'
}
/**
* @export
* @enum {string}
*/
export enum GhostUserRaceEnum {
    ASIAN = 'ASIAN',
    BLACK = 'BLACK',
    HISPANIC = 'HISPANIC',
    MIDDLEEASTERN = 'MIDDLE_EASTERN',
    NATIVE = 'NATIVE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    PACIFICISLANDER = 'PACIFIC_ISLANDER',
    TWOORMORE = 'TWO_OR_MORE',
    UNKNOWN = 'UNKNOWN',
    UNVERIFIED = 'UNVERIFIED',
    WHITE = 'WHITE'
}


