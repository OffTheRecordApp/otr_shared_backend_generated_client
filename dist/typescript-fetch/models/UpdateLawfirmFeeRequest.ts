/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TimestampReq,
    TimestampReqFromJSON,
    TimestampReqFromJSONTyped,
    TimestampReqToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateLawfirmFeeRequest
 */
export interface UpdateLawfirmFeeRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    note?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateLawfirmFeeRequest
     */
    otrFeeAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateLawfirmFeeRequest
     */
    processingFeeAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    sourceCasePaymentId?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateLawfirmFeeRequest
     */
    totalFeeAmount?: number;
    /**
     * 
     * @type {TimestampReq}
     * @memberof UpdateLawfirmFeeRequest
     */
    transactionDateUtc?: TimestampReq;
    /**
     * 
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    transactionMethod?: UpdateLawfirmFeeRequestTransactionMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateLawfirmFeeRequest
     */
    transactionReferenceId?: string;
    /**
     * 
     * @type {TimestampReq}
     * @memberof UpdateLawfirmFeeRequest
     */
    updatedDueDateUtc?: TimestampReq;
}

export function UpdateLawfirmFeeRequestFromJSON(json: any): UpdateLawfirmFeeRequest {
    return UpdateLawfirmFeeRequestFromJSONTyped(json, false);
}

export function UpdateLawfirmFeeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLawfirmFeeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'note': !exists(json, 'note') ? undefined : json['note'],
        'otrFeeAmount': !exists(json, 'otrFeeAmount') ? undefined : json['otrFeeAmount'],
        'processingFeeAmount': !exists(json, 'processingFeeAmount') ? undefined : json['processingFeeAmount'],
        'sourceCasePaymentId': !exists(json, 'sourceCasePaymentId') ? undefined : json['sourceCasePaymentId'],
        'totalFeeAmount': !exists(json, 'totalFeeAmount') ? undefined : json['totalFeeAmount'],
        'transactionDateUtc': !exists(json, 'transactionDateUtc') ? undefined : TimestampReqFromJSON(json['transactionDateUtc']),
        'transactionMethod': !exists(json, 'transactionMethod') ? undefined : json['transactionMethod'],
        'transactionReferenceId': !exists(json, 'transactionReferenceId') ? undefined : json['transactionReferenceId'],
        'updatedDueDateUtc': !exists(json, 'updatedDueDateUtc') ? undefined : TimestampReqFromJSON(json['updatedDueDateUtc']),
    };
}

export function UpdateLawfirmFeeRequestToJSON(value?: UpdateLawfirmFeeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'note': value.note,
        'otrFeeAmount': value.otrFeeAmount,
        'processingFeeAmount': value.processingFeeAmount,
        'sourceCasePaymentId': value.sourceCasePaymentId,
        'totalFeeAmount': value.totalFeeAmount,
        'transactionDateUtc': TimestampReqToJSON(value.transactionDateUtc),
        'transactionMethod': value.transactionMethod,
        'transactionReferenceId': value.transactionReferenceId,
        'updatedDueDateUtc': TimestampReqToJSON(value.updatedDueDateUtc),
    };
}

/**
* @export
* @enum {string}
*/
export enum UpdateLawfirmFeeRequestTransactionMethodEnum {
    CASH = 'CASH',
    CHECK = 'CHECK',
    DESTINATIONCHARGETRANSFER = 'DESTINATION_CHARGE_TRANSFER',
    LOBCHECK = 'LOB_CHECK',
    PAYPAL = 'PAYPAL',
    STRIPEAPPLICATIONFEE = 'STRIPE_APPLICATION_FEE',
    STRIPECHARGE = 'STRIPE_CHARGE',
    STRIPECONNECTDEBIT = 'STRIPE_CONNECT_DEBIT',
    STRIPETRANSFER = 'STRIPE_TRANSFER',
    UNKNOWN = 'UNKNOWN',
    VENMO = 'VENMO',
    WIRETRANSFER = 'WIRE_TRANSFER',
    ZELLE = 'ZELLE'
}


