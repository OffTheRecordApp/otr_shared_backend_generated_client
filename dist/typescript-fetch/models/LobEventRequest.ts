/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LobEvent,
    LobEventFromJSON,
    LobEventFromJSONTyped,
    LobEventToJSON,
} from './';

/**
 * 
 * @export
 * @interface LobEventRequest
 */
export interface LobEventRequest {
    /**
     * 
     * @type {Date}
     * @memberof LobEventRequest
     */
    dateCreated?: Date;
    /**
     * 
     * @type {LobEvent}
     * @memberof LobEventRequest
     */
    eventType?: LobEvent;
    /**
     * 
     * @type {string}
     * @memberof LobEventRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof LobEventRequest
     */
    referenceId?: string;
}

export function LobEventRequestFromJSON(json: any): LobEventRequest {
    return LobEventRequestFromJSONTyped(json, false);
}

export function LobEventRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LobEventRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dateCreated': !exists(json, 'date_created') ? undefined : (new Date(json['date_created'])),
        'eventType': !exists(json, 'event_type') ? undefined : LobEventFromJSON(json['event_type']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
    };
}

export function LobEventRequestToJSON(value?: LobEventRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date_created': value.dateCreated === undefined ? undefined : (value.dateCreated.toISOString()),
        'event_type': LobEventToJSON(value.eventType),
        'id': value.id,
        'reference_id': value.referenceId,
    };
}


