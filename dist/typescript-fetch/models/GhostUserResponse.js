/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function GhostUserResponseFromJSON(json) {
    return GhostUserResponseFromJSONTyped(json, false);
}
export function GhostUserResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dob': !exists(json, 'dob') ? undefined : (new Date(json['dob'])),
        'driverLicenseNumber': !exists(json, 'driverLicenseNumber') ? undefined : json['driverLicenseNumber'],
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'race': !exists(json, 'race') ? undefined : json['race'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}
export function GhostUserResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'dob': value.dob === undefined ? undefined : (value.dob.toISOString()),
        'driverLicenseNumber': value.driverLicenseNumber,
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'gender': value.gender,
        'lastname': value.lastname,
        'race': value.race,
        'userId': value.userId,
    };
}
/**
* @export
* @enum {string}
*/
export var GhostUserResponseGenderEnum;
(function (GhostUserResponseGenderEnum) {
    GhostUserResponseGenderEnum["FEMALE"] = "FEMALE";
    GhostUserResponseGenderEnum["MALE"] = "MALE";
    GhostUserResponseGenderEnum["NOTAVAILABLE"] = "NOT_AVAILABLE";
    GhostUserResponseGenderEnum["NOTLISTED"] = "NOT_LISTED";
    GhostUserResponseGenderEnum["UNVERIFIED"] = "UNVERIFIED";
})(GhostUserResponseGenderEnum || (GhostUserResponseGenderEnum = {}));
/**
* @export
* @enum {string}
*/
export var GhostUserResponseRaceEnum;
(function (GhostUserResponseRaceEnum) {
    GhostUserResponseRaceEnum["ASIAN"] = "ASIAN";
    GhostUserResponseRaceEnum["BLACK"] = "BLACK";
    GhostUserResponseRaceEnum["HISPANIC"] = "HISPANIC";
    GhostUserResponseRaceEnum["MIDDLEEASTERN"] = "MIDDLE_EASTERN";
    GhostUserResponseRaceEnum["NATIVE"] = "NATIVE";
    GhostUserResponseRaceEnum["NOTAVAILABLE"] = "NOT_AVAILABLE";
    GhostUserResponseRaceEnum["PACIFICISLANDER"] = "PACIFIC_ISLANDER";
    GhostUserResponseRaceEnum["TWOORMORE"] = "TWO_OR_MORE";
    GhostUserResponseRaceEnum["UNKNOWN"] = "UNKNOWN";
    GhostUserResponseRaceEnum["UNVERIFIED"] = "UNVERIFIED";
    GhostUserResponseRaceEnum["WHITE"] = "WHITE";
})(GhostUserResponseRaceEnum || (GhostUserResponseRaceEnum = {}));
