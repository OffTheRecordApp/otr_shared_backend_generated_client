/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ContactListFromJSON, ContactListToJSON, FirstContactReplyFromJSON, FirstContactReplyToJSON, LinkedObjectsFromJSON, LinkedObjectsToJSON, ServiceLevelAgreementFromJSON, ServiceLevelAgreementToJSON, SourceFromJSON, SourceToJSON, StatisticsFromJSON, StatisticsToJSON, TagsFromJSON, TagsToJSON, TeammatesFromJSON, TeammatesToJSON, TopicsFromJSON, TopicsToJSON, } from './';
export function IntercomConversationResponseFromJSON(json) {
    return IntercomConversationResponseFromJSONTyped(json, false);
}
export function IntercomConversationResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'adminAssigneeId': !exists(json, 'admin_assignee_id') ? undefined : json['admin_assignee_id'],
        'aiAgent': !exists(json, 'ai_agent') ? undefined : json['ai_agent'],
        'aiAgentParticipated': !exists(json, 'ai_agent_participated') ? undefined : json['ai_agent_participated'],
        'contacts': !exists(json, 'contacts') ? undefined : ContactListFromJSON(json['contacts']),
        'conversationRating': !exists(json, 'conversation_rating') ? undefined : json['conversation_rating'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'customAttributes': !exists(json, 'custom_attributes') ? undefined : json['custom_attributes'],
        'firstContactReply': !exists(json, 'first_contact_reply') ? undefined : FirstContactReplyFromJSON(json['first_contact_reply']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'linkedObjects': !exists(json, 'linked_objects') ? undefined : LinkedObjectsFromJSON(json['linked_objects']),
        'open': !exists(json, 'open') ? undefined : json['open'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'read': !exists(json, 'read') ? undefined : json['read'],
        'slaApplied': !exists(json, 'sla_applied') ? undefined : ServiceLevelAgreementFromJSON(json['sla_applied']),
        'snoozedUntil': !exists(json, 'snoozed_until') ? undefined : json['snoozed_until'],
        'source': !exists(json, 'source') ? undefined : SourceFromJSON(json['source']),
        'state': !exists(json, 'state') ? undefined : json['state'],
        'statistics': !exists(json, 'statistics') ? undefined : StatisticsFromJSON(json['statistics']),
        'tags': !exists(json, 'tags') ? undefined : TagsFromJSON(json['tags']),
        'teamAssigneeId': !exists(json, 'team_assignee_id') ? undefined : json['team_assignee_id'],
        'teammates': !exists(json, 'teammates') ? undefined : TeammatesFromJSON(json['teammates']),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'topics': !exists(json, 'topics') ? undefined : TopicsFromJSON(json['topics']),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'waitingSince': !exists(json, 'waiting_since') ? undefined : json['waiting_since'],
    };
}
export function IntercomConversationResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'admin_assignee_id': value.adminAssigneeId,
        'ai_agent': value.aiAgent,
        'ai_agent_participated': value.aiAgentParticipated,
        'contacts': ContactListToJSON(value.contacts),
        'conversation_rating': value.conversationRating,
        'created_at': value.createdAt,
        'custom_attributes': value.customAttributes,
        'first_contact_reply': FirstContactReplyToJSON(value.firstContactReply),
        'id': value.id,
        'linked_objects': LinkedObjectsToJSON(value.linkedObjects),
        'open': value.open,
        'priority': value.priority,
        'read': value.read,
        'sla_applied': ServiceLevelAgreementToJSON(value.slaApplied),
        'snoozed_until': value.snoozedUntil,
        'source': SourceToJSON(value.source),
        'state': value.state,
        'statistics': StatisticsToJSON(value.statistics),
        'tags': TagsToJSON(value.tags),
        'team_assignee_id': value.teamAssigneeId,
        'teammates': TeammatesToJSON(value.teammates),
        'title': value.title,
        'topics': TopicsToJSON(value.topics),
        'type': value.type,
        'updated_at': value.updatedAt,
        'waiting_since': value.waitingSince,
    };
}
