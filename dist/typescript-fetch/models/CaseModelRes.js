/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { CancelationDetailsResFromJSON, CancelationDetailsResToJSON, CaseActionDomainFromJSON, CaseActionDomainToJSON, CaseStatusDomainFromJSON, CaseStatusDomainToJSON, CaseViolationPenaltyFromJSON, CaseViolationPenaltyToJSON, CitationModelResFromJSON, CitationModelResToJSON, LawfirmCaseModelResFromJSON, LawfirmCaseModelResToJSON, LetterOfEngagementFromJSON, LetterOfEngagementToJSON, PaymentCardInputFromJSON, PaymentCardInputToJSON, PaymentPlanTypeModelResFromJSON, PaymentPlanTypeModelResToJSON, SubscriptionDiscountEligibilityResFromJSON, SubscriptionDiscountEligibilityResToJSON, TimestampResFromJSON, TimestampResToJSON, UserDomainResFromJSON, UserDomainResToJSON, } from './';
export function CaseModelResFromJSON(json) {
    return CaseModelResFromJSONTyped(json, false);
}
export function CaseModelResFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'actions': !exists(json, 'actions') ? undefined : (json['actions'].map(CaseActionDomainFromJSON)),
        'adjustedFineAmount': !exists(json, 'adjustedFineAmount') ? undefined : json['adjustedFineAmount'],
        'adjustedPointCount': !exists(json, 'adjustedPointCount') ? undefined : json['adjustedPointCount'],
        'bookingConfirmedDate': !exists(json, 'bookingConfirmedDate') ? undefined : TimestampResFromJSON(json['bookingConfirmedDate']),
        'cancelationDetails': !exists(json, 'cancelationDetails') ? undefined : CancelationDetailsResFromJSON(json['cancelationDetails']),
        'cancelationReason': !exists(json, 'cancelationReason') ? undefined : json['cancelationReason'],
        'cancellationExpiryDate': !exists(json, 'cancellationExpiryDate') ? undefined : TimestampResFromJSON(json['cancellationExpiryDate']),
        'cardInput': !exists(json, 'cardInput') ? undefined : PaymentCardInputFromJSON(json['cardInput']),
        'caseCancellationDate': !exists(json, 'caseCancellationDate') ? undefined : TimestampResFromJSON(json['caseCancellationDate']),
        'caseCreationDate': !exists(json, 'caseCreationDate') ? undefined : TimestampResFromJSON(json['caseCreationDate']),
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseResolutionDate': !exists(json, 'caseResolutionDate') ? undefined : TimestampResFromJSON(json['caseResolutionDate']),
        'caseStatus': !exists(json, 'caseStatus') ? undefined : json['caseStatus'],
        'caseStatusCategory': !exists(json, 'caseStatusCategory') ? undefined : json['caseStatusCategory'],
        'caseStatusDomain': !exists(json, 'caseStatusDomain') ? undefined : CaseStatusDomainFromJSON(json['caseStatusDomain']),
        'citation': !exists(json, 'citation') ? undefined : CitationModelResFromJSON(json['citation']),
        'courtAppointmentDate': !exists(json, 'courtAppointmentDate') ? undefined : TimestampResFromJSON(json['courtAppointmentDate']),
        'hasLeftLawyerReview': !exists(json, 'hasLeftLawyerReview') ? undefined : json['hasLeftLawyerReview'],
        'isPointSystemState': !exists(json, 'isPointSystemState') ? undefined : json['isPointSystemState'],
        'lawfirmCaseDecision': !exists(json, 'lawfirmCaseDecision') ? undefined : LawfirmCaseModelResFromJSON(json['lawfirmCaseDecision']),
        'lawfirmCodeApplied': !exists(json, 'lawfirmCodeApplied') ? undefined : json['lawfirmCodeApplied'],
        'letterOfEngagement': !exists(json, 'letterOfEngagement') ? undefined : LetterOfEngagementFromJSON(json['letterOfEngagement']),
        'maxPenalties': !exists(json, 'maxPenalties') ? undefined : (json['maxPenalties'].map(CaseViolationPenaltyFromJSON)),
        'paymentPlanTypeModel': !exists(json, 'paymentPlanTypeModel') ? undefined : PaymentPlanTypeModelResFromJSON(json['paymentPlanTypeModel']),
        'referralCode': !exists(json, 'referralCode') ? undefined : json['referralCode'],
        'refundEligibility': !exists(json, 'refundEligibility') ? undefined : json['refundEligibility'],
        'resolutionSummary': !exists(json, 'resolutionSummary') ? undefined : json['resolutionSummary'],
        'subscriptionDiscountEligibility': !exists(json, 'subscriptionDiscountEligibility') ? undefined : SubscriptionDiscountEligibilityResFromJSON(json['subscriptionDiscountEligibility']),
        'uiRefundMsg': !exists(json, 'uiRefundMsg') ? undefined : json['uiRefundMsg'],
        'user': !exists(json, 'user') ? undefined : UserDomainResFromJSON(json['user']),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}
export function CaseModelResToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'actions': value.actions === undefined ? undefined : (value.actions.map(CaseActionDomainToJSON)),
        'adjustedFineAmount': value.adjustedFineAmount,
        'adjustedPointCount': value.adjustedPointCount,
        'bookingConfirmedDate': TimestampResToJSON(value.bookingConfirmedDate),
        'cancelationDetails': CancelationDetailsResToJSON(value.cancelationDetails),
        'cancelationReason': value.cancelationReason,
        'cancellationExpiryDate': TimestampResToJSON(value.cancellationExpiryDate),
        'cardInput': PaymentCardInputToJSON(value.cardInput),
        'caseCancellationDate': TimestampResToJSON(value.caseCancellationDate),
        'caseCreationDate': TimestampResToJSON(value.caseCreationDate),
        'caseId': value.caseId,
        'caseResolutionDate': TimestampResToJSON(value.caseResolutionDate),
        'caseStatus': value.caseStatus,
        'caseStatusCategory': value.caseStatusCategory,
        'caseStatusDomain': CaseStatusDomainToJSON(value.caseStatusDomain),
        'citation': CitationModelResToJSON(value.citation),
        'courtAppointmentDate': TimestampResToJSON(value.courtAppointmentDate),
        'hasLeftLawyerReview': value.hasLeftLawyerReview,
        'isPointSystemState': value.isPointSystemState,
        'lawfirmCaseDecision': LawfirmCaseModelResToJSON(value.lawfirmCaseDecision),
        'lawfirmCodeApplied': value.lawfirmCodeApplied,
        'letterOfEngagement': LetterOfEngagementToJSON(value.letterOfEngagement),
        'maxPenalties': value.maxPenalties === undefined ? undefined : (value.maxPenalties.map(CaseViolationPenaltyToJSON)),
        'paymentPlanTypeModel': PaymentPlanTypeModelResToJSON(value.paymentPlanTypeModel),
        'referralCode': value.referralCode,
        'refundEligibility': value.refundEligibility,
        'resolutionSummary': value.resolutionSummary,
        'subscriptionDiscountEligibility': SubscriptionDiscountEligibilityResToJSON(value.subscriptionDiscountEligibility),
        'uiRefundMsg': value.uiRefundMsg,
        'user': UserDomainResToJSON(value.user),
        'userId': value.userId,
    };
}
/**
* @export
* @enum {string}
*/
export var CaseModelResCaseStatusEnum;
(function (CaseModelResCaseStatusEnum) {
    CaseModelResCaseStatusEnum["AMENDEDDOWNWITHINCLASS"] = "AMENDED_DOWN_WITHIN_CLASS";
    CaseModelResCaseStatusEnum["AMENDEDFULLFINE"] = "AMENDED_FULL_FINE";
    CaseModelResCaseStatusEnum["AMENDEDINCREASEDFINE"] = "AMENDED_INCREASED_FINE";
    CaseModelResCaseStatusEnum["AMENDEDNOFINE"] = "AMENDED_NO_FINE";
    CaseModelResCaseStatusEnum["AMENDEDREDUCEDFINE"] = "AMENDED_REDUCED_FINE";
    CaseModelResCaseStatusEnum["AMENDEDTOINFRACTION"] = "AMENDED_TO_INFRACTION";
    CaseModelResCaseStatusEnum["AMENDEDTONMV"] = "AMENDED_TO_NMV";
    CaseModelResCaseStatusEnum["CANCELLEDATTORNEYATFAULT"] = "CANCELLED_ATTORNEY_AT_FAULT";
    CaseModelResCaseStatusEnum["CANCELLEDBYLAWFIRM"] = "CANCELLED_BY_LAWFIRM";
    CaseModelResCaseStatusEnum["CANCELLEDBYUSER"] = "CANCELLED_BY_USER";
    CaseModelResCaseStatusEnum["CANCELLEDDUPLICATE"] = "CANCELLED_DUPLICATE";
    CaseModelResCaseStatusEnum["CANCELLEDNMV"] = "CANCELLED_NMV";
    CaseModelResCaseStatusEnum["CANCELLEDNONPAYMENT"] = "CANCELLED_NON_PAYMENT";
    CaseModelResCaseStatusEnum["CANCELLEDNOLAWFIRM"] = "CANCELLED_NO_LAWFIRM";
    CaseModelResCaseStatusEnum["CANCELLEDOVERDUE"] = "CANCELLED_OVERDUE";
    CaseModelResCaseStatusEnum["CANCELLEDTOOSHORTNOTICE"] = "CANCELLED_TOO_SHORT_NOTICE";
    CaseModelResCaseStatusEnum["CASEINPROGRESS"] = "CASE_IN_PROGRESS";
    CaseModelResCaseStatusEnum["CLIENTCONFIRMED"] = "CLIENT_CONFIRMED";
    CaseModelResCaseStatusEnum["CLIENTCONFIRMEDUNPAID"] = "CLIENT_CONFIRMED_UNPAID";
    CaseModelResCaseStatusEnum["CLIENTFIREDLAWFIRM"] = "CLIENT_FIRED_LAWFIRM";
    CaseModelResCaseStatusEnum["CLIENTFORCEDLOSS"] = "CLIENT_FORCED_LOSS";
    CaseModelResCaseStatusEnum["CLIENTPAIDFINE"] = "CLIENT_PAID_FINE";
    CaseModelResCaseStatusEnum["CLIENTUNRESPONSIVE"] = "CLIENT_UNRESPONSIVE";
    CaseModelResCaseStatusEnum["DEFERRED"] = "DEFERRED";
    CaseModelResCaseStatusEnum["DISMISSED"] = "DISMISSED";
    CaseModelResCaseStatusEnum["DIVERSION"] = "DIVERSION";
    CaseModelResCaseStatusEnum["FEESDISPUTED"] = "FEES_DISPUTED";
    CaseModelResCaseStatusEnum["FINEREDUCTIONONLY"] = "FINE_REDUCTION_ONLY";
    CaseModelResCaseStatusEnum["LAWFIRMWITHDRAWN"] = "LAWFIRM_WITHDRAWN";
    CaseModelResCaseStatusEnum["LOST"] = "LOST";
    CaseModelResCaseStatusEnum["NOLAWFIRMAVAILABLE"] = "NO_LAWFIRM_AVAILABLE";
    CaseModelResCaseStatusEnum["POINTREDUCTION"] = "POINT_REDUCTION";
    CaseModelResCaseStatusEnum["REFUSEDBYLAWFIRM"] = "REFUSED_BY_LAWFIRM";
    CaseModelResCaseStatusEnum["RESOLVEDNONPAYMENT"] = "RESOLVED_NON_PAYMENT";
    CaseModelResCaseStatusEnum["STALE"] = "STALE";
    CaseModelResCaseStatusEnum["TRAFFICSCHOOL"] = "TRAFFIC_SCHOOL";
    CaseModelResCaseStatusEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(CaseModelResCaseStatusEnum || (CaseModelResCaseStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var CaseModelResCaseStatusCategoryEnum;
(function (CaseModelResCaseStatusCategoryEnum) {
    CaseModelResCaseStatusCategoryEnum["ACTIVE"] = "ACTIVE";
    CaseModelResCaseStatusCategoryEnum["CANCELLED"] = "CANCELLED";
    CaseModelResCaseStatusCategoryEnum["RESOLVED"] = "RESOLVED";
    CaseModelResCaseStatusCategoryEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(CaseModelResCaseStatusCategoryEnum || (CaseModelResCaseStatusCategoryEnum = {}));
/**
* @export
* @enum {string}
*/
export var CaseModelResRefundEligibilityEnum;
(function (CaseModelResRefundEligibilityEnum) {
    CaseModelResRefundEligibilityEnum["FULLREFUND"] = "FULL_REFUND";
    CaseModelResRefundEligibilityEnum["NOREFUND"] = "NO_REFUND";
})(CaseModelResRefundEligibilityEnum || (CaseModelResRefundEligibilityEnum = {}));
