/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseUserPermissionAttributes,
    CaseUserPermissionAttributesFromJSON,
    CaseUserPermissionAttributesFromJSONTyped,
    CaseUserPermissionAttributesToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetCaseUserModel
 */
export interface GetCaseUserModel {
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    additionalNote?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    caseId?: string;
    /**
     * 
     * @type {Date}
     * @memberof GetCaseUserModel
     */
    creationDateUtc?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetCaseUserModel
     */
    dateOfBirth?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    firstName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetCaseUserModel
     */
    isBookingAgent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCaseUserModel
     */
    isDefendant?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCaseUserModel
     */
    isGhostUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCaseUserModel
     */
    isOwner?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCaseUserModel
     */
    isRemoved?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    lastName?: string;
    /**
     * 
     * @type {Date}
     * @memberof GetCaseUserModel
     */
    lastUpdatedDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    licenseNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    licenseState?: string;
    /**
     * 
     * @type {CaseUserPermissionAttributes}
     * @memberof GetCaseUserModel
     */
    permissionAttributes?: CaseUserPermissionAttributes;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    relationshipToClient?: GetCaseUserModelRelationshipToClientEnum;
    /**
     * 
     * @type {string}
     * @memberof GetCaseUserModel
     */
    signedProfilePictureUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof GetCaseUserModel
     */
    userId?: number;
}

export function GetCaseUserModelFromJSON(json: any): GetCaseUserModel {
    return GetCaseUserModelFromJSONTyped(json, false);
}

export function GetCaseUserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCaseUserModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'additionalNote': !exists(json, 'additionalNote') ? undefined : json['additionalNote'],
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'creationDateUtc': !exists(json, 'creationDateUtc') ? undefined : (new Date(json['creationDateUtc'])),
        'dateOfBirth': !exists(json, 'dateOfBirth') ? undefined : (new Date(json['dateOfBirth'])),
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'isBookingAgent': !exists(json, 'isBookingAgent') ? undefined : json['isBookingAgent'],
        'isDefendant': !exists(json, 'isDefendant') ? undefined : json['isDefendant'],
        'isGhostUser': !exists(json, 'isGhostUser') ? undefined : json['isGhostUser'],
        'isOwner': !exists(json, 'isOwner') ? undefined : json['isOwner'],
        'isRemoved': !exists(json, 'isRemoved') ? undefined : json['isRemoved'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'lastUpdatedDateUtc': !exists(json, 'lastUpdatedDateUtc') ? undefined : (new Date(json['lastUpdatedDateUtc'])),
        'licenseNumber': !exists(json, 'licenseNumber') ? undefined : json['licenseNumber'],
        'licenseState': !exists(json, 'licenseState') ? undefined : json['licenseState'],
        'permissionAttributes': !exists(json, 'permissionAttributes') ? undefined : CaseUserPermissionAttributesFromJSON(json['permissionAttributes']),
        'relationshipToClient': !exists(json, 'relationshipToClient') ? undefined : json['relationshipToClient'],
        'signedProfilePictureUrl': !exists(json, 'signedProfilePictureUrl') ? undefined : json['signedProfilePictureUrl'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function GetCaseUserModelToJSON(value?: GetCaseUserModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'additionalNote': value.additionalNote,
        'caseId': value.caseId,
        'creationDateUtc': value.creationDateUtc === undefined ? undefined : (value.creationDateUtc.toISOString()),
        'dateOfBirth': value.dateOfBirth === undefined ? undefined : (value.dateOfBirth.toISOString()),
        'emailAddress': value.emailAddress,
        'firstName': value.firstName,
        'isBookingAgent': value.isBookingAgent,
        'isDefendant': value.isDefendant,
        'isGhostUser': value.isGhostUser,
        'isOwner': value.isOwner,
        'isRemoved': value.isRemoved,
        'lastName': value.lastName,
        'lastUpdatedDateUtc': value.lastUpdatedDateUtc === undefined ? undefined : (value.lastUpdatedDateUtc.toISOString()),
        'licenseNumber': value.licenseNumber,
        'licenseState': value.licenseState,
        'permissionAttributes': CaseUserPermissionAttributesToJSON(value.permissionAttributes),
        'relationshipToClient': value.relationshipToClient,
        'signedProfilePictureUrl': value.signedProfilePictureUrl,
        'userId': value.userId,
    };
}

/**
* @export
* @enum {string}
*/
export enum GetCaseUserModelRelationshipToClientEnum {
    EMPLOYER = 'EMPLOYER',
    FAMILYMEMBER = 'FAMILY_MEMBER',
    FRIEND = 'FRIEND',
    LAWYER = 'LAWYER',
    OTHER = 'OTHER',
    SELF = 'SELF',
    UNKNOWN = 'UNKNOWN'
}


