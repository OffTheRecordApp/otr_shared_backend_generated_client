/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseViolationPenalty,
    CaseViolationPenaltyFromJSON,
    CaseViolationPenaltyFromJSONTyped,
    CaseViolationPenaltyToJSON,
} from './';

/**
 * 
 * @export
 * @interface ViolationResponse
 */
export interface ViolationResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ViolationResponse
     */
    criminal?: boolean;
    /**
     * 
     * @type {Array<CaseViolationPenalty>}
     * @memberof ViolationResponse
     */
    penalties?: Array<CaseViolationPenalty>;
    /**
     * 
     * @type {string}
     * @memberof ViolationResponse
     */
    trafficViolationDesc?: string;
    /**
     * 
     * @type {number}
     * @memberof ViolationResponse
     */
    trafficViolationTypeId?: number;
    /**
     * 
     * @type {string}
     * @memberof ViolationResponse
     */
    violationClassification?: ViolationResponseViolationClassificationEnum;
    /**
     * 
     * @type {string}
     * @memberof ViolationResponse
     */
    violationCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ViolationResponse
     */
    wobblerToCriminal?: boolean;
}

export function ViolationResponseFromJSON(json: any): ViolationResponse {
    return ViolationResponseFromJSONTyped(json, false);
}

export function ViolationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViolationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'criminal': !exists(json, 'criminal') ? undefined : json['criminal'],
        'penalties': !exists(json, 'penalties') ? undefined : ((json['penalties'] as Array<any>).map(CaseViolationPenaltyFromJSON)),
        'trafficViolationDesc': !exists(json, 'trafficViolationDesc') ? undefined : json['trafficViolationDesc'],
        'trafficViolationTypeId': !exists(json, 'trafficViolationTypeId') ? undefined : json['trafficViolationTypeId'],
        'violationClassification': !exists(json, 'violationClassification') ? undefined : json['violationClassification'],
        'violationCode': !exists(json, 'violationCode') ? undefined : json['violationCode'],
        'wobblerToCriminal': !exists(json, 'wobblerToCriminal') ? undefined : json['wobblerToCriminal'],
    };
}

export function ViolationResponseToJSON(value?: ViolationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'criminal': value.criminal,
        'penalties': value.penalties === undefined ? undefined : ((value.penalties as Array<any>).map(CaseViolationPenaltyToJSON)),
        'trafficViolationDesc': value.trafficViolationDesc,
        'trafficViolationTypeId': value.trafficViolationTypeId,
        'violationClassification': value.violationClassification,
        'violationCode': value.violationCode,
        'wobblerToCriminal': value.wobblerToCriminal,
    };
}

/**
* @export
* @enum {string}
*/
export enum ViolationResponseViolationClassificationEnum {
    CLASS1FELONY = 'CLASS_1_FELONY',
    CLASS1MISDEMEANOR = 'CLASS_1_MISDEMEANOR',
    CLASS2FELONY = 'CLASS_2_FELONY',
    CLASS2MISDEMEANOR = 'CLASS_2_MISDEMEANOR',
    CLASS3FELONY = 'CLASS_3_FELONY',
    CLASS3MISDEMEANOR = 'CLASS_3_MISDEMEANOR',
    CLASS4FELONY = 'CLASS_4_FELONY',
    CLASS4MISDEMEANOR = 'CLASS_4_MISDEMEANOR',
    CLASS5FELONY = 'CLASS_5_FELONY',
    CLASS6FELONY = 'CLASS_6_FELONY',
    CLASSA1MISDEMEANOR = 'CLASS_A1_MISDEMEANOR',
    CLASSAFELONY = 'CLASS_A_FELONY',
    CLASSAINFRACTION = 'CLASS_A_INFRACTION',
    CLASSAMISDEMEANOR = 'CLASS_A_MISDEMEANOR',
    CLASSAVIOLATION = 'CLASS_A_VIOLATION',
    CLASSBFELONY = 'CLASS_B_FELONY',
    CLASSBINFRACTION = 'CLASS_B_INFRACTION',
    CLASSBMISDEMEANOR = 'CLASS_B_MISDEMEANOR',
    CLASSBVIOLATION = 'CLASS_B_VIOLATION',
    CLASSCFELONY = 'CLASS_C_FELONY',
    CLASSCINFRACTION = 'CLASS_C_INFRACTION',
    CLASSCMISDEMEANOR = 'CLASS_C_MISDEMEANOR',
    CLASSCVIOLATION = 'CLASS_C_VIOLATION',
    CLASSDFELONY = 'CLASS_D_FELONY',
    CLASSDMISDEMEANOR = 'CLASS_D_MISDEMEANOR',
    CLASSDVIOLATION = 'CLASS_D_VIOLATION',
    CLASSEFELONY = 'CLASS_E_FELONY',
    CLASSFFELONY = 'CLASS_F_FELONY',
    CLASSHFELONY = 'CLASS_H_FELONY',
    DISORDERLYPERSONSOFFENSE = 'DISORDERLY_PERSONS_OFFENSE',
    FELONY = 'FELONY',
    FELONY1STDEGREE = 'FELONY_1ST_DEGREE',
    FELONY2NDDEGREE = 'FELONY_2ND_DEGREE',
    FELONY3RDDEGREE = 'FELONY_3RD_DEGREE',
    FELONY4THDEGREE = 'FELONY_4TH_DEGREE',
    FELONY5THDEGREE = 'FELONY_5TH_DEGREE',
    GROSSMISDEMEANOR = 'GROSS_MISDEMEANOR',
    HIGHANDAGGRAVATEDMISDEMEANOR = 'HIGH_AND_AGGRAVATED_MISDEMEANOR',
    INFRACTION = 'INFRACTION',
    LEVEL4FELONY = 'LEVEL_4_FELONY',
    LEVEL5FELONY = 'LEVEL_5_FELONY',
    LEVEL6FELONY = 'LEVEL_6_FELONY',
    MINORMISDEMEANOR = 'MINOR_MISDEMEANOR',
    MISDEMEANOR = 'MISDEMEANOR',
    MISDEMEANOR1STDEGREE = 'MISDEMEANOR_1ST_DEGREE',
    MISDEMEANOR2NDDEGREE = 'MISDEMEANOR_2ND_DEGREE',
    MISDEMEANOR3RDDEGREE = 'MISDEMEANOR_3RD_DEGREE',
    MISDEMEANOR4THDEGREE = 'MISDEMEANOR_4TH_DEGREE',
    MISDEMEANORWITHREFUND = 'MISDEMEANOR_WITH_REFUND',
    NONMOVING = 'NON_MOVING',
    NONREPORTABLE = 'NON_REPORTABLE',
    PETTYMISDEMEANOR = 'PETTY_MISDEMEANOR',
    QUASICRIMINAL = 'QUASI_CRIMINAL',
    SUMMARYOFFENSE = 'SUMMARY_OFFENSE',
    SUMMARYOFFENSENOREFUND = 'SUMMARY_OFFENSE_NO_REFUND',
    WOBBLERTOFELONY = 'WOBBLER_TO_FELONY',
    WOBBLERTOMISDEMEANOR = 'WOBBLER_TO_MISDEMEANOR'
}


