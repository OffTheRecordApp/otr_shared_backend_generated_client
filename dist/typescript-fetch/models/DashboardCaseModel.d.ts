/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CaseUserDetailsModel, DashboardAuthorModel, DashboardCaseCounterOfferModel, DashboardCitationModel, DashboardCourtModel, DashboardDisputeModel, DashboardStatusModel, EngagementLetterModel, OverduePaymentModel, ViolationModel0 } from './';
/**
 *
 * @export
 * @interface DashboardCaseModel
 */
export interface DashboardCaseModel {
    /**
     *
     * @type {DashboardAuthorModel}
     * @memberof DashboardCaseModel
     */
    authorModel?: DashboardAuthorModel;
    /**
     *
     * @type {Date}
     * @memberof DashboardCaseModel
     */
    bookingConfirmedDate?: Date;
    /**
     *
     * @type {DashboardCaseCounterOfferModel}
     * @memberof DashboardCaseModel
     */
    caseCounterOffer?: DashboardCaseCounterOfferModel;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    caseId?: string;
    /**
     *
     * @type {CaseUserDetailsModel}
     * @memberof DashboardCaseModel
     */
    caseUserDetails?: CaseUserDetailsModel;
    /**
     *
     * @type {DashboardCitationModel}
     * @memberof DashboardCaseModel
     */
    citation?: DashboardCitationModel;
    /**
     *
     * @type {DashboardCourtModel}
     * @memberof DashboardCaseModel
     */
    court?: DashboardCourtModel;
    /**
     *
     * @type {Date}
     * @memberof DashboardCaseModel
     */
    courtDate?: Date;
    /**
     *
     * @type {DashboardDisputeModel}
     * @memberof DashboardCaseModel
     */
    disputeModel?: DashboardDisputeModel;
    /**
     *
     * @type {EngagementLetterModel}
     * @memberof DashboardCaseModel
     */
    engagementLetter?: EngagementLetterModel;
    /**
     *
     * @type {boolean}
     * @memberof DashboardCaseModel
     */
    hasLeftLawyerReview?: boolean;
    /**
     *
     * @type {Date}
     * @memberof DashboardCaseModel
     */
    lastActivityDateUtc?: Date;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    lawfirmId?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    lawfirmName?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    lawfirmProfilePictureUrl?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    lawfirmRating?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    lawyerRating?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    legalFeeInCents?: number;
    /**
     *
     * @type {Date}
     * @memberof DashboardCaseModel
     */
    matchExpirationDateUtc?: Date;
    /**
     *
     * @type {string}
     * @memberof DashboardCaseModel
     */
    messageBody?: string;
    /**
     *
     * @type {OverduePaymentModel}
     * @memberof DashboardCaseModel
     */
    overduePayment?: OverduePaymentModel;
    /**
     *
     * @type {DashboardStatusModel}
     * @memberof DashboardCaseModel
     */
    status?: DashboardStatusModel;
    /**
     *
     * @type {boolean}
     * @memberof DashboardCaseModel
     */
    unread?: boolean;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    unreadNotificationCount?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardCaseModel
     */
    userId?: number;
    /**
     *
     * @type {Array<ViolationModel0>}
     * @memberof DashboardCaseModel
     */
    violations?: Array<ViolationModel0>;
}
export declare function DashboardCaseModelFromJSON(json: any): DashboardCaseModel;
export declare function DashboardCaseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardCaseModel;
export declare function DashboardCaseModelToJSON(value?: DashboardCaseModel | null): any;
