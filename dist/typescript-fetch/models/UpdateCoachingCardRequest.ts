/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateCoachingCardRequest
 */
export interface UpdateCoachingCardRequest {
    /**
     * 
     * @type {Date}
     * @memberof UpdateCoachingCardRequest
     */
    acknowledgementDateUtc?: Date;
    /**
     * 
     * @type {number}
     * @memberof UpdateCoachingCardRequest
     */
    coachingCardId?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateCoachingCardRequest
     */
    permissionType?: UpdateCoachingCardRequestPermissionTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateCoachingCardRequest
     */
    recipientNote?: string;
    /**
     * 
     * @type {Date}
     * @memberof UpdateCoachingCardRequest
     */
    resolutionDateUtc?: Date;
    /**
     * 
     * @type {number}
     * @memberof UpdateCoachingCardRequest
     */
    userId?: number;
}

export function UpdateCoachingCardRequestFromJSON(json: any): UpdateCoachingCardRequest {
    return UpdateCoachingCardRequestFromJSONTyped(json, false);
}

export function UpdateCoachingCardRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCoachingCardRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'acknowledgementDateUtc': !exists(json, 'acknowledgementDateUtc') ? undefined : (new Date(json['acknowledgementDateUtc'])),
        'coachingCardId': !exists(json, 'coachingCardId') ? undefined : json['coachingCardId'],
        'permissionType': !exists(json, 'permissionType') ? undefined : json['permissionType'],
        'recipientNote': !exists(json, 'recipientNote') ? undefined : json['recipientNote'],
        'resolutionDateUtc': !exists(json, 'resolutionDateUtc') ? undefined : (new Date(json['resolutionDateUtc'])),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function UpdateCoachingCardRequestToJSON(value?: UpdateCoachingCardRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'acknowledgementDateUtc': value.acknowledgementDateUtc === undefined ? undefined : (value.acknowledgementDateUtc.toISOString()),
        'coachingCardId': value.coachingCardId,
        'permissionType': value.permissionType,
        'recipientNote': value.recipientNote,
        'resolutionDateUtc': value.resolutionDateUtc === undefined ? undefined : (value.resolutionDateUtc.toISOString()),
        'userId': value.userId,
    };
}

/**
* @export
* @enum {string}
*/
export enum UpdateCoachingCardRequestPermissionTypeEnum {
    AUTHOR = 'AUTHOR',
    MANAGER = 'MANAGER',
    PARTICIPANT = 'PARTICIPANT',
    RECIPIENT = 'RECIPIENT'
}


