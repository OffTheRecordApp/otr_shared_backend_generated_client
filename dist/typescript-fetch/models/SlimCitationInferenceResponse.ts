/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CitationIssueDate,
    CitationIssueDateFromJSON,
    CitationIssueDateFromJSONTyped,
    CitationIssueDateToJSON,
    CourtName,
    CourtNameFromJSON,
    CourtNameFromJSONTyped,
    CourtNameToJSON,
    SkipMap,
    SkipMapFromJSON,
    SkipMapFromJSONTyped,
    SkipMapToJSON,
    ViolationNames,
    ViolationNamesFromJSON,
    ViolationNamesFromJSONTyped,
    ViolationNamesToJSON,
} from './';

/**
 * 
 * @export
 * @interface SlimCitationInferenceResponse
 */
export interface SlimCitationInferenceResponse {
    /**
     * 
     * @type {CitationIssueDate}
     * @memberof SlimCitationInferenceResponse
     */
    citationIssueDate?: CitationIssueDate;
    /**
     * 
     * @type {CourtName}
     * @memberof SlimCitationInferenceResponse
     */
    courtName?: CourtName;
    /**
     * 
     * @type {boolean}
     * @memberof SlimCitationInferenceResponse
     */
    handwritten?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SlimCitationInferenceResponse
     */
    ocrOutput?: string;
    /**
     * 
     * @type {SkipMap}
     * @memberof SlimCitationInferenceResponse
     */
    skipMap?: SkipMap;
    /**
     * 
     * @type {string}
     * @memberof SlimCitationInferenceResponse
     */
    template?: string;
    /**
     * 
     * @type {ViolationNames}
     * @memberof SlimCitationInferenceResponse
     */
    violationNames?: ViolationNames;
}

export function SlimCitationInferenceResponseFromJSON(json: any): SlimCitationInferenceResponse {
    return SlimCitationInferenceResponseFromJSONTyped(json, false);
}

export function SlimCitationInferenceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlimCitationInferenceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'citationIssueDate': !exists(json, 'citation_issue_date') ? undefined : CitationIssueDateFromJSON(json['citation_issue_date']),
        'courtName': !exists(json, 'court_name') ? undefined : CourtNameFromJSON(json['court_name']),
        'handwritten': !exists(json, 'handwritten') ? undefined : json['handwritten'],
        'ocrOutput': !exists(json, 'ocr_output') ? undefined : json['ocr_output'],
        'skipMap': !exists(json, 'skip_map') ? undefined : SkipMapFromJSON(json['skip_map']),
        'template': !exists(json, 'template') ? undefined : json['template'],
        'violationNames': !exists(json, 'violation_names') ? undefined : ViolationNamesFromJSON(json['violation_names']),
    };
}

export function SlimCitationInferenceResponseToJSON(value?: SlimCitationInferenceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'citation_issue_date': CitationIssueDateToJSON(value.citationIssueDate),
        'court_name': CourtNameToJSON(value.courtName),
        'handwritten': value.handwritten,
        'ocr_output': value.ocrOutput,
        'skip_map': SkipMapToJSON(value.skipMap),
        'template': value.template,
        'violation_names': ViolationNamesToJSON(value.violationNames),
    };
}


