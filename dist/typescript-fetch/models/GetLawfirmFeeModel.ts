/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GetCompetitionResponseModel,
    GetCompetitionResponseModelFromJSON,
    GetCompetitionResponseModelFromJSONTyped,
    GetCompetitionResponseModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetLawfirmFeeModel
 */
export interface GetLawfirmFeeModel {
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    accountFee?: number;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeModel
     */
    classification?: GetLawfirmFeeModelClassificationEnum;
    /**
     * 
     * @type {GetCompetitionResponseModel}
     * @memberof GetLawfirmFeeModel
     */
    competition?: GetCompetitionResponseModel;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    courtFee?: number;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    courtId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof GetLawfirmFeeModel
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    lawfirmFee?: number;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeModel
     */
    refundEligibility?: GetLawfirmFeeModelRefundEligibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeModel
     */
    violationId?: number;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeModel
     */
    violationName?: string;
}

export function GetLawfirmFeeModelFromJSON(json: any): GetLawfirmFeeModel {
    return GetLawfirmFeeModelFromJSONTyped(json, false);
}

export function GetLawfirmFeeModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetLawfirmFeeModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountFee': !exists(json, 'accountFee') ? undefined : json['accountFee'],
        'classification': !exists(json, 'classification') ? undefined : json['classification'],
        'competition': !exists(json, 'competition') ? undefined : GetCompetitionResponseModelFromJSON(json['competition']),
        'courtFee': !exists(json, 'courtFee') ? undefined : json['courtFee'],
        'courtId': !exists(json, 'courtId') ? undefined : json['courtId'],
        'isDeleted': !exists(json, 'isDeleted') ? undefined : json['isDeleted'],
        'lawfirmFee': !exists(json, 'lawfirmFee') ? undefined : json['lawfirmFee'],
        'refundEligibility': !exists(json, 'refundEligibility') ? undefined : json['refundEligibility'],
        'violationId': !exists(json, 'violationId') ? undefined : json['violationId'],
        'violationName': !exists(json, 'violationName') ? undefined : json['violationName'],
    };
}

export function GetLawfirmFeeModelToJSON(value?: GetLawfirmFeeModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountFee': value.accountFee,
        'classification': value.classification,
        'competition': GetCompetitionResponseModelToJSON(value.competition),
        'courtFee': value.courtFee,
        'courtId': value.courtId,
        'isDeleted': value.isDeleted,
        'lawfirmFee': value.lawfirmFee,
        'refundEligibility': value.refundEligibility,
        'violationId': value.violationId,
        'violationName': value.violationName,
    };
}

/**
* @export
* @enum {string}
*/
export enum GetLawfirmFeeModelClassificationEnum {
    CLASS1FELONY = 'CLASS_1_FELONY',
    CLASS1MISDEMEANOR = 'CLASS_1_MISDEMEANOR',
    CLASS2FELONY = 'CLASS_2_FELONY',
    CLASS2MISDEMEANOR = 'CLASS_2_MISDEMEANOR',
    CLASS3FELONY = 'CLASS_3_FELONY',
    CLASS3MISDEMEANOR = 'CLASS_3_MISDEMEANOR',
    CLASS4FELONY = 'CLASS_4_FELONY',
    CLASS4MISDEMEANOR = 'CLASS_4_MISDEMEANOR',
    CLASS5FELONY = 'CLASS_5_FELONY',
    CLASS6FELONY = 'CLASS_6_FELONY',
    CLASSA1MISDEMEANOR = 'CLASS_A1_MISDEMEANOR',
    CLASSAFELONY = 'CLASS_A_FELONY',
    CLASSAINFRACTION = 'CLASS_A_INFRACTION',
    CLASSAMISDEMEANOR = 'CLASS_A_MISDEMEANOR',
    CLASSAVIOLATION = 'CLASS_A_VIOLATION',
    CLASSBFELONY = 'CLASS_B_FELONY',
    CLASSBINFRACTION = 'CLASS_B_INFRACTION',
    CLASSBMISDEMEANOR = 'CLASS_B_MISDEMEANOR',
    CLASSBVIOLATION = 'CLASS_B_VIOLATION',
    CLASSCFELONY = 'CLASS_C_FELONY',
    CLASSCINFRACTION = 'CLASS_C_INFRACTION',
    CLASSCMISDEMEANOR = 'CLASS_C_MISDEMEANOR',
    CLASSCVIOLATION = 'CLASS_C_VIOLATION',
    CLASSDFELONY = 'CLASS_D_FELONY',
    CLASSDMISDEMEANOR = 'CLASS_D_MISDEMEANOR',
    CLASSDVIOLATION = 'CLASS_D_VIOLATION',
    CLASSEFELONY = 'CLASS_E_FELONY',
    CLASSFFELONY = 'CLASS_F_FELONY',
    CLASSHFELONY = 'CLASS_H_FELONY',
    DISORDERLYPERSONSOFFENSE = 'DISORDERLY_PERSONS_OFFENSE',
    FELONY = 'FELONY',
    FELONY1STDEGREE = 'FELONY_1ST_DEGREE',
    FELONY2NDDEGREE = 'FELONY_2ND_DEGREE',
    FELONY3RDDEGREE = 'FELONY_3RD_DEGREE',
    FELONY4THDEGREE = 'FELONY_4TH_DEGREE',
    FELONY5THDEGREE = 'FELONY_5TH_DEGREE',
    GROSSMISDEMEANOR = 'GROSS_MISDEMEANOR',
    HIGHANDAGGRAVATEDMISDEMEANOR = 'HIGH_AND_AGGRAVATED_MISDEMEANOR',
    INFRACTION = 'INFRACTION',
    LEVEL4FELONY = 'LEVEL_4_FELONY',
    LEVEL5FELONY = 'LEVEL_5_FELONY',
    LEVEL6FELONY = 'LEVEL_6_FELONY',
    MINORMISDEMEANOR = 'MINOR_MISDEMEANOR',
    MISDEMEANOR = 'MISDEMEANOR',
    MISDEMEANOR1STDEGREE = 'MISDEMEANOR_1ST_DEGREE',
    MISDEMEANOR2NDDEGREE = 'MISDEMEANOR_2ND_DEGREE',
    MISDEMEANOR3RDDEGREE = 'MISDEMEANOR_3RD_DEGREE',
    MISDEMEANOR4THDEGREE = 'MISDEMEANOR_4TH_DEGREE',
    MISDEMEANORWITHREFUND = 'MISDEMEANOR_WITH_REFUND',
    NONMOVING = 'NON_MOVING',
    NONREPORTABLE = 'NON_REPORTABLE',
    PETTYMISDEMEANOR = 'PETTY_MISDEMEANOR',
    QUASICRIMINAL = 'QUASI_CRIMINAL',
    SUMMARYOFFENSE = 'SUMMARY_OFFENSE',
    SUMMARYOFFENSENOREFUND = 'SUMMARY_OFFENSE_NO_REFUND',
    WOBBLERTOFELONY = 'WOBBLER_TO_FELONY',
    WOBBLERTOMISDEMEANOR = 'WOBBLER_TO_MISDEMEANOR'
}
/**
* @export
* @enum {string}
*/
export enum GetLawfirmFeeModelRefundEligibilityEnum {
    FULLREFUND = 'FULL_REFUND',
    NOREFUND = 'NO_REFUND'
}


