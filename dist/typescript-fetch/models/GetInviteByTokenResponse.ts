/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LawyerInviteByTokenModel,
    LawyerInviteByTokenModelFromJSON,
    LawyerInviteByTokenModelFromJSONTyped,
    LawyerInviteByTokenModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetInviteByTokenResponse
 */
export interface GetInviteByTokenResponse {
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    fullName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetInviteByTokenResponse
     */
    hasAccount?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    inviteeFirstName?: string;
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    inviteeLastName?: string;
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    inviteeRoleType?: GetInviteByTokenResponseInviteeRoleTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof GetInviteByTokenResponse
     */
    inviteeUserId?: number;
    /**
     * 
     * @type {LawyerInviteByTokenModel}
     * @memberof GetInviteByTokenResponse
     */
    lawyerInvite?: LawyerInviteByTokenModel;
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    profilePictureUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof GetInviteByTokenResponse
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof GetInviteByTokenResponse
     */
    verificationStatus?: GetInviteByTokenResponseVerificationStatusEnum;
}

export function GetInviteByTokenResponseFromJSON(json: any): GetInviteByTokenResponse {
    return GetInviteByTokenResponseFromJSONTyped(json, false);
}

export function GetInviteByTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetInviteByTokenResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'hasAccount': !exists(json, 'hasAccount') ? undefined : json['hasAccount'],
        'inviteeFirstName': !exists(json, 'inviteeFirstName') ? undefined : json['inviteeFirstName'],
        'inviteeLastName': !exists(json, 'inviteeLastName') ? undefined : json['inviteeLastName'],
        'inviteeRoleType': !exists(json, 'inviteeRoleType') ? undefined : json['inviteeRoleType'],
        'inviteeUserId': !exists(json, 'inviteeUserId') ? undefined : json['inviteeUserId'],
        'lawyerInvite': !exists(json, 'lawyerInvite') ? undefined : LawyerInviteByTokenModelFromJSON(json['lawyerInvite']),
        'profilePictureUrl': !exists(json, 'profilePictureUrl') ? undefined : json['profilePictureUrl'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'verificationStatus': !exists(json, 'verificationStatus') ? undefined : json['verificationStatus'],
    };
}

export function GetInviteByTokenResponseToJSON(value?: GetInviteByTokenResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailAddress': value.emailAddress,
        'fullName': value.fullName,
        'hasAccount': value.hasAccount,
        'inviteeFirstName': value.inviteeFirstName,
        'inviteeLastName': value.inviteeLastName,
        'inviteeRoleType': value.inviteeRoleType,
        'inviteeUserId': value.inviteeUserId,
        'lawyerInvite': LawyerInviteByTokenModelToJSON(value.lawyerInvite),
        'profilePictureUrl': value.profilePictureUrl,
        'userId': value.userId,
        'verificationStatus': value.verificationStatus,
    };
}

/**
* @export
* @enum {string}
*/
export enum GetInviteByTokenResponseInviteeRoleTypeEnum {
    ADMIN = 'ADMIN',
    DEFENDANT = 'DEFENDANT',
    LAWFIRMADMIN = 'LAWFIRM_ADMIN',
    LAWYER = 'LAWYER',
    PARTNER = 'PARTNER',
    UNKNOWN = 'UNKNOWN'
}
/**
* @export
* @enum {string}
*/
export enum GetInviteByTokenResponseVerificationStatusEnum {
    CANCELLED = 'CANCELLED',
    PENDING = 'PENDING',
    VERIFIED = 'VERIFIED'
}


