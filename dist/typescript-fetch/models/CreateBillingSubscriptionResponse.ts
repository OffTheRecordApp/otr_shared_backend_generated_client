/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateBillingSubscriptionItemModel,
    CreateBillingSubscriptionItemModelFromJSON,
    CreateBillingSubscriptionItemModelFromJSONTyped,
    CreateBillingSubscriptionItemModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface CreateBillingSubscriptionResponse
 */
export interface CreateBillingSubscriptionResponse {
    /**
     * 
     * @type {Array<CreateBillingSubscriptionItemModel>}
     * @memberof CreateBillingSubscriptionResponse
     */
    items?: Array<CreateBillingSubscriptionItemModel>;
    /**
     * 
     * @type {Date}
     * @memberof CreateBillingSubscriptionResponse
     */
    startAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CreateBillingSubscriptionResponse
     */
    status?: CreateBillingSubscriptionResponseStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateBillingSubscriptionResponse
     */
    subscriptionId?: string;
}

export function CreateBillingSubscriptionResponseFromJSON(json: any): CreateBillingSubscriptionResponse {
    return CreateBillingSubscriptionResponseFromJSONTyped(json, false);
}

export function CreateBillingSubscriptionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBillingSubscriptionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(CreateBillingSubscriptionItemModelFromJSON)),
        'startAt': !exists(json, 'startAt') ? undefined : (new Date(json['startAt'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'subscriptionId': !exists(json, 'subscriptionId') ? undefined : json['subscriptionId'],
    };
}

export function CreateBillingSubscriptionResponseToJSON(value?: CreateBillingSubscriptionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(CreateBillingSubscriptionItemModelToJSON)),
        'startAt': value.startAt === undefined ? undefined : (value.startAt.toISOString()),
        'status': value.status,
        'subscriptionId': value.subscriptionId,
    };
}

/**
* @export
* @enum {string}
*/
export enum CreateBillingSubscriptionResponseStatusEnum {
    ACTIVE = 'ACTIVE',
    CANCELED = 'CANCELED',
    INCOMPLETE = 'INCOMPLETE',
    INCOMPLETEEXPIRED = 'INCOMPLETE_EXPIRED',
    INTRIALPERIOD = 'IN_TRIAL_PERIOD',
    PASTDUE = 'PAST_DUE',
    UNKNOWN = 'UNKNOWN',
    UNPAID = 'UNPAID'
}


