/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserModel
 */
export interface UpdateUserModel {
    /**
     * 
     * @type {Date}
     * @memberof UpdateUserModel
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    driverLicenseNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    gender?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    hasLeftReview?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isEmailConfirmed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isLawfirmAccessGranted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isPaymentPlansAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isTestUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isUnsubscribed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserModel
     */
    isUserAccountEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    loginProvider?: UpdateUserModelLoginProviderEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    privacyMode?: UpdateUserModelPrivacyModeEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    profilePicture?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    race?: UpdateUserModelRaceEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    signUpCode?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateUserModel
     */
    signUpCodeUseCount?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserModel
     */
    userAlias?: string;
}

export function UpdateUserModelFromJSON(json: any): UpdateUserModel {
    return UpdateUserModelFromJSONTyped(json, false);
}

export function UpdateUserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dob': !exists(json, 'dob') ? undefined : (new Date(json['dob'])),
        'driverLicenseNumber': !exists(json, 'driverLicenseNumber') ? undefined : json['driverLicenseNumber'],
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'hasLeftReview': !exists(json, 'hasLeftReview') ? undefined : json['hasLeftReview'],
        'isEmailConfirmed': !exists(json, 'isEmailConfirmed') ? undefined : json['isEmailConfirmed'],
        'isLawfirmAccessGranted': !exists(json, 'isLawfirmAccessGranted') ? undefined : json['isLawfirmAccessGranted'],
        'isPaymentPlansAllowed': !exists(json, 'isPaymentPlansAllowed') ? undefined : json['isPaymentPlansAllowed'],
        'isTestUser': !exists(json, 'isTestUser') ? undefined : json['isTestUser'],
        'isUnsubscribed': !exists(json, 'isUnsubscribed') ? undefined : json['isUnsubscribed'],
        'isUserAccountEnabled': !exists(json, 'isUserAccountEnabled') ? undefined : json['isUserAccountEnabled'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'loginProvider': !exists(json, 'loginProvider') ? undefined : json['loginProvider'],
        'privacyMode': !exists(json, 'privacyMode') ? undefined : json['privacyMode'],
        'profilePicture': !exists(json, 'profilePicture') ? undefined : json['profilePicture'],
        'race': !exists(json, 'race') ? undefined : json['race'],
        'signUpCode': !exists(json, 'signUpCode') ? undefined : json['signUpCode'],
        'signUpCodeUseCount': !exists(json, 'signUpCodeUseCount') ? undefined : json['signUpCodeUseCount'],
        'userAlias': !exists(json, 'userAlias') ? undefined : json['userAlias'],
    };
}

export function UpdateUserModelToJSON(value?: UpdateUserModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dob': value.dob === undefined ? undefined : (value.dob.toISOString()),
        'driverLicenseNumber': value.driverLicenseNumber,
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'gender': value.gender,
        'hasLeftReview': value.hasLeftReview,
        'isEmailConfirmed': value.isEmailConfirmed,
        'isLawfirmAccessGranted': value.isLawfirmAccessGranted,
        'isPaymentPlansAllowed': value.isPaymentPlansAllowed,
        'isTestUser': value.isTestUser,
        'isUnsubscribed': value.isUnsubscribed,
        'isUserAccountEnabled': value.isUserAccountEnabled,
        'lastname': value.lastname,
        'loginProvider': value.loginProvider,
        'privacyMode': value.privacyMode,
        'profilePicture': value.profilePicture,
        'race': value.race,
        'signUpCode': value.signUpCode,
        'signUpCodeUseCount': value.signUpCodeUseCount,
        'userAlias': value.userAlias,
    };
}

/**
* @export
* @enum {string}
*/
export enum UpdateUserModelLoginProviderEnum {
    APPLE = 'APPLE',
    EMAIL = 'EMAIL',
    FACEBOOK = 'FACEBOOK',
    GOOGLE = 'GOOGLE',
    PHONE = 'PHONE',
    TWITTER = 'TWITTER',
    UNKNOWN = 'UNKNOWN'
}
/**
* @export
* @enum {string}
*/
export enum UpdateUserModelPrivacyModeEnum {
    FRIENDS = 'FRIENDS',
    PRIVATE = 'PRIVATE',
    PUBLIC = 'PUBLIC',
    SEMIPUBLIC = 'SEMI_PUBLIC'
}
/**
* @export
* @enum {string}
*/
export enum UpdateUserModelRaceEnum {
    ASIAN = 'ASIAN',
    BLACK = 'BLACK',
    HISPANIC = 'HISPANIC',
    MIDDLEEASTERN = 'MIDDLE_EASTERN',
    NATIVE = 'NATIVE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    PACIFICISLANDER = 'PACIFIC_ISLANDER',
    TWOORMORE = 'TWO_OR_MORE',
    UNKNOWN = 'UNKNOWN',
    UNVERIFIED = 'UNVERIFIED',
    WHITE = 'WHITE'
}


