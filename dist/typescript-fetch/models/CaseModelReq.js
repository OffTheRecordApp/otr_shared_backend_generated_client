/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { CancelationDetailsReqFromJSON, CancelationDetailsReqToJSON, CaseActionDomainFromJSON, CaseActionDomainToJSON, CaseStatusDomainFromJSON, CaseStatusDomainToJSON, CaseViolationPenaltyFromJSON, CaseViolationPenaltyToJSON, CitationModelReqFromJSON, CitationModelReqToJSON, LawfirmCaseModelReqFromJSON, LawfirmCaseModelReqToJSON, LetterOfEngagementFromJSON, LetterOfEngagementToJSON, PaymentPlanTypeModelReqFromJSON, PaymentPlanTypeModelReqToJSON, SubscriptionDiscountEligibilityReqFromJSON, SubscriptionDiscountEligibilityReqToJSON, TimestampReqFromJSON, TimestampReqToJSON, UserDomainReqFromJSON, UserDomainReqToJSON, } from './';
export function CaseModelReqFromJSON(json) {
    return CaseModelReqFromJSONTyped(json, false);
}
export function CaseModelReqFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'actions': !exists(json, 'actions') ? undefined : (json['actions'].map(CaseActionDomainFromJSON)),
        'adjustedFineAmount': !exists(json, 'adjustedFineAmount') ? undefined : json['adjustedFineAmount'],
        'adjustedPointCount': !exists(json, 'adjustedPointCount') ? undefined : json['adjustedPointCount'],
        'bookingConfirmedDate': !exists(json, 'bookingConfirmedDate') ? undefined : TimestampReqFromJSON(json['bookingConfirmedDate']),
        'cancelationDetails': !exists(json, 'cancelationDetails') ? undefined : CancelationDetailsReqFromJSON(json['cancelationDetails']),
        'cancelationReason': !exists(json, 'cancelationReason') ? undefined : json['cancelationReason'],
        'cancellationExpiryDate': !exists(json, 'cancellationExpiryDate') ? undefined : TimestampReqFromJSON(json['cancellationExpiryDate']),
        'caseCancellationDate': !exists(json, 'caseCancellationDate') ? undefined : TimestampReqFromJSON(json['caseCancellationDate']),
        'caseCreationDate': !exists(json, 'caseCreationDate') ? undefined : TimestampReqFromJSON(json['caseCreationDate']),
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseResolutionDate': !exists(json, 'caseResolutionDate') ? undefined : TimestampReqFromJSON(json['caseResolutionDate']),
        'caseStatus': !exists(json, 'caseStatus') ? undefined : json['caseStatus'],
        'caseStatusCategory': !exists(json, 'caseStatusCategory') ? undefined : json['caseStatusCategory'],
        'caseStatusDomain': !exists(json, 'caseStatusDomain') ? undefined : CaseStatusDomainFromJSON(json['caseStatusDomain']),
        'citation': !exists(json, 'citation') ? undefined : CitationModelReqFromJSON(json['citation']),
        'courtAppointmentDate': !exists(json, 'courtAppointmentDate') ? undefined : TimestampReqFromJSON(json['courtAppointmentDate']),
        'hasLeftLawyerReview': !exists(json, 'hasLeftLawyerReview') ? undefined : json['hasLeftLawyerReview'],
        'isPointSystemState': !exists(json, 'isPointSystemState') ? undefined : json['isPointSystemState'],
        'lawfirmCaseDecision': !exists(json, 'lawfirmCaseDecision') ? undefined : LawfirmCaseModelReqFromJSON(json['lawfirmCaseDecision']),
        'lawfirmCodeApplied': !exists(json, 'lawfirmCodeApplied') ? undefined : json['lawfirmCodeApplied'],
        'letterOfEngagement': !exists(json, 'letterOfEngagement') ? undefined : LetterOfEngagementFromJSON(json['letterOfEngagement']),
        'maxPenalties': !exists(json, 'maxPenalties') ? undefined : (json['maxPenalties'].map(CaseViolationPenaltyFromJSON)),
        'paymentPlanTypeModel': !exists(json, 'paymentPlanTypeModel') ? undefined : PaymentPlanTypeModelReqFromJSON(json['paymentPlanTypeModel']),
        'referralCode': !exists(json, 'referralCode') ? undefined : json['referralCode'],
        'refundEligibility': !exists(json, 'refundEligibility') ? undefined : json['refundEligibility'],
        'resolutionSummary': !exists(json, 'resolutionSummary') ? undefined : json['resolutionSummary'],
        'subscriptionDiscountEligibility': !exists(json, 'subscriptionDiscountEligibility') ? undefined : SubscriptionDiscountEligibilityReqFromJSON(json['subscriptionDiscountEligibility']),
        'uiRefundMsg': !exists(json, 'uiRefundMsg') ? undefined : json['uiRefundMsg'],
        'user': !exists(json, 'user') ? undefined : UserDomainReqFromJSON(json['user']),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}
export function CaseModelReqToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'actions': value.actions === undefined ? undefined : (value.actions.map(CaseActionDomainToJSON)),
        'adjustedFineAmount': value.adjustedFineAmount,
        'adjustedPointCount': value.adjustedPointCount,
        'bookingConfirmedDate': TimestampReqToJSON(value.bookingConfirmedDate),
        'cancelationDetails': CancelationDetailsReqToJSON(value.cancelationDetails),
        'cancelationReason': value.cancelationReason,
        'cancellationExpiryDate': TimestampReqToJSON(value.cancellationExpiryDate),
        'caseCancellationDate': TimestampReqToJSON(value.caseCancellationDate),
        'caseCreationDate': TimestampReqToJSON(value.caseCreationDate),
        'caseId': value.caseId,
        'caseResolutionDate': TimestampReqToJSON(value.caseResolutionDate),
        'caseStatus': value.caseStatus,
        'caseStatusCategory': value.caseStatusCategory,
        'caseStatusDomain': CaseStatusDomainToJSON(value.caseStatusDomain),
        'citation': CitationModelReqToJSON(value.citation),
        'courtAppointmentDate': TimestampReqToJSON(value.courtAppointmentDate),
        'hasLeftLawyerReview': value.hasLeftLawyerReview,
        'isPointSystemState': value.isPointSystemState,
        'lawfirmCaseDecision': LawfirmCaseModelReqToJSON(value.lawfirmCaseDecision),
        'lawfirmCodeApplied': value.lawfirmCodeApplied,
        'letterOfEngagement': LetterOfEngagementToJSON(value.letterOfEngagement),
        'maxPenalties': value.maxPenalties === undefined ? undefined : (value.maxPenalties.map(CaseViolationPenaltyToJSON)),
        'paymentPlanTypeModel': PaymentPlanTypeModelReqToJSON(value.paymentPlanTypeModel),
        'referralCode': value.referralCode,
        'refundEligibility': value.refundEligibility,
        'resolutionSummary': value.resolutionSummary,
        'subscriptionDiscountEligibility': SubscriptionDiscountEligibilityReqToJSON(value.subscriptionDiscountEligibility),
        'uiRefundMsg': value.uiRefundMsg,
        'user': UserDomainReqToJSON(value.user),
        'userId': value.userId,
    };
}
/**
* @export
* @enum {string}
*/
export var CaseModelReqCaseStatusEnum;
(function (CaseModelReqCaseStatusEnum) {
    CaseModelReqCaseStatusEnum["AMENDEDDOWNWITHINCLASS"] = "AMENDED_DOWN_WITHIN_CLASS";
    CaseModelReqCaseStatusEnum["AMENDEDFULLFINE"] = "AMENDED_FULL_FINE";
    CaseModelReqCaseStatusEnum["AMENDEDINCREASEDFINE"] = "AMENDED_INCREASED_FINE";
    CaseModelReqCaseStatusEnum["AMENDEDNOFINE"] = "AMENDED_NO_FINE";
    CaseModelReqCaseStatusEnum["AMENDEDREDUCEDFINE"] = "AMENDED_REDUCED_FINE";
    CaseModelReqCaseStatusEnum["AMENDEDTOINFRACTION"] = "AMENDED_TO_INFRACTION";
    CaseModelReqCaseStatusEnum["AMENDEDTONMV"] = "AMENDED_TO_NMV";
    CaseModelReqCaseStatusEnum["CANCELLEDATTORNEYATFAULT"] = "CANCELLED_ATTORNEY_AT_FAULT";
    CaseModelReqCaseStatusEnum["CANCELLEDBYLAWFIRM"] = "CANCELLED_BY_LAWFIRM";
    CaseModelReqCaseStatusEnum["CANCELLEDBYUSER"] = "CANCELLED_BY_USER";
    CaseModelReqCaseStatusEnum["CANCELLEDDUPLICATE"] = "CANCELLED_DUPLICATE";
    CaseModelReqCaseStatusEnum["CANCELLEDNMV"] = "CANCELLED_NMV";
    CaseModelReqCaseStatusEnum["CANCELLEDNONPAYMENT"] = "CANCELLED_NON_PAYMENT";
    CaseModelReqCaseStatusEnum["CANCELLEDNOLAWFIRM"] = "CANCELLED_NO_LAWFIRM";
    CaseModelReqCaseStatusEnum["CANCELLEDOVERDUE"] = "CANCELLED_OVERDUE";
    CaseModelReqCaseStatusEnum["CANCELLEDTOOSHORTNOTICE"] = "CANCELLED_TOO_SHORT_NOTICE";
    CaseModelReqCaseStatusEnum["CASEINPROGRESS"] = "CASE_IN_PROGRESS";
    CaseModelReqCaseStatusEnum["CLIENTCONFIRMED"] = "CLIENT_CONFIRMED";
    CaseModelReqCaseStatusEnum["CLIENTCONFIRMEDUNPAID"] = "CLIENT_CONFIRMED_UNPAID";
    CaseModelReqCaseStatusEnum["CLIENTFIREDLAWFIRM"] = "CLIENT_FIRED_LAWFIRM";
    CaseModelReqCaseStatusEnum["CLIENTFORCEDLOSS"] = "CLIENT_FORCED_LOSS";
    CaseModelReqCaseStatusEnum["CLIENTPAIDFINE"] = "CLIENT_PAID_FINE";
    CaseModelReqCaseStatusEnum["CLIENTUNRESPONSIVE"] = "CLIENT_UNRESPONSIVE";
    CaseModelReqCaseStatusEnum["DEFERRED"] = "DEFERRED";
    CaseModelReqCaseStatusEnum["DISMISSED"] = "DISMISSED";
    CaseModelReqCaseStatusEnum["DIVERSION"] = "DIVERSION";
    CaseModelReqCaseStatusEnum["FEESDISPUTED"] = "FEES_DISPUTED";
    CaseModelReqCaseStatusEnum["FINEREDUCTIONONLY"] = "FINE_REDUCTION_ONLY";
    CaseModelReqCaseStatusEnum["LAWFIRMWITHDRAWN"] = "LAWFIRM_WITHDRAWN";
    CaseModelReqCaseStatusEnum["LOST"] = "LOST";
    CaseModelReqCaseStatusEnum["NOLAWFIRMAVAILABLE"] = "NO_LAWFIRM_AVAILABLE";
    CaseModelReqCaseStatusEnum["POINTREDUCTION"] = "POINT_REDUCTION";
    CaseModelReqCaseStatusEnum["REFUSEDBYLAWFIRM"] = "REFUSED_BY_LAWFIRM";
    CaseModelReqCaseStatusEnum["RESOLVEDNONPAYMENT"] = "RESOLVED_NON_PAYMENT";
    CaseModelReqCaseStatusEnum["STALE"] = "STALE";
    CaseModelReqCaseStatusEnum["TRAFFICSCHOOL"] = "TRAFFIC_SCHOOL";
    CaseModelReqCaseStatusEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(CaseModelReqCaseStatusEnum || (CaseModelReqCaseStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var CaseModelReqCaseStatusCategoryEnum;
(function (CaseModelReqCaseStatusCategoryEnum) {
    CaseModelReqCaseStatusCategoryEnum["ACTIVE"] = "ACTIVE";
    CaseModelReqCaseStatusCategoryEnum["CANCELLED"] = "CANCELLED";
    CaseModelReqCaseStatusCategoryEnum["RESOLVED"] = "RESOLVED";
    CaseModelReqCaseStatusCategoryEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(CaseModelReqCaseStatusCategoryEnum || (CaseModelReqCaseStatusCategoryEnum = {}));
/**
* @export
* @enum {string}
*/
export var CaseModelReqRefundEligibilityEnum;
(function (CaseModelReqRefundEligibilityEnum) {
    CaseModelReqRefundEligibilityEnum["FULLREFUND"] = "FULL_REFUND";
    CaseModelReqRefundEligibilityEnum["NOREFUND"] = "NO_REFUND";
})(CaseModelReqRefundEligibilityEnum || (CaseModelReqRefundEligibilityEnum = {}));
