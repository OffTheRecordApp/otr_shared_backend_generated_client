/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSubscriptionPlanModelReq
 */
export interface UserSubscriptionPlanModelReq {
    /**
     * 
     * @type {Date}
     * @memberof UserSubscriptionPlanModelReq
     */
    expirationDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof UserSubscriptionPlanModelReq
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSubscriptionPlanModelReq
     */
    productName?: UserSubscriptionPlanModelReqProductNameEnum;
    /**
     * 
     * @type {Date}
     * @memberof UserSubscriptionPlanModelReq
     */
    startDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof UserSubscriptionPlanModelReq
     */
    subscriptionStatus?: UserSubscriptionPlanModelReqSubscriptionStatusEnum;
}

export function UserSubscriptionPlanModelReqFromJSON(json: any): UserSubscriptionPlanModelReq {
    return UserSubscriptionPlanModelReqFromJSONTyped(json, false);
}

export function UserSubscriptionPlanModelReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSubscriptionPlanModelReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'expirationDateUtc': !exists(json, 'expirationDateUtc') ? undefined : (new Date(json['expirationDateUtc'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'startDateUtc': !exists(json, 'startDateUtc') ? undefined : (new Date(json['startDateUtc'])),
        'subscriptionStatus': !exists(json, 'subscriptionStatus') ? undefined : json['subscriptionStatus'],
    };
}

export function UserSubscriptionPlanModelReqToJSON(value?: UserSubscriptionPlanModelReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'expirationDateUtc': value.expirationDateUtc === undefined ? undefined : (value.expirationDateUtc.toISOString()),
        'id': value.id,
        'productName': value.productName,
        'startDateUtc': value.startDateUtc === undefined ? undefined : (value.startDateUtc.toISOString()),
        'subscriptionStatus': value.subscriptionStatus,
    };
}

/**
* @export
* @enum {string}
*/
export enum UserSubscriptionPlanModelReqProductNameEnum {
    CONVOYPRO = 'CONVOY_PRO',
    OTRFASTLANE = 'OTR_FASTLANE',
    OTRFASTLANETEEN = 'OTR_FASTLANE_TEEN'
}
/**
* @export
* @enum {string}
*/
export enum UserSubscriptionPlanModelReqSubscriptionStatusEnum {
    ACTIVE = 'ACTIVE',
    CANCELED = 'CANCELED',
    INCOMPLETE = 'INCOMPLETE',
    INCOMPLETEEXPIRED = 'INCOMPLETE_EXPIRED',
    INTRIALPERIOD = 'IN_TRIAL_PERIOD',
    PASTDUE = 'PAST_DUE',
    UNKNOWN = 'UNKNOWN',
    UNPAID = 'UNPAID'
}


