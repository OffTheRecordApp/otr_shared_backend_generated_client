/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisteredUserDomain
 */
export interface RegisteredUserDomain {
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    campaign?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    channel?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    clientType?: RegisteredUserDomainClientTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof RegisteredUserDomain
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    genderType?: RegisteredUserDomainGenderTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    loginProvider?: RegisteredUserDomainLoginProviderEnum;
    /**
     * 
     * @type {number}
     * @memberof RegisteredUserDomain
     */
    numBookingCancelations?: number;
    /**
     * 
     * @type {number}
     * @memberof RegisteredUserDomain
     */
    paidCaseCount?: number;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    profilePicture?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    race?: RegisteredUserDomainRaceEnum;
    /**
     * 
     * @type {string}
     * @memberof RegisteredUserDomain
     */
    signUpCode?: string;
    /**
     * 
     * @type {number}
     * @memberof RegisteredUserDomain
     */
    userId?: number;
    /**
     * 
     * @type {Date}
     * @memberof RegisteredUserDomain
     */
    userRegistrationDateUtc?: Date;
}

export function RegisteredUserDomainFromJSON(json: any): RegisteredUserDomain {
    return RegisteredUserDomainFromJSONTyped(json, false);
}

export function RegisteredUserDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisteredUserDomain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'campaign': !exists(json, 'campaign') ? undefined : json['campaign'],
        'channel': !exists(json, 'channel') ? undefined : json['channel'],
        'clientType': !exists(json, 'clientType') ? undefined : json['clientType'],
        'dob': !exists(json, 'dob') ? undefined : (new Date(json['dob'])),
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'genderType': !exists(json, 'genderType') ? undefined : json['genderType'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'loginProvider': !exists(json, 'loginProvider') ? undefined : json['loginProvider'],
        'numBookingCancelations': !exists(json, 'numBookingCancelations') ? undefined : json['numBookingCancelations'],
        'paidCaseCount': !exists(json, 'paidCaseCount') ? undefined : json['paidCaseCount'],
        'profilePicture': !exists(json, 'profilePicture') ? undefined : json['profilePicture'],
        'race': !exists(json, 'race') ? undefined : json['race'],
        'signUpCode': !exists(json, 'signUpCode') ? undefined : json['signUpCode'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'userRegistrationDateUtc': !exists(json, 'userRegistrationDateUtc') ? undefined : (new Date(json['userRegistrationDateUtc'])),
    };
}

export function RegisteredUserDomainToJSON(value?: RegisteredUserDomain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'campaign': value.campaign,
        'channel': value.channel,
        'clientType': value.clientType,
        'dob': value.dob === undefined ? undefined : (value.dob.toISOString()),
        'firstname': value.firstname,
        'fullName': value.fullName,
        'genderType': value.genderType,
        'lastname': value.lastname,
        'loginProvider': value.loginProvider,
        'numBookingCancelations': value.numBookingCancelations,
        'paidCaseCount': value.paidCaseCount,
        'profilePicture': value.profilePicture,
        'race': value.race,
        'signUpCode': value.signUpCode,
        'userId': value.userId,
        'userRegistrationDateUtc': value.userRegistrationDateUtc === undefined ? undefined : (value.userRegistrationDateUtc.toISOString()),
    };
}

/**
* @export
* @enum {string}
*/
export enum RegisteredUserDomainClientTypeEnum {
    ANDROID = 'ANDROID',
    DESKTOPWEBAPP = 'DESKTOP_WEBAPP',
    DMVGO = 'DMV_GO',
    DMVORG = 'DMV_ORG',
    EMAIL = 'EMAIL',
    FRESHDESK = 'FRESH_DESK',
    IOS = 'IOS',
    LOCALHOST = 'LOCALHOST',
    MOBILEWEBAPP = 'MOBILE_WEBAPP',
    OTRADMINCONSOLE = 'OTR_ADMIN_CONSOLE',
    OTRADMINCONSOLEDEVO = 'OTR_ADMIN_CONSOLE_DEVO',
    OTRADMINCONSOLELOCALHOST = 'OTR_ADMIN_CONSOLE_LOCALHOST',
    OTREXPLORER = 'OTR_EXPLORER',
    OTRJOBSCHEDULER = 'OTR_JOB_SCHEDULER',
    OTRLAWFIRMPORTAL = 'OTR_LAWFIRM_PORTAL',
    OTRLAWFIRMPORTALDEVO = 'OTR_LAWFIRM_PORTAL_DEVO',
    OTRLAWFIRMPORTALLOCALHOST = 'OTR_LAWFIRM_PORTAL_LOCALHOST',
    OTRWEBSITE = 'OTR_WEBSITE',
    OTRWEBSITEDEVO = 'OTR_WEBSITE_DEVO',
    OTRWEBSITELOCALHOST = 'OTR_WEBSITE_LOCALHOST',
    OTRWIDGET = 'OTR_WIDGET',
    UNKNOWN = 'UNKNOWN'
}
/**
* @export
* @enum {string}
*/
export enum RegisteredUserDomainGenderTypeEnum {
    FEMALE = 'FEMALE',
    MALE = 'MALE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    NOTLISTED = 'NOT_LISTED',
    UNVERIFIED = 'UNVERIFIED',
    X = 'X'
}
/**
* @export
* @enum {string}
*/
export enum RegisteredUserDomainLoginProviderEnum {
    APPLE = 'APPLE',
    EMAIL = 'EMAIL',
    FACEBOOK = 'FACEBOOK',
    GOOGLE = 'GOOGLE',
    PHONE = 'PHONE',
    TWITTER = 'TWITTER',
    UNKNOWN = 'UNKNOWN'
}
/**
* @export
* @enum {string}
*/
export enum RegisteredUserDomainRaceEnum {
    ASIAN = 'ASIAN',
    BLACK = 'BLACK',
    HISPANIC = 'HISPANIC',
    MIDDLEEASTERN = 'MIDDLE_EASTERN',
    NATIVE = 'NATIVE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    PACIFICISLANDER = 'PACIFIC_ISLANDER',
    TWOORMORE = 'TWO_OR_MORE',
    UNKNOWN = 'UNKNOWN',
    UNVERIFIED = 'UNVERIFIED',
    WHITE = 'WHITE'
}


