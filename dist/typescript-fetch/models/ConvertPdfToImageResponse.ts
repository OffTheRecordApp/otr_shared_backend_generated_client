/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MediaItemModel,
    MediaItemModelFromJSON,
    MediaItemModelFromJSONTyped,
    MediaItemModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface ConvertPdfToImageResponse
 */
export interface ConvertPdfToImageResponse {
    /**
     * 
     * @type {number}
     * @memberof ConvertPdfToImageResponse
     */
    errorCode?: number;
    /**
     * 
     * @type {string}
     * @memberof ConvertPdfToImageResponse
     */
    errorMessage?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ConvertPdfToImageResponse
     */
    isSuccess?: boolean;
    /**
     * 
     * @type {Array<MediaItemModel>}
     * @memberof ConvertPdfToImageResponse
     */
    mediaItems?: Array<MediaItemModel>;
}

export function ConvertPdfToImageResponseFromJSON(json: any): ConvertPdfToImageResponse {
    return ConvertPdfToImageResponseFromJSONTyped(json, false);
}

export function ConvertPdfToImageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConvertPdfToImageResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'isSuccess': !exists(json, 'isSuccess') ? undefined : json['isSuccess'],
        'mediaItems': !exists(json, 'mediaItems') ? undefined : ((json['mediaItems'] as Array<any>).map(MediaItemModelFromJSON)),
    };
}

export function ConvertPdfToImageResponseToJSON(value?: ConvertPdfToImageResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errorCode': value.errorCode,
        'errorMessage': value.errorMessage,
        'isSuccess': value.isSuccess,
        'mediaItems': value.mediaItems === undefined ? undefined : ((value.mediaItems as Array<any>).map(MediaItemModelToJSON)),
    };
}


