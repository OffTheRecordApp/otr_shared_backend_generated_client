/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AddressDomainFromJSON, AddressDomainToJSON, CourtDomainFromJSON, CourtDomainToJSON, PureDateFromJSON, PureDateToJSON, TimestampFromJSON, TimestampToJSON, ViolationResponseFromJSON, ViolationResponseToJSON, } from './';
export function MatchCitationResponseFromJSON(json) {
    return MatchCitationResponseFromJSONTyped(json, false);
}
export function MatchCitationResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'address': !exists(json, 'address') ? undefined : AddressDomainFromJSON(json['address']),
        'citationId': !exists(json, 'citationId') ? undefined : json['citationId'],
        'citationIssueDate': !exists(json, 'citationIssueDate') ? undefined : PureDateFromJSON(json['citationIssueDate']),
        'citationIssueDateUTC': !exists(json, 'citationIssueDateUTC') ? undefined : TimestampFromJSON(json['citationIssueDateUTC']),
        'court': !exists(json, 'court') ? undefined : CourtDomainFromJSON(json['court']),
        'fineAmount': !exists(json, 'fineAmount') ? undefined : json['fineAmount'],
        'involvesAccident': !exists(json, 'involvesAccident') ? undefined : json['involvesAccident'],
        'isDeleted': !exists(json, 'isDeleted') ? undefined : json['isDeleted'],
        'ticketImageUrl': !exists(json, 'ticketImageUrl') ? undefined : json['ticketImageUrl'],
        'ticketNumber': !exists(json, 'ticketNumber') ? undefined : json['ticketNumber'],
        'violations': !exists(json, 'violations') ? undefined : (json['violations'].map(ViolationResponseFromJSON)),
    };
}
export function MatchCitationResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'address': AddressDomainToJSON(value.address),
        'citationId': value.citationId,
        'citationIssueDate': PureDateToJSON(value.citationIssueDate),
        'citationIssueDateUTC': TimestampToJSON(value.citationIssueDateUTC),
        'court': CourtDomainToJSON(value.court),
        'fineAmount': value.fineAmount,
        'involvesAccident': value.involvesAccident,
        'isDeleted': value.isDeleted,
        'ticketImageUrl': value.ticketImageUrl,
        'ticketNumber': value.ticketNumber,
        'violations': value.violations === undefined ? undefined : (value.violations.map(ViolationResponseToJSON)),
    };
}
