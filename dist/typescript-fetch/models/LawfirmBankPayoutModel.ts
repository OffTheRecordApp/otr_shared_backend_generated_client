/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BalanceTransactionModel,
    BalanceTransactionModelFromJSON,
    BalanceTransactionModelFromJSONTyped,
    BalanceTransactionModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface LawfirmBankPayoutModel
 */
export interface LawfirmBankPayoutModel {
    /**
     * 
     * @type {number}
     * @memberof LawfirmBankPayoutModel
     */
    amountInCents?: number;
    /**
     * 
     * @type {Date}
     * @memberof LawfirmBankPayoutModel
     */
    arrivalDateUtc?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof LawfirmBankPayoutModel
     */
    automatic?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    balanceTransactionId?: string;
    /**
     * 
     * @type {Array<BalanceTransactionModel>}
     * @memberof LawfirmBankPayoutModel
     */
    balanceTransactions?: Array<BalanceTransactionModel>;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    destinationId?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    failureAttributes?: string;
    /**
     * 
     * @type {number}
     * @memberof LawfirmBankPayoutModel
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof LawfirmBankPayoutModel
     */
    lawfirmId?: number;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    method?: LawfirmBankPayoutModelMethodEnum;
    /**
     * 
     * @type {Date}
     * @memberof LawfirmBankPayoutModel
     */
    payoutCreationDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    reconciliationStatus?: LawfirmBankPayoutModelReconciliationStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    sourceAccountId?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    statementDescriptor?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    status?: LawfirmBankPayoutModelStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    stripePayoutId?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    stripePlatformAccountId?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmBankPayoutModel
     */
    type?: LawfirmBankPayoutModelTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof LawfirmBankPayoutModel
     */
    withdrawal?: boolean;
}

export function LawfirmBankPayoutModelFromJSON(json: any): LawfirmBankPayoutModel {
    return LawfirmBankPayoutModelFromJSONTyped(json, false);
}

export function LawfirmBankPayoutModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LawfirmBankPayoutModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amountInCents': !exists(json, 'amountInCents') ? undefined : json['amountInCents'],
        'arrivalDateUtc': !exists(json, 'arrivalDateUtc') ? undefined : (new Date(json['arrivalDateUtc'])),
        'automatic': !exists(json, 'automatic') ? undefined : json['automatic'],
        'balanceTransactionId': !exists(json, 'balanceTransactionId') ? undefined : json['balanceTransactionId'],
        'balanceTransactions': !exists(json, 'balanceTransactions') ? undefined : ((json['balanceTransactions'] as Array<any>).map(BalanceTransactionModelFromJSON)),
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'destinationId': !exists(json, 'destinationId') ? undefined : json['destinationId'],
        'failureAttributes': !exists(json, 'failureAttributes') ? undefined : json['failureAttributes'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'payoutCreationDateUtc': !exists(json, 'payoutCreationDateUtc') ? undefined : (new Date(json['payoutCreationDateUtc'])),
        'reconciliationStatus': !exists(json, 'reconciliationStatus') ? undefined : json['reconciliationStatus'],
        'sourceAccountId': !exists(json, 'sourceAccountId') ? undefined : json['sourceAccountId'],
        'statementDescriptor': !exists(json, 'statementDescriptor') ? undefined : json['statementDescriptor'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'stripePayoutId': !exists(json, 'stripePayoutId') ? undefined : json['stripePayoutId'],
        'stripePlatformAccountId': !exists(json, 'stripePlatformAccountId') ? undefined : json['stripePlatformAccountId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'withdrawal': !exists(json, 'withdrawal') ? undefined : json['withdrawal'],
    };
}

export function LawfirmBankPayoutModelToJSON(value?: LawfirmBankPayoutModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amountInCents': value.amountInCents,
        'arrivalDateUtc': value.arrivalDateUtc === undefined ? undefined : (value.arrivalDateUtc.toISOString()),
        'automatic': value.automatic,
        'balanceTransactionId': value.balanceTransactionId,
        'balanceTransactions': value.balanceTransactions === undefined ? undefined : ((value.balanceTransactions as Array<any>).map(BalanceTransactionModelToJSON)),
        'currency': value.currency,
        'destinationId': value.destinationId,
        'failureAttributes': value.failureAttributes,
        'id': value.id,
        'lawfirmId': value.lawfirmId,
        'method': value.method,
        'payoutCreationDateUtc': value.payoutCreationDateUtc === undefined ? undefined : (value.payoutCreationDateUtc.toISOString()),
        'reconciliationStatus': value.reconciliationStatus,
        'sourceAccountId': value.sourceAccountId,
        'statementDescriptor': value.statementDescriptor,
        'status': value.status,
        'stripePayoutId': value.stripePayoutId,
        'stripePlatformAccountId': value.stripePlatformAccountId,
        'type': value.type,
        'withdrawal': value.withdrawal,
    };
}

/**
* @export
* @enum {string}
*/
export enum LawfirmBankPayoutModelMethodEnum {
    INSTANT = 'INSTANT',
    STANDARD = 'STANDARD'
}
/**
* @export
* @enum {string}
*/
export enum LawfirmBankPayoutModelReconciliationStatusEnum {
    COMPLETED = 'COMPLETED',
    INPROGRESS = 'IN_PROGRESS',
    NOTAPPLICABLE = 'NOT_APPLICABLE'
}
/**
* @export
* @enum {string}
*/
export enum LawfirmBankPayoutModelStatusEnum {
    CANCELED = 'CANCELED',
    FAILED = 'FAILED',
    INTRANSIT = 'IN_TRANSIT',
    PAID = 'PAID',
    PENDING = 'PENDING'
}
/**
* @export
* @enum {string}
*/
export enum LawfirmBankPayoutModelTypeEnum {
    BANKACCOUNT = 'BANK_ACCOUNT',
    CARD = 'CARD'
}


