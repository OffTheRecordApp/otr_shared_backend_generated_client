/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SocialPhoneNumber,
    SocialPhoneNumberFromJSON,
    SocialPhoneNumberFromJSONTyped,
    SocialPhoneNumberToJSON,
    UserRoleDomain,
    UserRoleDomainFromJSON,
    UserRoleDomainFromJSONTyped,
    UserRoleDomainToJSON,
} from './';

/**
 * 
 * @export
 * @interface SocialLoginUser
 */
export interface SocialLoginUser {
    /**
     * 
     * @type {string}
     * @memberof SocialLoginUser
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof SocialLoginUser
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof SocialLoginUser
     */
    intercomUserHash?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SocialLoginUser
     */
    isEmailPrivate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SocialLoginUser
     */
    isTestUser?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SocialLoginUser
     */
    lastname?: string;
    /**
     * 
     * @type {number}
     * @memberof SocialLoginUser
     */
    paidCaseCount?: number;
    /**
     * 
     * @type {Array<SocialPhoneNumber>}
     * @memberof SocialLoginUser
     */
    phoneNumbers?: Array<SocialPhoneNumber>;
    /**
     * 
     * @type {string}
     * @memberof SocialLoginUser
     */
    profilePictureUrl?: string;
    /**
     * 
     * @type {Array<UserRoleDomain>}
     * @memberof SocialLoginUser
     */
    roles?: Array<UserRoleDomain>;
    /**
     * 
     * @type {string}
     * @memberof SocialLoginUser
     */
    userAlias?: string;
    /**
     * 
     * @type {number}
     * @memberof SocialLoginUser
     */
    userId?: number;
}

export function SocialLoginUserFromJSON(json: any): SocialLoginUser {
    return SocialLoginUserFromJSONTyped(json, false);
}

export function SocialLoginUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialLoginUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'intercomUserHash': !exists(json, 'intercomUserHash') ? undefined : json['intercomUserHash'],
        'isEmailPrivate': !exists(json, 'isEmailPrivate') ? undefined : json['isEmailPrivate'],
        'isTestUser': !exists(json, 'isTestUser') ? undefined : json['isTestUser'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'paidCaseCount': !exists(json, 'paidCaseCount') ? undefined : json['paidCaseCount'],
        'phoneNumbers': !exists(json, 'phoneNumbers') ? undefined : ((json['phoneNumbers'] as Array<any>).map(SocialPhoneNumberFromJSON)),
        'profilePictureUrl': !exists(json, 'profilePictureUrl') ? undefined : json['profilePictureUrl'],
        'roles': !exists(json, 'roles') ? undefined : ((json['roles'] as Array<any>).map(UserRoleDomainFromJSON)),
        'userAlias': !exists(json, 'userAlias') ? undefined : json['userAlias'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function SocialLoginUserToJSON(value?: SocialLoginUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'intercomUserHash': value.intercomUserHash,
        'isEmailPrivate': value.isEmailPrivate,
        'isTestUser': value.isTestUser,
        'lastname': value.lastname,
        'paidCaseCount': value.paidCaseCount,
        'phoneNumbers': value.phoneNumbers === undefined ? undefined : ((value.phoneNumbers as Array<any>).map(SocialPhoneNumberToJSON)),
        'profilePictureUrl': value.profilePictureUrl,
        'roles': value.roles === undefined ? undefined : ((value.roles as Array<any>).map(UserRoleDomainToJSON)),
        'userAlias': value.userAlias,
        'userId': value.userId,
    };
}


