/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PureDate,
    PureDateFromJSON,
    PureDateFromJSONTyped,
    PureDateToJSON,
} from './';

/**
 * 
 * @export
 * @interface LawfirmInboxMessageDomain
 */
export interface LawfirmInboxMessageDomain {
    /**
     * 
     * @type {boolean}
     * @memberof LawfirmInboxMessageDomain
     */
    attachment?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    authorFirstName?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    authorLastName?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    authorRoleType?: LawfirmInboxMessageDomainAuthorRoleTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof LawfirmInboxMessageDomain
     */
    authorUserId?: number;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseActionNote?: string;
    /**
     * 
     * @type {boolean}
     * @memberof LawfirmInboxMessageDomain
     */
    caseArchived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseId?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseStatus?: LawfirmInboxMessageDomainCaseStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    caseStatusCategory?: LawfirmInboxMessageDomainCaseStatusCategoryEnum;
    /**
     * 
     * @type {PureDate}
     * @memberof LawfirmInboxMessageDomain
     */
    citationIssueDate?: PureDate;
    /**
     * 
     * @type {Date}
     * @memberof LawfirmInboxMessageDomain
     */
    citationIssueDateUtc?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LawfirmInboxMessageDomain
     */
    courtDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    courtName?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    customerFirstName?: string;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    customerLastName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof LawfirmInboxMessageDomain
     */
    hasFlagMessage?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LawfirmInboxMessageDomain
     */
    hasStarMessage?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    lawfirmCaseDecisionStatus?: LawfirmInboxMessageDomainLawfirmCaseDecisionStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof LawfirmInboxMessageDomain
     */
    lawfirmReceiptDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    messageBody?: string;
    /**
     * 
     * @type {number}
     * @memberof LawfirmInboxMessageDomain
     */
    messageId?: number;
    /**
     * 
     * @type {Date}
     * @memberof LawfirmInboxMessageDomain
     */
    messageSentDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof LawfirmInboxMessageDomain
     */
    profilePictureUrl?: string;
}

export function LawfirmInboxMessageDomainFromJSON(json: any): LawfirmInboxMessageDomain {
    return LawfirmInboxMessageDomainFromJSONTyped(json, false);
}

export function LawfirmInboxMessageDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): LawfirmInboxMessageDomain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attachment': !exists(json, 'attachment') ? undefined : json['attachment'],
        'authorFirstName': !exists(json, 'authorFirstName') ? undefined : json['authorFirstName'],
        'authorLastName': !exists(json, 'authorLastName') ? undefined : json['authorLastName'],
        'authorRoleType': !exists(json, 'authorRoleType') ? undefined : json['authorRoleType'],
        'authorUserId': !exists(json, 'authorUserId') ? undefined : json['authorUserId'],
        'caseActionNote': !exists(json, 'caseActionNote') ? undefined : json['caseActionNote'],
        'caseArchived': !exists(json, 'caseArchived') ? undefined : json['caseArchived'],
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseStatus': !exists(json, 'caseStatus') ? undefined : json['caseStatus'],
        'caseStatusCategory': !exists(json, 'caseStatusCategory') ? undefined : json['caseStatusCategory'],
        'citationIssueDate': !exists(json, 'citationIssueDate') ? undefined : PureDateFromJSON(json['citationIssueDate']),
        'citationIssueDateUtc': !exists(json, 'citationIssueDateUtc') ? undefined : (new Date(json['citationIssueDateUtc'])),
        'courtDateUtc': !exists(json, 'courtDateUtc') ? undefined : (new Date(json['courtDateUtc'])),
        'courtName': !exists(json, 'courtName') ? undefined : json['courtName'],
        'customerFirstName': !exists(json, 'customerFirstName') ? undefined : json['customerFirstName'],
        'customerLastName': !exists(json, 'customerLastName') ? undefined : json['customerLastName'],
        'hasFlagMessage': !exists(json, 'hasFlagMessage') ? undefined : json['hasFlagMessage'],
        'hasStarMessage': !exists(json, 'hasStarMessage') ? undefined : json['hasStarMessage'],
        'lawfirmCaseDecisionStatus': !exists(json, 'lawfirmCaseDecisionStatus') ? undefined : json['lawfirmCaseDecisionStatus'],
        'lawfirmReceiptDateUtc': !exists(json, 'lawfirmReceiptDateUtc') ? undefined : (new Date(json['lawfirmReceiptDateUtc'])),
        'messageBody': !exists(json, 'messageBody') ? undefined : json['messageBody'],
        'messageId': !exists(json, 'messageId') ? undefined : json['messageId'],
        'messageSentDateUtc': !exists(json, 'messageSentDateUtc') ? undefined : (new Date(json['messageSentDateUtc'])),
        'profilePictureUrl': !exists(json, 'profilePictureUrl') ? undefined : json['profilePictureUrl'],
    };
}

export function LawfirmInboxMessageDomainToJSON(value?: LawfirmInboxMessageDomain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attachment': value.attachment,
        'authorFirstName': value.authorFirstName,
        'authorLastName': value.authorLastName,
        'authorRoleType': value.authorRoleType,
        'authorUserId': value.authorUserId,
        'caseActionNote': value.caseActionNote,
        'caseArchived': value.caseArchived,
        'caseId': value.caseId,
        'caseStatus': value.caseStatus,
        'caseStatusCategory': value.caseStatusCategory,
        'citationIssueDate': PureDateToJSON(value.citationIssueDate),
        'citationIssueDateUtc': value.citationIssueDateUtc === undefined ? undefined : (value.citationIssueDateUtc.toISOString()),
        'courtDateUtc': value.courtDateUtc === undefined ? undefined : (value.courtDateUtc.toISOString()),
        'courtName': value.courtName,
        'customerFirstName': value.customerFirstName,
        'customerLastName': value.customerLastName,
        'hasFlagMessage': value.hasFlagMessage,
        'hasStarMessage': value.hasStarMessage,
        'lawfirmCaseDecisionStatus': value.lawfirmCaseDecisionStatus,
        'lawfirmReceiptDateUtc': value.lawfirmReceiptDateUtc === undefined ? undefined : (value.lawfirmReceiptDateUtc.toISOString()),
        'messageBody': value.messageBody,
        'messageId': value.messageId,
        'messageSentDateUtc': value.messageSentDateUtc === undefined ? undefined : (value.messageSentDateUtc.toISOString()),
        'profilePictureUrl': value.profilePictureUrl,
    };
}

/**
* @export
* @enum {string}
*/
export enum LawfirmInboxMessageDomainAuthorRoleTypeEnum {
    ADMIN = 'ADMIN',
    DEFENDANT = 'DEFENDANT',
    LAWFIRMADMIN = 'LAWFIRM_ADMIN',
    LAWYER = 'LAWYER',
    PARTNER = 'PARTNER',
    UNKNOWN = 'UNKNOWN'
}
/**
* @export
* @enum {string}
*/
export enum LawfirmInboxMessageDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = 'AMENDED_DOWN_WITHIN_CLASS',
    AMENDEDFULLFINE = 'AMENDED_FULL_FINE',
    AMENDEDINCREASEDFINE = 'AMENDED_INCREASED_FINE',
    AMENDEDNOFINE = 'AMENDED_NO_FINE',
    AMENDEDREDUCEDFINE = 'AMENDED_REDUCED_FINE',
    AMENDEDTOINFRACTION = 'AMENDED_TO_INFRACTION',
    AMENDEDTONMV = 'AMENDED_TO_NMV',
    CANCELLEDATTORNEYATFAULT = 'CANCELLED_ATTORNEY_AT_FAULT',
    CANCELLEDBYLAWFIRM = 'CANCELLED_BY_LAWFIRM',
    CANCELLEDBYUSER = 'CANCELLED_BY_USER',
    CANCELLEDDUPLICATE = 'CANCELLED_DUPLICATE',
    CANCELLEDNMV = 'CANCELLED_NMV',
    CANCELLEDNONPAYMENT = 'CANCELLED_NON_PAYMENT',
    CANCELLEDNOLAWFIRM = 'CANCELLED_NO_LAWFIRM',
    CANCELLEDOVERDUE = 'CANCELLED_OVERDUE',
    CANCELLEDTOOSHORTNOTICE = 'CANCELLED_TOO_SHORT_NOTICE',
    CASEINPROGRESS = 'CASE_IN_PROGRESS',
    CLIENTCONFIRMED = 'CLIENT_CONFIRMED',
    CLIENTCONFIRMEDUNPAID = 'CLIENT_CONFIRMED_UNPAID',
    CLIENTFIREDLAWFIRM = 'CLIENT_FIRED_LAWFIRM',
    CLIENTFORCEDLOSS = 'CLIENT_FORCED_LOSS',
    CLIENTPAIDFINE = 'CLIENT_PAID_FINE',
    CLIENTUNRESPONSIVE = 'CLIENT_UNRESPONSIVE',
    DEFERRED = 'DEFERRED',
    DISMISSED = 'DISMISSED',
    DIVERSION = 'DIVERSION',
    FEESDISPUTED = 'FEES_DISPUTED',
    FINEREDUCTIONONLY = 'FINE_REDUCTION_ONLY',
    LAWFIRMWITHDRAWN = 'LAWFIRM_WITHDRAWN',
    LOST = 'LOST',
    NOLAWFIRMAVAILABLE = 'NO_LAWFIRM_AVAILABLE',
    POINTREDUCTION = 'POINT_REDUCTION',
    REFUSEDBYLAWFIRM = 'REFUSED_BY_LAWFIRM',
    RESOLVEDNONPAYMENT = 'RESOLVED_NON_PAYMENT',
    STALE = 'STALE',
    TRAFFICSCHOOL = 'TRAFFIC_SCHOOL',
    UNCONFIRMED = 'UNCONFIRMED'
}
/**
* @export
* @enum {string}
*/
export enum LawfirmInboxMessageDomainCaseStatusCategoryEnum {
    ACTIVE = 'ACTIVE',
    CANCELLED = 'CANCELLED',
    RESOLVED = 'RESOLVED',
    UNCONFIRMED = 'UNCONFIRMED'
}
/**
* @export
* @enum {string}
*/
export enum LawfirmInboxMessageDomainLawfirmCaseDecisionStatusEnum {
    ACCEPTED = 'ACCEPTED',
    CREATED = 'CREATED',
    DECLINED = 'DECLINED',
    EXPIRED = 'EXPIRED',
    PENDING = 'PENDING',
    REMATCHED = 'REMATCHED',
    REMATCHEDREFERRAL = 'REMATCHED_REFERRAL'
}


