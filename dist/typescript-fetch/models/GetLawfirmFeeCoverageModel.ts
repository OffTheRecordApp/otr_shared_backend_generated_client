/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GetLawfirmFeeModel,
    GetLawfirmFeeModelFromJSON,
    GetLawfirmFeeModelFromJSONTyped,
    GetLawfirmFeeModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetLawfirmFeeCoverageModel
 */
export interface GetLawfirmFeeCoverageModel {
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    county?: string;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeCoverageModel
     */
    courtId?: number;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    courtName?: string;
    /**
     * 
     * @type {Array<GetLawfirmFeeModel>}
     * @memberof GetLawfirmFeeCoverageModel
     */
    fees?: Array<GetLawfirmFeeModel>;
    /**
     * 
     * @type {boolean}
     * @memberof GetLawfirmFeeCoverageModel
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmFeeCoverageModel
     */
    legalServiceId?: number;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    legalServiceType?: GetLawfirmFeeCoverageModelLegalServiceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GetLawfirmFeeCoverageModel
     */
    regionCode?: string;
}

export function GetLawfirmFeeCoverageModelFromJSON(json: any): GetLawfirmFeeCoverageModel {
    return GetLawfirmFeeCoverageModelFromJSONTyped(json, false);
}

export function GetLawfirmFeeCoverageModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetLawfirmFeeCoverageModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'city': !exists(json, 'city') ? undefined : json['city'],
        'county': !exists(json, 'county') ? undefined : json['county'],
        'courtId': !exists(json, 'courtId') ? undefined : json['courtId'],
        'courtName': !exists(json, 'courtName') ? undefined : json['courtName'],
        'fees': !exists(json, 'fees') ? undefined : ((json['fees'] as Array<any>).map(GetLawfirmFeeModelFromJSON)),
        'isDeleted': !exists(json, 'isDeleted') ? undefined : json['isDeleted'],
        'legalServiceId': !exists(json, 'legalServiceId') ? undefined : json['legalServiceId'],
        'legalServiceType': !exists(json, 'legalServiceType') ? undefined : json['legalServiceType'],
        'regionCode': !exists(json, 'regionCode') ? undefined : json['regionCode'],
    };
}

export function GetLawfirmFeeCoverageModelToJSON(value?: GetLawfirmFeeCoverageModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'city': value.city,
        'county': value.county,
        'courtId': value.courtId,
        'courtName': value.courtName,
        'fees': value.fees === undefined ? undefined : ((value.fees as Array<any>).map(GetLawfirmFeeModelToJSON)),
        'isDeleted': value.isDeleted,
        'legalServiceId': value.legalServiceId,
        'legalServiceType': value.legalServiceType,
        'regionCode': value.regionCode,
    };
}

/**
* @export
* @enum {string}
*/
export enum GetLawfirmFeeCoverageModelLegalServiceTypeEnum {
    DEFER = 'DEFER',
    FIGHT = 'FIGHT'
}


