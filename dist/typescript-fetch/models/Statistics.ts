/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Statistics
 */
export interface Statistics {
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    countAssignments?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    countConversationParts?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    countReopens?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    firstAdminReplyAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    firstAssignmentAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    firstCloseAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    firstContactReplyAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    lastAdminReplyAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    lastAssignmentAdminReplyAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    lastAssignmentAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    lastCloseAt?: number;
    /**
     * 
     * @type {string}
     * @memberof Statistics
     */
    lastClosedById?: string;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    lastContactReplyAt?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    medianTimeToReply?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    timeToAdminReply?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    timeToAssignment?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    timeToFirstClose?: number;
    /**
     * 
     * @type {number}
     * @memberof Statistics
     */
    timeToLastClose?: number;
    /**
     * 
     * @type {string}
     * @memberof Statistics
     */
    type?: string;
}

export function StatisticsFromJSON(json: any): Statistics {
    return StatisticsFromJSONTyped(json, false);
}

export function StatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Statistics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countAssignments': !exists(json, 'count_assignments') ? undefined : json['count_assignments'],
        'countConversationParts': !exists(json, 'count_conversation_parts') ? undefined : json['count_conversation_parts'],
        'countReopens': !exists(json, 'count_reopens') ? undefined : json['count_reopens'],
        'firstAdminReplyAt': !exists(json, 'first_admin_reply_at') ? undefined : json['first_admin_reply_at'],
        'firstAssignmentAt': !exists(json, 'first_assignment_at') ? undefined : json['first_assignment_at'],
        'firstCloseAt': !exists(json, 'first_close_at') ? undefined : json['first_close_at'],
        'firstContactReplyAt': !exists(json, 'first_contact_reply_at') ? undefined : json['first_contact_reply_at'],
        'lastAdminReplyAt': !exists(json, 'last_admin_reply_at') ? undefined : json['last_admin_reply_at'],
        'lastAssignmentAdminReplyAt': !exists(json, 'last_assignment_admin_reply_at') ? undefined : json['last_assignment_admin_reply_at'],
        'lastAssignmentAt': !exists(json, 'last_assignment_at') ? undefined : json['last_assignment_at'],
        'lastCloseAt': !exists(json, 'last_close_at') ? undefined : json['last_close_at'],
        'lastClosedById': !exists(json, 'last_closed_by_id') ? undefined : json['last_closed_by_id'],
        'lastContactReplyAt': !exists(json, 'last_contact_reply_at') ? undefined : json['last_contact_reply_at'],
        'medianTimeToReply': !exists(json, 'median_time_to_reply') ? undefined : json['median_time_to_reply'],
        'timeToAdminReply': !exists(json, 'time_to_admin_reply') ? undefined : json['time_to_admin_reply'],
        'timeToAssignment': !exists(json, 'time_to_assignment') ? undefined : json['time_to_assignment'],
        'timeToFirstClose': !exists(json, 'time_to_first_close') ? undefined : json['time_to_first_close'],
        'timeToLastClose': !exists(json, 'time_to_last_close') ? undefined : json['time_to_last_close'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function StatisticsToJSON(value?: Statistics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count_assignments': value.countAssignments,
        'count_conversation_parts': value.countConversationParts,
        'count_reopens': value.countReopens,
        'first_admin_reply_at': value.firstAdminReplyAt,
        'first_assignment_at': value.firstAssignmentAt,
        'first_close_at': value.firstCloseAt,
        'first_contact_reply_at': value.firstContactReplyAt,
        'last_admin_reply_at': value.lastAdminReplyAt,
        'last_assignment_admin_reply_at': value.lastAssignmentAdminReplyAt,
        'last_assignment_at': value.lastAssignmentAt,
        'last_close_at': value.lastCloseAt,
        'last_closed_by_id': value.lastClosedById,
        'last_contact_reply_at': value.lastContactReplyAt,
        'median_time_to_reply': value.medianTimeToReply,
        'time_to_admin_reply': value.timeToAdminReply,
        'time_to_assignment': value.timeToAssignment,
        'time_to_first_close': value.timeToFirstClose,
        'time_to_last_close': value.timeToLastClose,
        'type': value.type,
    };
}


