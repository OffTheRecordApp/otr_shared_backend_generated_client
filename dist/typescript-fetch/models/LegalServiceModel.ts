/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WorkflowLineItemModel,
    WorkflowLineItemModelFromJSON,
    WorkflowLineItemModelFromJSONTyped,
    WorkflowLineItemModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface LegalServiceModel
 */
export interface LegalServiceModel {
    /**
     * 
     * @type {number}
     * @memberof LegalServiceModel
     */
    chanceOfSuccess?: number;
    /**
     * 
     * @type {boolean}
     * @memberof LegalServiceModel
     */
    isSelected?: boolean;
    /**
     * 
     * @type {number}
     * @memberof LegalServiceModel
     */
    lawfirmCaseId?: number;
    /**
     * 
     * @type {number}
     * @memberof LegalServiceModel
     */
    lawfirmId?: number;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    lawfirmName?: string;
    /**
     * 
     * @type {number}
     * @memberof LegalServiceModel
     */
    legalServiceId?: number;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    legalServiceName?: string;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    legalServiceType?: LegalServiceModelLegalServiceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    legalVertical?: LegalServiceModelLegalVerticalEnum;
    /**
     * 
     * @type {Array<WorkflowLineItemModel>}
     * @memberof LegalServiceModel
     */
    lineItems?: Array<WorkflowLineItemModel>;
    /**
     * 
     * @type {Date}
     * @memberof LegalServiceModel
     */
    matchExpirationDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    obfuscatedPictureUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    profilePictureUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    refundEligibility?: LegalServiceModelRefundEligibilityEnum;
    /**
     * 
     * @type {string}
     * @memberof LegalServiceModel
     */
    refundMessage?: string;
    /**
     * 
     * @type {number}
     * @memberof LegalServiceModel
     */
    refundPercentage?: number;
    /**
     * 
     * @type {number}
     * @memberof LegalServiceModel
     */
    totalClientCostInCents?: number;
}

export function LegalServiceModelFromJSON(json: any): LegalServiceModel {
    return LegalServiceModelFromJSONTyped(json, false);
}

export function LegalServiceModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LegalServiceModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chanceOfSuccess': !exists(json, 'chanceOfSuccess') ? undefined : json['chanceOfSuccess'],
        'isSelected': !exists(json, 'isSelected') ? undefined : json['isSelected'],
        'lawfirmCaseId': !exists(json, 'lawfirmCaseId') ? undefined : json['lawfirmCaseId'],
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'lawfirmName': !exists(json, 'lawfirmName') ? undefined : json['lawfirmName'],
        'legalServiceId': !exists(json, 'legalServiceId') ? undefined : json['legalServiceId'],
        'legalServiceName': !exists(json, 'legalServiceName') ? undefined : json['legalServiceName'],
        'legalServiceType': !exists(json, 'legalServiceType') ? undefined : json['legalServiceType'],
        'legalVertical': !exists(json, 'legalVertical') ? undefined : json['legalVertical'],
        'lineItems': !exists(json, 'lineItems') ? undefined : ((json['lineItems'] as Array<any>).map(WorkflowLineItemModelFromJSON)),
        'matchExpirationDateUtc': !exists(json, 'matchExpirationDateUtc') ? undefined : (new Date(json['matchExpirationDateUtc'])),
        'obfuscatedPictureUrl': !exists(json, 'obfuscatedPictureUrl') ? undefined : json['obfuscatedPictureUrl'],
        'profilePictureUrl': !exists(json, 'profilePictureUrl') ? undefined : json['profilePictureUrl'],
        'refundEligibility': !exists(json, 'refundEligibility') ? undefined : json['refundEligibility'],
        'refundMessage': !exists(json, 'refundMessage') ? undefined : json['refundMessage'],
        'refundPercentage': !exists(json, 'refundPercentage') ? undefined : json['refundPercentage'],
        'totalClientCostInCents': !exists(json, 'totalClientCostInCents') ? undefined : json['totalClientCostInCents'],
    };
}

export function LegalServiceModelToJSON(value?: LegalServiceModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chanceOfSuccess': value.chanceOfSuccess,
        'isSelected': value.isSelected,
        'lawfirmCaseId': value.lawfirmCaseId,
        'lawfirmId': value.lawfirmId,
        'lawfirmName': value.lawfirmName,
        'legalServiceId': value.legalServiceId,
        'legalServiceName': value.legalServiceName,
        'legalServiceType': value.legalServiceType,
        'legalVertical': value.legalVertical,
        'lineItems': value.lineItems === undefined ? undefined : ((value.lineItems as Array<any>).map(WorkflowLineItemModelToJSON)),
        'matchExpirationDateUtc': value.matchExpirationDateUtc === undefined ? undefined : (value.matchExpirationDateUtc.toISOString()),
        'obfuscatedPictureUrl': value.obfuscatedPictureUrl,
        'profilePictureUrl': value.profilePictureUrl,
        'refundEligibility': value.refundEligibility,
        'refundMessage': value.refundMessage,
        'refundPercentage': value.refundPercentage,
        'totalClientCostInCents': value.totalClientCostInCents,
    };
}

/**
* @export
* @enum {string}
*/
export enum LegalServiceModelLegalServiceTypeEnum {
    DEFER = 'DEFER',
    FIGHT = 'FIGHT'
}
/**
* @export
* @enum {string}
*/
export enum LegalServiceModelLegalVerticalEnum {
    TRAFFIC = 'TRAFFIC'
}
/**
* @export
* @enum {string}
*/
export enum LegalServiceModelRefundEligibilityEnum {
    FULLREFUND = 'FULL_REFUND',
    NOREFUND = 'NO_REFUND'
}


