/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationEvent
 */
export interface NotificationEvent {
    /**
     * 
     * @type {Date}
     * @memberof NotificationEvent
     */
    eventDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof NotificationEvent
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationEvent
     */
    message?: string;
    /**
     * 
     * @type {number}
     * @memberof NotificationEvent
     */
    notificationId?: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationEvent
     */
    referenceId?: string;
    /**
     * 
     * @type {number}
     * @memberof NotificationEvent
     */
    unreadCount?: number;
}

export function NotificationEventFromJSON(json: any): NotificationEvent {
    return NotificationEventFromJSONTyped(json, false);
}

export function NotificationEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventDate': !exists(json, 'eventDate') ? undefined : (new Date(json['eventDate'])),
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'notificationId': !exists(json, 'notificationId') ? undefined : json['notificationId'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'unreadCount': !exists(json, 'unreadCount') ? undefined : json['unreadCount'],
    };
}

export function NotificationEventToJSON(value?: NotificationEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventDate': value.eventDate === undefined ? undefined : (value.eventDate.toISOString()),
        'fullName': value.fullName,
        'message': value.message,
        'notificationId': value.notificationId,
        'referenceId': value.referenceId,
        'unreadCount': value.unreadCount,
    };
}


