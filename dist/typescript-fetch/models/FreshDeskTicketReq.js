/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { FreshDeskConversationFromJSON, FreshDeskConversationToJSON, FreshDeskRequesterFromJSON, FreshDeskRequesterToJSON, FreshdeskAttachmentReqFromJSON, FreshdeskAttachmentReqToJSON, } from './';
export function FreshDeskTicketReqFromJSON(json) {
    return FreshDeskTicketReqFromJSONTyped(json, false);
}
export function FreshDeskTicketReqFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'attachments': !exists(json, 'attachments') ? undefined : (json['attachments'].map(FreshdeskAttachmentReqFromJSON)),
        'ccEmails': !exists(json, 'cc_emails') ? undefined : json['cc_emails'],
        'conversation': !exists(json, 'conversation') ? undefined : (json['conversation'].map(FreshDeskConversationFromJSON)),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'customFields': !exists(json, 'custom_fields') ? undefined : json['custom_fields'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'descriptionText': !exists(json, 'description_text') ? undefined : json['description_text'],
        'dueBy': !exists(json, 'due_by') ? undefined : (new Date(json['due_by'])),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'frDueBy': !exists(json, 'fr_due_by') ? undefined : (new Date(json['fr_due_by'])),
        'frEscalated': !exists(json, 'fr_escalated') ? undefined : json['fr_escalated'],
        'fwdEmails': !exists(json, 'fwd_emails') ? undefined : json['fwd_emails'],
        'groupId': !exists(json, 'group_id') ? undefined : json['group_id'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'incoming': !exists(json, 'incoming') ? undefined : json['incoming'],
        'isEscalated': !exists(json, 'is_escalated') ? undefined : json['is_escalated'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'priorityType': !exists(json, 'priorityType') ? undefined : json['priorityType'],
        'productId': !exists(json, 'product_id') ? undefined : json['product_id'],
        'replyCcEmails': !exists(json, 'reply_cc_emails') ? undefined : json['reply_cc_emails'],
        'requester': !exists(json, 'requester') ? undefined : FreshDeskRequesterFromJSON(json['requester']),
        'requesterAgentName': !exists(json, 'requesterAgentName') ? undefined : json['requesterAgentName'],
        'requesterId': !exists(json, 'requester_id') ? undefined : json['requester_id'],
        'responderAgentName': !exists(json, 'responderAgentName') ? undefined : json['responderAgentName'],
        'responderId': !exists(json, 'responder_id') ? undefined : json['responder_id'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'spam': !exists(json, 'spam') ? undefined : json['spam'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusType': !exists(json, 'statusType') ? undefined : json['statusType'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'toEmails': !exists(json, 'to_emails') ? undefined : json['to_emails'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'uniqueExternalId': !exists(json, 'unique_external_id') ? undefined : json['unique_external_id'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}
export function FreshDeskTicketReqToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'attachments': value.attachments === undefined ? undefined : (value.attachments.map(FreshdeskAttachmentReqToJSON)),
        'cc_emails': value.ccEmails,
        'conversation': value.conversation === undefined ? undefined : (value.conversation.map(FreshDeskConversationToJSON)),
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'custom_fields': value.customFields,
        'deleted': value.deleted,
        'description': value.description,
        'description_text': value.descriptionText,
        'due_by': value.dueBy === undefined ? undefined : (value.dueBy.toISOString()),
        'email': value.email,
        'fr_due_by': value.frDueBy === undefined ? undefined : (value.frDueBy.toISOString()),
        'fr_escalated': value.frEscalated,
        'fwd_emails': value.fwdEmails,
        'group_id': value.groupId,
        'id': value.id,
        'incoming': value.incoming,
        'is_escalated': value.isEscalated,
        'name': value.name,
        'phone': value.phone,
        'priority': value.priority,
        'priorityType': value.priorityType,
        'product_id': value.productId,
        'reply_cc_emails': value.replyCcEmails,
        'requester': FreshDeskRequesterToJSON(value.requester),
        'requesterAgentName': value.requesterAgentName,
        'requester_id': value.requesterId,
        'responderAgentName': value.responderAgentName,
        'responder_id': value.responderId,
        'source': value.source,
        'spam': value.spam,
        'status': value.status,
        'statusType': value.statusType,
        'subject': value.subject,
        'tags': value.tags,
        'to_emails': value.toEmails,
        'type': value.type,
        'unique_external_id': value.uniqueExternalId,
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}
/**
* @export
* @enum {string}
*/
export var FreshDeskTicketReqPriorityTypeEnum;
(function (FreshDeskTicketReqPriorityTypeEnum) {
    FreshDeskTicketReqPriorityTypeEnum["HIGH"] = "HIGH";
    FreshDeskTicketReqPriorityTypeEnum["LOW"] = "LOW";
    FreshDeskTicketReqPriorityTypeEnum["MEDIUM"] = "MEDIUM";
    FreshDeskTicketReqPriorityTypeEnum["UNKNOWN"] = "UNKNOWN";
    FreshDeskTicketReqPriorityTypeEnum["URGENT"] = "URGENT";
})(FreshDeskTicketReqPriorityTypeEnum || (FreshDeskTicketReqPriorityTypeEnum = {}));
/**
* @export
* @enum {string}
*/
export var FreshDeskTicketReqStatusTypeEnum;
(function (FreshDeskTicketReqStatusTypeEnum) {
    FreshDeskTicketReqStatusTypeEnum["CLOSED"] = "CLOSED";
    FreshDeskTicketReqStatusTypeEnum["OPEN"] = "OPEN";
    FreshDeskTicketReqStatusTypeEnum["PENDING"] = "PENDING";
    FreshDeskTicketReqStatusTypeEnum["PENDINGONEWEEK"] = "PENDING_ONE_WEEK";
    FreshDeskTicketReqStatusTypeEnum["PENDINGTWODAYS"] = "PENDING_TWO_DAYS";
    FreshDeskTicketReqStatusTypeEnum["QUEUEDFORAUTOMATION"] = "QUEUED_FOR_AUTOMATION";
    FreshDeskTicketReqStatusTypeEnum["RESOLVED"] = "RESOLVED";
    FreshDeskTicketReqStatusTypeEnum["UNKNOWN"] = "UNKNOWN";
    FreshDeskTicketReqStatusTypeEnum["WAITINGONATTORNEY"] = "WAITING_ON_ATTORNEY";
    FreshDeskTicketReqStatusTypeEnum["WAITINGONCUSTOMER"] = "WAITING_ON_CUSTOMER";
    FreshDeskTicketReqStatusTypeEnum["WAITINGONOTR"] = "WAITING_ON_OTR";
    FreshDeskTicketReqStatusTypeEnum["WAITINGONTHIRDPARTY"] = "WAITING_ON_THIRD_PARTY";
})(FreshDeskTicketReqStatusTypeEnum || (FreshDeskTicketReqStatusTypeEnum = {}));
