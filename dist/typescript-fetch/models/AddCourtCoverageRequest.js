/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function AddCourtCoverageRequestFromJSON(json) {
    return AddCourtCoverageRequestFromJSONTyped(json, false);
}
export function AddCourtCoverageRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'classification': !exists(json, 'classification') ? undefined : json['classification'],
        'courtId': !exists(json, 'courtId') ? undefined : json['courtId'],
        'isNewCoverageFee': !exists(json, 'isNewCoverageFee') ? undefined : json['isNewCoverageFee'],
        'lawfirmFee': !exists(json, 'lawfirmFee') ? undefined : json['lawfirmFee'],
        'refundEligibility': !exists(json, 'refundEligibility') ? undefined : json['refundEligibility'],
        'violationId': !exists(json, 'violationId') ? undefined : json['violationId'],
    };
}
export function AddCourtCoverageRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'classification': value.classification,
        'courtId': value.courtId,
        'isNewCoverageFee': value.isNewCoverageFee,
        'lawfirmFee': value.lawfirmFee,
        'refundEligibility': value.refundEligibility,
        'violationId': value.violationId,
    };
}
/**
* @export
* @enum {string}
*/
export var AddCourtCoverageRequestClassificationEnum;
(function (AddCourtCoverageRequestClassificationEnum) {
    AddCourtCoverageRequestClassificationEnum["CLASS1FELONY"] = "CLASS_1_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASS1MISDEMEANOR"] = "CLASS_1_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASS2FELONY"] = "CLASS_2_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASS2MISDEMEANOR"] = "CLASS_2_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASS3FELONY"] = "CLASS_3_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASS3MISDEMEANOR"] = "CLASS_3_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASS4FELONY"] = "CLASS_4_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASS4MISDEMEANOR"] = "CLASS_4_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASS5FELONY"] = "CLASS_5_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASS6FELONY"] = "CLASS_6_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSA1MISDEMEANOR"] = "CLASS_A1_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASSAFELONY"] = "CLASS_A_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSAINFRACTION"] = "CLASS_A_INFRACTION";
    AddCourtCoverageRequestClassificationEnum["CLASSAMISDEMEANOR"] = "CLASS_A_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASSAVIOLATION"] = "CLASS_A_VIOLATION";
    AddCourtCoverageRequestClassificationEnum["CLASSBFELONY"] = "CLASS_B_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSBINFRACTION"] = "CLASS_B_INFRACTION";
    AddCourtCoverageRequestClassificationEnum["CLASSBMISDEMEANOR"] = "CLASS_B_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASSBVIOLATION"] = "CLASS_B_VIOLATION";
    AddCourtCoverageRequestClassificationEnum["CLASSCFELONY"] = "CLASS_C_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSCINFRACTION"] = "CLASS_C_INFRACTION";
    AddCourtCoverageRequestClassificationEnum["CLASSCMISDEMEANOR"] = "CLASS_C_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASSCVIOLATION"] = "CLASS_C_VIOLATION";
    AddCourtCoverageRequestClassificationEnum["CLASSDFELONY"] = "CLASS_D_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSDMISDEMEANOR"] = "CLASS_D_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["CLASSDVIOLATION"] = "CLASS_D_VIOLATION";
    AddCourtCoverageRequestClassificationEnum["CLASSEFELONY"] = "CLASS_E_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSFFELONY"] = "CLASS_F_FELONY";
    AddCourtCoverageRequestClassificationEnum["CLASSHFELONY"] = "CLASS_H_FELONY";
    AddCourtCoverageRequestClassificationEnum["DISORDERLYPERSONSOFFENSE"] = "DISORDERLY_PERSONS_OFFENSE";
    AddCourtCoverageRequestClassificationEnum["FELONY"] = "FELONY";
    AddCourtCoverageRequestClassificationEnum["FELONY1STDEGREE"] = "FELONY_1ST_DEGREE";
    AddCourtCoverageRequestClassificationEnum["FELONY2NDDEGREE"] = "FELONY_2ND_DEGREE";
    AddCourtCoverageRequestClassificationEnum["FELONY3RDDEGREE"] = "FELONY_3RD_DEGREE";
    AddCourtCoverageRequestClassificationEnum["FELONY4THDEGREE"] = "FELONY_4TH_DEGREE";
    AddCourtCoverageRequestClassificationEnum["FELONY5THDEGREE"] = "FELONY_5TH_DEGREE";
    AddCourtCoverageRequestClassificationEnum["GROSSMISDEMEANOR"] = "GROSS_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["HIGHANDAGGRAVATEDMISDEMEANOR"] = "HIGH_AND_AGGRAVATED_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["INFRACTION"] = "INFRACTION";
    AddCourtCoverageRequestClassificationEnum["LEVEL4FELONY"] = "LEVEL_4_FELONY";
    AddCourtCoverageRequestClassificationEnum["LEVEL5FELONY"] = "LEVEL_5_FELONY";
    AddCourtCoverageRequestClassificationEnum["LEVEL6FELONY"] = "LEVEL_6_FELONY";
    AddCourtCoverageRequestClassificationEnum["MINORMISDEMEANOR"] = "MINOR_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["MISDEMEANOR"] = "MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["MISDEMEANOR1STDEGREE"] = "MISDEMEANOR_1ST_DEGREE";
    AddCourtCoverageRequestClassificationEnum["MISDEMEANOR2NDDEGREE"] = "MISDEMEANOR_2ND_DEGREE";
    AddCourtCoverageRequestClassificationEnum["MISDEMEANOR3RDDEGREE"] = "MISDEMEANOR_3RD_DEGREE";
    AddCourtCoverageRequestClassificationEnum["MISDEMEANOR4THDEGREE"] = "MISDEMEANOR_4TH_DEGREE";
    AddCourtCoverageRequestClassificationEnum["MISDEMEANORWITHREFUND"] = "MISDEMEANOR_WITH_REFUND";
    AddCourtCoverageRequestClassificationEnum["NONMOVING"] = "NON_MOVING";
    AddCourtCoverageRequestClassificationEnum["NONREPORTABLE"] = "NON_REPORTABLE";
    AddCourtCoverageRequestClassificationEnum["PETTYMISDEMEANOR"] = "PETTY_MISDEMEANOR";
    AddCourtCoverageRequestClassificationEnum["QUASICRIMINAL"] = "QUASI_CRIMINAL";
    AddCourtCoverageRequestClassificationEnum["SUMMARYOFFENSE"] = "SUMMARY_OFFENSE";
    AddCourtCoverageRequestClassificationEnum["SUMMARYOFFENSENOREFUND"] = "SUMMARY_OFFENSE_NO_REFUND";
    AddCourtCoverageRequestClassificationEnum["WOBBLERTOFELONY"] = "WOBBLER_TO_FELONY";
    AddCourtCoverageRequestClassificationEnum["WOBBLERTOMISDEMEANOR"] = "WOBBLER_TO_MISDEMEANOR";
})(AddCourtCoverageRequestClassificationEnum || (AddCourtCoverageRequestClassificationEnum = {}));
/**
* @export
* @enum {string}
*/
export var AddCourtCoverageRequestRefundEligibilityEnum;
(function (AddCourtCoverageRequestRefundEligibilityEnum) {
    AddCourtCoverageRequestRefundEligibilityEnum["FULLREFUND"] = "FULL_REFUND";
    AddCourtCoverageRequestRefundEligibilityEnum["NOREFUND"] = "NO_REFUND";
})(AddCourtCoverageRequestRefundEligibilityEnum || (AddCourtCoverageRequestRefundEligibilityEnum = {}));
