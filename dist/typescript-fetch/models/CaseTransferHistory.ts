/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CaseTransferHistory
 */
export interface CaseTransferHistory {
    /**
     * 
     * @type {Date}
     * @memberof CaseTransferHistory
     */
    decisionDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseTransferHistory
     */
    decisionStatus?: CaseTransferHistoryDecisionStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof CaseTransferHistory
     */
    declineNote?: string;
    /**
     * 
     * @type {number}
     * @memberof CaseTransferHistory
     */
    discountInCents?: number;
    /**
     * 
     * @type {Date}
     * @memberof CaseTransferHistory
     */
    lawfirmCaseCreationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmCaseId?: string;
    /**
     * 
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmId?: string;
    /**
     * 
     * @type {string}
     * @memberof CaseTransferHistory
     */
    lawfirmName?: string;
    /**
     * 
     * @type {string}
     * @memberof CaseTransferHistory
     */
    refundOwner?: CaseTransferHistoryRefundOwnerEnum;
    /**
     * 
     * @type {number}
     * @memberof CaseTransferHistory
     */
    totalClientCostInCents?: number;
}

export function CaseTransferHistoryFromJSON(json: any): CaseTransferHistory {
    return CaseTransferHistoryFromJSONTyped(json, false);
}

export function CaseTransferHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CaseTransferHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'decisionDate': !exists(json, 'decisionDate') ? undefined : (new Date(json['decisionDate'])),
        'decisionStatus': !exists(json, 'decisionStatus') ? undefined : json['decisionStatus'],
        'declineNote': !exists(json, 'declineNote') ? undefined : json['declineNote'],
        'discountInCents': !exists(json, 'discountInCents') ? undefined : json['discountInCents'],
        'lawfirmCaseCreationDate': !exists(json, 'lawfirmCaseCreationDate') ? undefined : (new Date(json['lawfirmCaseCreationDate'])),
        'lawfirmCaseId': !exists(json, 'lawfirmCaseId') ? undefined : json['lawfirmCaseId'],
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'lawfirmName': !exists(json, 'lawfirmName') ? undefined : json['lawfirmName'],
        'refundOwner': !exists(json, 'refundOwner') ? undefined : json['refundOwner'],
        'totalClientCostInCents': !exists(json, 'totalClientCostInCents') ? undefined : json['totalClientCostInCents'],
    };
}

export function CaseTransferHistoryToJSON(value?: CaseTransferHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'decisionDate': value.decisionDate === undefined ? undefined : (value.decisionDate.toISOString()),
        'decisionStatus': value.decisionStatus,
        'declineNote': value.declineNote,
        'discountInCents': value.discountInCents,
        'lawfirmCaseCreationDate': value.lawfirmCaseCreationDate === undefined ? undefined : (value.lawfirmCaseCreationDate.toISOString()),
        'lawfirmCaseId': value.lawfirmCaseId,
        'lawfirmId': value.lawfirmId,
        'lawfirmName': value.lawfirmName,
        'refundOwner': value.refundOwner,
        'totalClientCostInCents': value.totalClientCostInCents,
    };
}

/**
* @export
* @enum {string}
*/
export enum CaseTransferHistoryDecisionStatusEnum {
    ACCEPTED = 'ACCEPTED',
    CREATED = 'CREATED',
    DECLINED = 'DECLINED',
    EXPIRED = 'EXPIRED',
    PENDING = 'PENDING',
    REMATCHED = 'REMATCHED',
    REMATCHEDREFERRAL = 'REMATCHED_REFERRAL'
}
/**
* @export
* @enum {string}
*/
export enum CaseTransferHistoryRefundOwnerEnum {
    LAWFIRM = 'LAWFIRM',
    NONE = 'NONE',
    OTR = 'OTR'
}


