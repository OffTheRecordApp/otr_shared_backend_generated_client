/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressDomain,
    AddressDomainFromJSON,
    AddressDomainFromJSONTyped,
    AddressDomainToJSON,
    UserAssetModel,
    UserAssetModelFromJSON,
    UserAssetModelFromJSONTyped,
    UserAssetModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface DriverLicenseModel
 */
export interface DriverLicenseModel {
    /**
     * 
     * @type {AddressDomain}
     * @memberof DriverLicenseModel
     */
    address?: AddressDomain;
    /**
     * 
     * @type {boolean}
     * @memberof DriverLicenseModel
     */
    deleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DriverLicenseModel
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    documentDiscriminatorId?: string;
    /**
     * 
     * @type {UserAssetModel}
     * @memberof DriverLicenseModel
     */
    driverLicenseBackAsset?: UserAssetModel;
    /**
     * 
     * @type {UserAssetModel}
     * @memberof DriverLicenseModel
     */
    driverLicenseFrontAsset?: UserAssetModel;
    /**
     * 
     * @type {number}
     * @memberof DriverLicenseModel
     */
    driverLicenseId?: number;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    driverLicenseNumber?: string;
    /**
     * 
     * @type {Date}
     * @memberof DriverLicenseModel
     */
    expirationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    eyeColor?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    height?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DriverLicenseModel
     */
    isOrganDonor?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DriverLicenseModel
     */
    issueDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    licenseClass?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    licenseClassEndorsements?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    licenseRestrictions?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    sex?: string;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    stateName?: string;
    /**
     * 
     * @type {number}
     * @memberof DriverLicenseModel
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof DriverLicenseModel
     */
    weight?: string;
}

export function DriverLicenseModelFromJSON(json: any): DriverLicenseModel {
    return DriverLicenseModelFromJSONTyped(json, false);
}

export function DriverLicenseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DriverLicenseModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': !exists(json, 'address') ? undefined : AddressDomainFromJSON(json['address']),
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'dob': !exists(json, 'dob') ? undefined : (new Date(json['dob'])),
        'documentDiscriminatorId': !exists(json, 'documentDiscriminatorId') ? undefined : json['documentDiscriminatorId'],
        'driverLicenseBackAsset': !exists(json, 'driverLicenseBackAsset') ? undefined : UserAssetModelFromJSON(json['driverLicenseBackAsset']),
        'driverLicenseFrontAsset': !exists(json, 'driverLicenseFrontAsset') ? undefined : UserAssetModelFromJSON(json['driverLicenseFrontAsset']),
        'driverLicenseId': !exists(json, 'driverLicenseId') ? undefined : json['driverLicenseId'],
        'driverLicenseNumber': !exists(json, 'driverLicenseNumber') ? undefined : json['driverLicenseNumber'],
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (new Date(json['expirationDate'])),
        'eyeColor': !exists(json, 'eyeColor') ? undefined : json['eyeColor'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'isOrganDonor': !exists(json, 'isOrganDonor') ? undefined : json['isOrganDonor'],
        'issueDate': !exists(json, 'issueDate') ? undefined : (new Date(json['issueDate'])),
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'licenseClass': !exists(json, 'licenseClass') ? undefined : json['licenseClass'],
        'licenseClassEndorsements': !exists(json, 'licenseClassEndorsements') ? undefined : json['licenseClassEndorsements'],
        'licenseRestrictions': !exists(json, 'licenseRestrictions') ? undefined : json['licenseRestrictions'],
        'sex': !exists(json, 'sex') ? undefined : json['sex'],
        'stateName': !exists(json, 'stateName') ? undefined : json['stateName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
    };
}

export function DriverLicenseModelToJSON(value?: DriverLicenseModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': AddressDomainToJSON(value.address),
        'deleted': value.deleted,
        'dob': value.dob === undefined ? undefined : (value.dob.toISOString()),
        'documentDiscriminatorId': value.documentDiscriminatorId,
        'driverLicenseBackAsset': UserAssetModelToJSON(value.driverLicenseBackAsset),
        'driverLicenseFrontAsset': UserAssetModelToJSON(value.driverLicenseFrontAsset),
        'driverLicenseId': value.driverLicenseId,
        'driverLicenseNumber': value.driverLicenseNumber,
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate.toISOString()),
        'eyeColor': value.eyeColor,
        'firstName': value.firstName,
        'height': value.height,
        'isOrganDonor': value.isOrganDonor,
        'issueDate': value.issueDate === undefined ? undefined : (value.issueDate.toISOString()),
        'lastName': value.lastName,
        'licenseClass': value.licenseClass,
        'licenseClassEndorsements': value.licenseClassEndorsements,
        'licenseRestrictions': value.licenseRestrictions,
        'sex': value.sex,
        'stateName': value.stateName,
        'userId': value.userId,
        'weight': value.weight,
    };
}


