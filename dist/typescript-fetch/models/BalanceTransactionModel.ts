/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BalanceTransactionModel
 */
export interface BalanceTransactionModel {
    /**
     * 
     * @type {number}
     * @memberof BalanceTransactionModel
     */
    amountInCents?: number;
    /**
     * 
     * @type {Date}
     * @memberof BalanceTransactionModel
     */
    availableAtDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof BalanceTransactionModel
     */
    caseId?: string;
    /**
     * 
     * @type {Date}
     * @memberof BalanceTransactionModel
     */
    creationDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof BalanceTransactionModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof BalanceTransactionModel
     */
    stripePayoutId?: string;
    /**
     * 
     * @type {string}
     * @memberof BalanceTransactionModel
     */
    transactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof BalanceTransactionModel
     */
    type?: string;
}

export function BalanceTransactionModelFromJSON(json: any): BalanceTransactionModel {
    return BalanceTransactionModelFromJSONTyped(json, false);
}

export function BalanceTransactionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): BalanceTransactionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amountInCents': !exists(json, 'amountInCents') ? undefined : json['amountInCents'],
        'availableAtDateUtc': !exists(json, 'availableAtDateUtc') ? undefined : (new Date(json['availableAtDateUtc'])),
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'creationDateUtc': !exists(json, 'creationDateUtc') ? undefined : (new Date(json['creationDateUtc'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'stripePayoutId': !exists(json, 'stripePayoutId') ? undefined : json['stripePayoutId'],
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function BalanceTransactionModelToJSON(value?: BalanceTransactionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amountInCents': value.amountInCents,
        'availableAtDateUtc': value.availableAtDateUtc === undefined ? undefined : (value.availableAtDateUtc.toISOString()),
        'caseId': value.caseId,
        'creationDateUtc': value.creationDateUtc === undefined ? undefined : (value.creationDateUtc.toISOString()),
        'id': value.id,
        'stripePayoutId': value.stripePayoutId,
        'transactionId': value.transactionId,
        'type': value.type,
    };
}


