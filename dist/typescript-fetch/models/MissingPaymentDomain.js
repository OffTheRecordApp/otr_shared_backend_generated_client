/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function MissingPaymentDomainFromJSON(json) {
    return MissingPaymentDomainFromJSONTyped(json, false);
}
export function MissingPaymentDomainFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bookingConfirmedDateUtc': !exists(json, 'bookingConfirmedDateUtc') ? undefined : (new Date(json['bookingConfirmedDateUtc'])),
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseStatus': !exists(json, 'caseStatus') ? undefined : json['caseStatus'],
        'caseSubtotal': !exists(json, 'caseSubtotal') ? undefined : json['caseSubtotal'],
        'chargeAttempts': !exists(json, 'chargeAttempts') ? undefined : json['chargeAttempts'],
        'disputedAmount': !exists(json, 'disputedAmount') ? undefined : json['disputedAmount'],
        'dueLater': !exists(json, 'dueLater') ? undefined : json['dueLater'],
        'lastAttemptDateUtc': !exists(json, 'lastAttemptDateUtc') ? undefined : (new Date(json['lastAttemptDateUtc'])),
        'lawfirmDecisionDateUtc': !exists(json, 'lawfirmDecisionDateUtc') ? undefined : (new Date(json['lawfirmDecisionDateUtc'])),
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'lawfirmName': !exists(json, 'lawfirmName') ? undefined : json['lawfirmName'],
        'mostRecentChargeError': !exists(json, 'mostRecentChargeError') ? undefined : json['mostRecentChargeError'],
        'mostRecentDueDateUtc': !exists(json, 'mostRecentDueDateUtc') ? undefined : (new Date(json['mostRecentDueDateUtc'])),
        'overdue': !exists(json, 'overdue') ? undefined : json['overdue'],
        'statusCategory': !exists(json, 'statusCategory') ? undefined : json['statusCategory'],
        'totalPaid': !exists(json, 'totalPaid') ? undefined : json['totalPaid'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
    };
}
export function MissingPaymentDomainToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bookingConfirmedDateUtc': value.bookingConfirmedDateUtc === undefined ? undefined : (value.bookingConfirmedDateUtc.toISOString()),
        'caseId': value.caseId,
        'caseStatus': value.caseStatus,
        'caseSubtotal': value.caseSubtotal,
        'chargeAttempts': value.chargeAttempts,
        'disputedAmount': value.disputedAmount,
        'dueLater': value.dueLater,
        'lastAttemptDateUtc': value.lastAttemptDateUtc === undefined ? undefined : (value.lastAttemptDateUtc.toISOString()),
        'lawfirmDecisionDateUtc': value.lawfirmDecisionDateUtc === undefined ? undefined : (value.lawfirmDecisionDateUtc.toISOString()),
        'lawfirmId': value.lawfirmId,
        'lawfirmName': value.lawfirmName,
        'mostRecentChargeError': value.mostRecentChargeError,
        'mostRecentDueDateUtc': value.mostRecentDueDateUtc === undefined ? undefined : (value.mostRecentDueDateUtc.toISOString()),
        'overdue': value.overdue,
        'statusCategory': value.statusCategory,
        'totalPaid': value.totalPaid,
        'userId': value.userId,
        'userName': value.userName,
    };
}
/**
* @export
* @enum {string}
*/
export var MissingPaymentDomainCaseStatusEnum;
(function (MissingPaymentDomainCaseStatusEnum) {
    MissingPaymentDomainCaseStatusEnum["AMENDEDDOWNWITHINCLASS"] = "AMENDED_DOWN_WITHIN_CLASS";
    MissingPaymentDomainCaseStatusEnum["AMENDEDFULLFINE"] = "AMENDED_FULL_FINE";
    MissingPaymentDomainCaseStatusEnum["AMENDEDINCREASEDFINE"] = "AMENDED_INCREASED_FINE";
    MissingPaymentDomainCaseStatusEnum["AMENDEDNOFINE"] = "AMENDED_NO_FINE";
    MissingPaymentDomainCaseStatusEnum["AMENDEDREDUCEDFINE"] = "AMENDED_REDUCED_FINE";
    MissingPaymentDomainCaseStatusEnum["AMENDEDTOINFRACTION"] = "AMENDED_TO_INFRACTION";
    MissingPaymentDomainCaseStatusEnum["AMENDEDTONMV"] = "AMENDED_TO_NMV";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDATTORNEYATFAULT"] = "CANCELLED_ATTORNEY_AT_FAULT";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDBYLAWFIRM"] = "CANCELLED_BY_LAWFIRM";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDBYUSER"] = "CANCELLED_BY_USER";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDDUPLICATE"] = "CANCELLED_DUPLICATE";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDNMV"] = "CANCELLED_NMV";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDNONPAYMENT"] = "CANCELLED_NON_PAYMENT";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDNOLAWFIRM"] = "CANCELLED_NO_LAWFIRM";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDOVERDUE"] = "CANCELLED_OVERDUE";
    MissingPaymentDomainCaseStatusEnum["CANCELLEDTOOSHORTNOTICE"] = "CANCELLED_TOO_SHORT_NOTICE";
    MissingPaymentDomainCaseStatusEnum["CASEINPROGRESS"] = "CASE_IN_PROGRESS";
    MissingPaymentDomainCaseStatusEnum["CLIENTCONFIRMED"] = "CLIENT_CONFIRMED";
    MissingPaymentDomainCaseStatusEnum["CLIENTCONFIRMEDUNPAID"] = "CLIENT_CONFIRMED_UNPAID";
    MissingPaymentDomainCaseStatusEnum["CLIENTFIREDLAWFIRM"] = "CLIENT_FIRED_LAWFIRM";
    MissingPaymentDomainCaseStatusEnum["CLIENTFORCEDLOSS"] = "CLIENT_FORCED_LOSS";
    MissingPaymentDomainCaseStatusEnum["CLIENTPAIDFINE"] = "CLIENT_PAID_FINE";
    MissingPaymentDomainCaseStatusEnum["CLIENTUNRESPONSIVE"] = "CLIENT_UNRESPONSIVE";
    MissingPaymentDomainCaseStatusEnum["DEFERRED"] = "DEFERRED";
    MissingPaymentDomainCaseStatusEnum["DISMISSED"] = "DISMISSED";
    MissingPaymentDomainCaseStatusEnum["DIVERSION"] = "DIVERSION";
    MissingPaymentDomainCaseStatusEnum["FEESDISPUTED"] = "FEES_DISPUTED";
    MissingPaymentDomainCaseStatusEnum["FINEREDUCTIONONLY"] = "FINE_REDUCTION_ONLY";
    MissingPaymentDomainCaseStatusEnum["LAWFIRMWITHDRAWN"] = "LAWFIRM_WITHDRAWN";
    MissingPaymentDomainCaseStatusEnum["LOST"] = "LOST";
    MissingPaymentDomainCaseStatusEnum["NOLAWFIRMAVAILABLE"] = "NO_LAWFIRM_AVAILABLE";
    MissingPaymentDomainCaseStatusEnum["POINTREDUCTION"] = "POINT_REDUCTION";
    MissingPaymentDomainCaseStatusEnum["REFUSEDBYLAWFIRM"] = "REFUSED_BY_LAWFIRM";
    MissingPaymentDomainCaseStatusEnum["RESOLVEDNONPAYMENT"] = "RESOLVED_NON_PAYMENT";
    MissingPaymentDomainCaseStatusEnum["STALE"] = "STALE";
    MissingPaymentDomainCaseStatusEnum["TRAFFICSCHOOL"] = "TRAFFIC_SCHOOL";
    MissingPaymentDomainCaseStatusEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(MissingPaymentDomainCaseStatusEnum || (MissingPaymentDomainCaseStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var MissingPaymentDomainStatusCategoryEnum;
(function (MissingPaymentDomainStatusCategoryEnum) {
    MissingPaymentDomainStatusCategoryEnum["ACTIVE"] = "ACTIVE";
    MissingPaymentDomainStatusCategoryEnum["CANCELLED"] = "CANCELLED";
    MissingPaymentDomainStatusCategoryEnum["RESOLVED"] = "RESOLVED";
    MissingPaymentDomainStatusCategoryEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(MissingPaymentDomainStatusCategoryEnum || (MissingPaymentDomainStatusCategoryEnum = {}));
