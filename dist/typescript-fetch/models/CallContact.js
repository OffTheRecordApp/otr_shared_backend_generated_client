/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function CallContactFromJSON(json) {
    return CallContactFromJSONTyped(json, false);
}
export function CallContactFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'agentId': !exists(json, 'agentId') ? undefined : json['agentId'],
        'agentName': !exists(json, 'agentName') ? undefined : json['agentName'],
        'callDirection': !exists(json, 'callDirection') ? undefined : json['callDirection'],
        'callDurationInSeconds': !exists(json, 'callDurationInSeconds') ? undefined : json['callDurationInSeconds'],
        'callId': !exists(json, 'callId') ? undefined : json['callId'],
        'callQueueId': !exists(json, 'callQueueId') ? undefined : json['callQueueId'],
        'callQueueName': !exists(json, 'callQueueName') ? undefined : json['callQueueName'],
        'callStartDateUtc': !exists(json, 'callStartDateUtc') ? undefined : (new Date(json['callStartDateUtc'])),
        'callStatus': !exists(json, 'callStatus') ? undefined : json['callStatus'],
        'customerName': !exists(json, 'customerName') ? undefined : json['customerName'],
        'customerNumber': !exists(json, 'customerNumber') ? undefined : json['customerNumber'],
        'integratedResourceType': !exists(json, 'integratedResourceType') ? undefined : json['integratedResourceType'],
        'integratedResourceValue': !exists(json, 'integratedResourceValue') ? undefined : json['integratedResourceValue'],
        'ivrId': !exists(json, 'ivrId') ? undefined : json['ivrId'],
        'ivrName': !exists(json, 'ivrName') ? undefined : json['ivrName'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'parentCallId': !exists(json, 'parentCallId') ? undefined : json['parentCallId'],
        'recordingUrl': !exists(json, 'recordingUrl') ? undefined : json['recordingUrl'],
        'rootCallId': !exists(json, 'rootCallId') ? undefined : json['rootCallId'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'teamId': !exists(json, 'teamId') ? undefined : json['teamId'],
        'teamName': !exists(json, 'teamName') ? undefined : json['teamName'],
        'thirdPartyCallId': !exists(json, 'thirdPartyCallId') ? undefined : json['thirdPartyCallId'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}
export function CallContactToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'agentId': value.agentId,
        'agentName': value.agentName,
        'callDirection': value.callDirection,
        'callDurationInSeconds': value.callDurationInSeconds,
        'callId': value.callId,
        'callQueueId': value.callQueueId,
        'callQueueName': value.callQueueName,
        'callStartDateUtc': value.callStartDateUtc === undefined ? undefined : (value.callStartDateUtc.toISOString()),
        'callStatus': value.callStatus,
        'customerName': value.customerName,
        'customerNumber': value.customerNumber,
        'integratedResourceType': value.integratedResourceType,
        'integratedResourceValue': value.integratedResourceValue,
        'ivrId': value.ivrId,
        'ivrName': value.ivrName,
        'notes': value.notes,
        'parentCallId': value.parentCallId,
        'recordingUrl': value.recordingUrl,
        'rootCallId': value.rootCallId,
        'tags': value.tags,
        'teamId': value.teamId,
        'teamName': value.teamName,
        'thirdPartyCallId': value.thirdPartyCallId,
        'userId': value.userId,
    };
}
/**
* @export
* @enum {string}
*/
export var CallContactCallDirectionEnum;
(function (CallContactCallDirectionEnum) {
    CallContactCallDirectionEnum["INCOMING"] = "INCOMING";
    CallContactCallDirectionEnum["OUTGOING"] = "OUTGOING";
})(CallContactCallDirectionEnum || (CallContactCallDirectionEnum = {}));
/**
* @export
* @enum {string}
*/
export var CallContactCallStatusEnum;
(function (CallContactCallStatusEnum) {
    CallContactCallStatusEnum["ABANDONED"] = "ABANDONED";
    CallContactCallStatusEnum["BLOCKED"] = "BLOCKED";
    CallContactCallStatusEnum["BUSY"] = "BUSY";
    CallContactCallStatusEnum["COMPLETED"] = "COMPLETED";
    CallContactCallStatusEnum["CONNECTING"] = "CONNECTING";
    CallContactCallStatusEnum["CONNECTIONFAILED"] = "CONNECTION_FAILED";
    CallContactCallStatusEnum["DEFAULT"] = "DEFAULT";
    CallContactCallStatusEnum["DISCONNECTED"] = "DISCONNECTED";
    CallContactCallStatusEnum["ENQUEUED"] = "ENQUEUED";
    CallContactCallStatusEnum["INPROGRESS"] = "IN_PROGRESS";
    CallContactCallStatusEnum["MISSEDCALL"] = "MISSED_CALL";
    CallContactCallStatusEnum["ONHOLD"] = "ON_HOLD";
    CallContactCallStatusEnum["RECENTLYCOMPLETED"] = "RECENTLY_COMPLETED";
    CallContactCallStatusEnum["RESTRICTED"] = "RESTRICTED";
    CallContactCallStatusEnum["VOICEMAIL"] = "VOICEMAIL";
    CallContactCallStatusEnum["VOICEMAILRECORDINGINPROGRESS"] = "VOICEMAIL_RECORDING_IN_PROGRESS";
})(CallContactCallStatusEnum || (CallContactCallStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var CallContactIntegratedResourceTypeEnum;
(function (CallContactIntegratedResourceTypeEnum) {
    CallContactIntegratedResourceTypeEnum["FRESHDESK"] = "FRESHDESK";
    CallContactIntegratedResourceTypeEnum["UNKNOWN"] = "UNKNOWN";
})(CallContactIntegratedResourceTypeEnum || (CallContactIntegratedResourceTypeEnum = {}));
