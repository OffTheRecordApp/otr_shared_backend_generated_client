/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChargeFeeToLawfirmRequest
 */
export interface ChargeFeeToLawfirmRequest {
    /**
     * 
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    caseId?: string;
    /**
     * 
     * @type {Date}
     * @memberof ChargeFeeToLawfirmRequest
     */
    dueDateUtc?: Date;
    /**
     * 
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    feeAmountInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    lawfirmCaseId?: number;
    /**
     * 
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    note?: string;
    /**
     * 
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    otrFeeInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof ChargeFeeToLawfirmRequest
     */
    processingFeeInCents?: number;
    /**
     * 
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    sourceCasePaymentId?: string;
    /**
     * 
     * @type {Date}
     * @memberof ChargeFeeToLawfirmRequest
     */
    transactionDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    transactionMethod?: ChargeFeeToLawfirmRequestTransactionMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof ChargeFeeToLawfirmRequest
     */
    transactionReference?: string;
}

export function ChargeFeeToLawfirmRequestFromJSON(json: any): ChargeFeeToLawfirmRequest {
    return ChargeFeeToLawfirmRequestFromJSONTyped(json, false);
}

export function ChargeFeeToLawfirmRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeFeeToLawfirmRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'dueDateUtc': !exists(json, 'dueDateUtc') ? undefined : (new Date(json['dueDateUtc'])),
        'feeAmountInCents': !exists(json, 'feeAmountInCents') ? undefined : json['feeAmountInCents'],
        'lawfirmCaseId': !exists(json, 'lawfirmCaseId') ? undefined : json['lawfirmCaseId'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'otrFeeInCents': !exists(json, 'otrFeeInCents') ? undefined : json['otrFeeInCents'],
        'processingFeeInCents': !exists(json, 'processingFeeInCents') ? undefined : json['processingFeeInCents'],
        'sourceCasePaymentId': !exists(json, 'sourceCasePaymentId') ? undefined : json['sourceCasePaymentId'],
        'transactionDateUtc': !exists(json, 'transactionDateUtc') ? undefined : (new Date(json['transactionDateUtc'])),
        'transactionMethod': !exists(json, 'transactionMethod') ? undefined : json['transactionMethod'],
        'transactionReference': !exists(json, 'transactionReference') ? undefined : json['transactionReference'],
    };
}

export function ChargeFeeToLawfirmRequestToJSON(value?: ChargeFeeToLawfirmRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'caseId': value.caseId,
        'dueDateUtc': value.dueDateUtc === undefined ? undefined : (value.dueDateUtc.toISOString()),
        'feeAmountInCents': value.feeAmountInCents,
        'lawfirmCaseId': value.lawfirmCaseId,
        'note': value.note,
        'otrFeeInCents': value.otrFeeInCents,
        'processingFeeInCents': value.processingFeeInCents,
        'sourceCasePaymentId': value.sourceCasePaymentId,
        'transactionDateUtc': value.transactionDateUtc === undefined ? undefined : (value.transactionDateUtc.toISOString()),
        'transactionMethod': value.transactionMethod,
        'transactionReference': value.transactionReference,
    };
}

/**
* @export
* @enum {string}
*/
export enum ChargeFeeToLawfirmRequestTransactionMethodEnum {
    CASH = 'CASH',
    CHECK = 'CHECK',
    DESTINATIONCHARGETRANSFER = 'DESTINATION_CHARGE_TRANSFER',
    LOBCHECK = 'LOB_CHECK',
    PAYPAL = 'PAYPAL',
    STRIPEAPPLICATIONFEE = 'STRIPE_APPLICATION_FEE',
    STRIPECHARGE = 'STRIPE_CHARGE',
    STRIPECONNECTDEBIT = 'STRIPE_CONNECT_DEBIT',
    STRIPETRANSFER = 'STRIPE_TRANSFER',
    UNKNOWN = 'UNKNOWN',
    VENMO = 'VENMO',
    WIRETRANSFER = 'WIRE_TRANSFER',
    ZELLE = 'ZELLE'
}


