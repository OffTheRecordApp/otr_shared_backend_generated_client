/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MissingPaymentDomain
 */
export interface MissingPaymentDomain {
    /**
     * 
     * @type {Date}
     * @memberof MissingPaymentDomain
     */
    bookingConfirmedDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    caseId?: string;
    /**
     * 
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    caseStatus?: MissingPaymentDomainCaseStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    caseSubtotal?: number;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    chargeAttempts?: number;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    disputedAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    dueLater?: number;
    /**
     * 
     * @type {Date}
     * @memberof MissingPaymentDomain
     */
    lastAttemptDateUtc?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MissingPaymentDomain
     */
    lawfirmDecisionDateUtc?: Date;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    lawfirmId?: number;
    /**
     * 
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    lawfirmName?: string;
    /**
     * 
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    mostRecentChargeError?: string;
    /**
     * 
     * @type {Date}
     * @memberof MissingPaymentDomain
     */
    mostRecentDueDateUtc?: Date;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    overdue?: number;
    /**
     * 
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    statusCategory?: MissingPaymentDomainStatusCategoryEnum;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    totalPaid?: number;
    /**
     * 
     * @type {number}
     * @memberof MissingPaymentDomain
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof MissingPaymentDomain
     */
    userName?: string;
}

export function MissingPaymentDomainFromJSON(json: any): MissingPaymentDomain {
    return MissingPaymentDomainFromJSONTyped(json, false);
}

export function MissingPaymentDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): MissingPaymentDomain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingConfirmedDateUtc': !exists(json, 'bookingConfirmedDateUtc') ? undefined : (new Date(json['bookingConfirmedDateUtc'])),
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseStatus': !exists(json, 'caseStatus') ? undefined : json['caseStatus'],
        'caseSubtotal': !exists(json, 'caseSubtotal') ? undefined : json['caseSubtotal'],
        'chargeAttempts': !exists(json, 'chargeAttempts') ? undefined : json['chargeAttempts'],
        'disputedAmount': !exists(json, 'disputedAmount') ? undefined : json['disputedAmount'],
        'dueLater': !exists(json, 'dueLater') ? undefined : json['dueLater'],
        'lastAttemptDateUtc': !exists(json, 'lastAttemptDateUtc') ? undefined : (new Date(json['lastAttemptDateUtc'])),
        'lawfirmDecisionDateUtc': !exists(json, 'lawfirmDecisionDateUtc') ? undefined : (new Date(json['lawfirmDecisionDateUtc'])),
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'lawfirmName': !exists(json, 'lawfirmName') ? undefined : json['lawfirmName'],
        'mostRecentChargeError': !exists(json, 'mostRecentChargeError') ? undefined : json['mostRecentChargeError'],
        'mostRecentDueDateUtc': !exists(json, 'mostRecentDueDateUtc') ? undefined : (new Date(json['mostRecentDueDateUtc'])),
        'overdue': !exists(json, 'overdue') ? undefined : json['overdue'],
        'statusCategory': !exists(json, 'statusCategory') ? undefined : json['statusCategory'],
        'totalPaid': !exists(json, 'totalPaid') ? undefined : json['totalPaid'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
    };
}

export function MissingPaymentDomainToJSON(value?: MissingPaymentDomain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingConfirmedDateUtc': value.bookingConfirmedDateUtc === undefined ? undefined : (value.bookingConfirmedDateUtc.toISOString()),
        'caseId': value.caseId,
        'caseStatus': value.caseStatus,
        'caseSubtotal': value.caseSubtotal,
        'chargeAttempts': value.chargeAttempts,
        'disputedAmount': value.disputedAmount,
        'dueLater': value.dueLater,
        'lastAttemptDateUtc': value.lastAttemptDateUtc === undefined ? undefined : (value.lastAttemptDateUtc.toISOString()),
        'lawfirmDecisionDateUtc': value.lawfirmDecisionDateUtc === undefined ? undefined : (value.lawfirmDecisionDateUtc.toISOString()),
        'lawfirmId': value.lawfirmId,
        'lawfirmName': value.lawfirmName,
        'mostRecentChargeError': value.mostRecentChargeError,
        'mostRecentDueDateUtc': value.mostRecentDueDateUtc === undefined ? undefined : (value.mostRecentDueDateUtc.toISOString()),
        'overdue': value.overdue,
        'statusCategory': value.statusCategory,
        'totalPaid': value.totalPaid,
        'userId': value.userId,
        'userName': value.userName,
    };
}

/**
* @export
* @enum {string}
*/
export enum MissingPaymentDomainCaseStatusEnum {
    AMENDEDDOWNWITHINCLASS = 'AMENDED_DOWN_WITHIN_CLASS',
    AMENDEDFULLFINE = 'AMENDED_FULL_FINE',
    AMENDEDINCREASEDFINE = 'AMENDED_INCREASED_FINE',
    AMENDEDNOFINE = 'AMENDED_NO_FINE',
    AMENDEDREDUCEDFINE = 'AMENDED_REDUCED_FINE',
    AMENDEDTOINFRACTION = 'AMENDED_TO_INFRACTION',
    AMENDEDTONMV = 'AMENDED_TO_NMV',
    CANCELLEDATTORNEYATFAULT = 'CANCELLED_ATTORNEY_AT_FAULT',
    CANCELLEDBYLAWFIRM = 'CANCELLED_BY_LAWFIRM',
    CANCELLEDBYUSER = 'CANCELLED_BY_USER',
    CANCELLEDDUPLICATE = 'CANCELLED_DUPLICATE',
    CANCELLEDNMV = 'CANCELLED_NMV',
    CANCELLEDNONPAYMENT = 'CANCELLED_NON_PAYMENT',
    CANCELLEDNOLAWFIRM = 'CANCELLED_NO_LAWFIRM',
    CANCELLEDOVERDUE = 'CANCELLED_OVERDUE',
    CANCELLEDTOOSHORTNOTICE = 'CANCELLED_TOO_SHORT_NOTICE',
    CASEINPROGRESS = 'CASE_IN_PROGRESS',
    CLIENTCONFIRMED = 'CLIENT_CONFIRMED',
    CLIENTCONFIRMEDUNPAID = 'CLIENT_CONFIRMED_UNPAID',
    CLIENTFIREDLAWFIRM = 'CLIENT_FIRED_LAWFIRM',
    CLIENTFORCEDLOSS = 'CLIENT_FORCED_LOSS',
    CLIENTPAIDFINE = 'CLIENT_PAID_FINE',
    CLIENTUNRESPONSIVE = 'CLIENT_UNRESPONSIVE',
    DEFERRED = 'DEFERRED',
    DISMISSED = 'DISMISSED',
    DIVERSION = 'DIVERSION',
    FEESDISPUTED = 'FEES_DISPUTED',
    FINEREDUCTIONONLY = 'FINE_REDUCTION_ONLY',
    LAWFIRMWITHDRAWN = 'LAWFIRM_WITHDRAWN',
    LOST = 'LOST',
    NOLAWFIRMAVAILABLE = 'NO_LAWFIRM_AVAILABLE',
    POINTREDUCTION = 'POINT_REDUCTION',
    REFUSEDBYLAWFIRM = 'REFUSED_BY_LAWFIRM',
    RESOLVEDNONPAYMENT = 'RESOLVED_NON_PAYMENT',
    STALE = 'STALE',
    TRAFFICSCHOOL = 'TRAFFIC_SCHOOL',
    UNCONFIRMED = 'UNCONFIRMED'
}
/**
* @export
* @enum {string}
*/
export enum MissingPaymentDomainStatusCategoryEnum {
    ACTIVE = 'ACTIVE',
    CANCELLED = 'CANCELLED',
    RESOLVED = 'RESOLVED',
    UNCONFIRMED = 'UNCONFIRMED'
}


