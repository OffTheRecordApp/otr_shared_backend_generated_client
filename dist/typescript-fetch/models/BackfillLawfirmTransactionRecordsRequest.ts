/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BackfillLawfirmTransactionRecordsRequest
 */
export interface BackfillLawfirmTransactionRecordsRequest {
    /**
     * 
     * @type {string}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    caseId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    caseIds?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    deleteExistingRecords?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    lawfirmId?: number;
    /**
     * 
     * @type {number}
     * @memberof BackfillLawfirmTransactionRecordsRequest
     */
    maxCases?: number;
}

export function BackfillLawfirmTransactionRecordsRequestFromJSON(json: any): BackfillLawfirmTransactionRecordsRequest {
    return BackfillLawfirmTransactionRecordsRequestFromJSONTyped(json, false);
}

export function BackfillLawfirmTransactionRecordsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackfillLawfirmTransactionRecordsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseIds': !exists(json, 'caseIds') ? undefined : json['caseIds'],
        'deleteExistingRecords': !exists(json, 'deleteExistingRecords') ? undefined : json['deleteExistingRecords'],
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'maxCases': !exists(json, 'maxCases') ? undefined : json['maxCases'],
    };
}

export function BackfillLawfirmTransactionRecordsRequestToJSON(value?: BackfillLawfirmTransactionRecordsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'caseId': value.caseId,
        'caseIds': value.caseIds,
        'deleteExistingRecords': value.deleteExistingRecords,
        'lawfirmId': value.lawfirmId,
        'maxCases': value.maxCases,
    };
}


