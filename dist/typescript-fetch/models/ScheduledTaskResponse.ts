/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScheduledTaskResponse
 */
export interface ScheduledTaskResponse {
    /**
     * 
     * @type {Date}
     * @memberof ScheduledTaskResponse
     */
    completionDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    errorMessage?: string;
    /**
     * 
     * @type {Date}
     * @memberof ScheduledTaskResponse
     */
    runAtDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskId?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskReferenceId?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskStatus?: ScheduledTaskResponseTaskStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ScheduledTaskResponse
     */
    taskType?: ScheduledTaskResponseTaskTypeEnum;
}

export function ScheduledTaskResponseFromJSON(json: any): ScheduledTaskResponse {
    return ScheduledTaskResponseFromJSONTyped(json, false);
}

export function ScheduledTaskResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledTaskResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'completionDate': !exists(json, 'completionDate') ? undefined : (new Date(json['completionDate'])),
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'runAtDateUtc': !exists(json, 'runAtDateUtc') ? undefined : (new Date(json['runAtDateUtc'])),
        'taskId': !exists(json, 'taskId') ? undefined : json['taskId'],
        'taskReferenceId': !exists(json, 'taskReferenceId') ? undefined : json['taskReferenceId'],
        'taskStatus': !exists(json, 'taskStatus') ? undefined : json['taskStatus'],
        'taskType': !exists(json, 'taskType') ? undefined : json['taskType'],
    };
}

export function ScheduledTaskResponseToJSON(value?: ScheduledTaskResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'completionDate': value.completionDate === undefined ? undefined : (value.completionDate.toISOString()),
        'errorMessage': value.errorMessage,
        'runAtDateUtc': value.runAtDateUtc === undefined ? undefined : (value.runAtDateUtc.toISOString()),
        'taskId': value.taskId,
        'taskReferenceId': value.taskReferenceId,
        'taskStatus': value.taskStatus,
        'taskType': value.taskType,
    };
}

/**
* @export
* @enum {string}
*/
export enum ScheduledTaskResponseTaskStatusEnum {
    CANCELLED = 'CANCELLED',
    COMPLETE = 'COMPLETE',
    ERROR = 'ERROR',
    INPROGRESS = 'IN_PROGRESS',
    NOOPERATION = 'NO_OPERATION',
    QUEUED = 'QUEUED'
}
/**
* @export
* @enum {string}
*/
export enum ScheduledTaskResponseTaskTypeEnum {
    EMAILFOLLOWUPTASK = 'EMAIL_FOLLOW_UP_TASK',
    PAYINSTALLMENTTASK = 'PAY_INSTALLMENT_TASK',
    PDFTOIMAGETASK = 'PDF_TO_IMAGE_TASK',
    TICKETREVIEWTASK = 'TICKET_REVIEW_TASK',
    VALIDATESUBSCRIPTIONTASK = 'VALIDATE_SUBSCRIPTION_TASK'
}


