/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FindMatchingUsersRequest
 */
export interface FindMatchingUsersRequest {
    /**
     * 
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    firstName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FindMatchingUsersRequest
     */
    isTestUser?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof FindMatchingUsersRequest
     */
    phoneNumber?: string;
}

export function FindMatchingUsersRequestFromJSON(json: any): FindMatchingUsersRequest {
    return FindMatchingUsersRequestFromJSONTyped(json, false);
}

export function FindMatchingUsersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindMatchingUsersRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'isTestUser': !exists(json, 'isTestUser') ? undefined : json['isTestUser'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
    };
}

export function FindMatchingUsersRequestToJSON(value?: FindMatchingUsersRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailAddress': value.emailAddress,
        'firstName': value.firstName,
        'isTestUser': value.isTestUser,
        'lastName': value.lastName,
        'phoneNumber': value.phoneNumber,
    };
}


