/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseStatusDomain,
    CaseStatusDomainFromJSON,
    CaseStatusDomainFromJSONTyped,
    CaseStatusDomainToJSON,
    PureDate,
    PureDateFromJSON,
    PureDateFromJSONTyped,
    PureDateToJSON,
} from './';

/**
 * 
 * @export
 * @interface CaseSummaryDomain
 */
export interface CaseSummaryDomain {
    /**
     * 
     * @type {Date}
     * @memberof CaseSummaryDomain
     */
    bookingConfirmedDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    caseDecisionStatus?: CaseSummaryDomainCaseDecisionStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    caseId?: string;
    /**
     * 
     * @type {CaseStatusDomain}
     * @memberof CaseSummaryDomain
     */
    caseStatusDomain?: CaseStatusDomain;
    /**
     * 
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    citationId?: number;
    /**
     * 
     * @type {PureDate}
     * @memberof CaseSummaryDomain
     */
    citationIssueDate?: PureDate;
    /**
     * 
     * @type {Date}
     * @memberof CaseSummaryDomain
     */
    citationIssueDateUTC?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    countyName?: string;
    /**
     * 
     * @type {Date}
     * @memberof CaseSummaryDomain
     */
    courtDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    courtName?: string;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    firstName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CaseSummaryDomain
     */
    involvesAccident?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    lastName?: string;
    /**
     * 
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    legalFeeInCents?: number;
    /**
     * 
     * @type {Date}
     * @memberof CaseSummaryDomain
     */
    resolutionDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseSummaryDomain
     */
    ticketImageUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    userId?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseSummaryDomain
     */
    violationCount?: number;
}

export function CaseSummaryDomainFromJSON(json: any): CaseSummaryDomain {
    return CaseSummaryDomainFromJSONTyped(json, false);
}

export function CaseSummaryDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): CaseSummaryDomain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingConfirmedDate': !exists(json, 'bookingConfirmedDate') ? undefined : (new Date(json['bookingConfirmedDate'])),
        'caseDecisionStatus': !exists(json, 'caseDecisionStatus') ? undefined : json['caseDecisionStatus'],
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'caseStatusDomain': !exists(json, 'caseStatusDomain') ? undefined : CaseStatusDomainFromJSON(json['caseStatusDomain']),
        'citationId': !exists(json, 'citationId') ? undefined : json['citationId'],
        'citationIssueDate': !exists(json, 'citationIssueDate') ? undefined : PureDateFromJSON(json['citationIssueDate']),
        'citationIssueDateUTC': !exists(json, 'citationIssueDateUTC') ? undefined : (new Date(json['citationIssueDateUTC'])),
        'countyName': !exists(json, 'countyName') ? undefined : json['countyName'],
        'courtDate': !exists(json, 'courtDate') ? undefined : (new Date(json['courtDate'])),
        'courtName': !exists(json, 'courtName') ? undefined : json['courtName'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'involvesAccident': !exists(json, 'involvesAccident') ? undefined : json['involvesAccident'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'legalFeeInCents': !exists(json, 'legalFeeInCents') ? undefined : json['legalFeeInCents'],
        'resolutionDateUtc': !exists(json, 'resolutionDateUtc') ? undefined : (new Date(json['resolutionDateUtc'])),
        'ticketImageUrl': !exists(json, 'ticketImageUrl') ? undefined : json['ticketImageUrl'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'violationCount': !exists(json, 'violationCount') ? undefined : json['violationCount'],
    };
}

export function CaseSummaryDomainToJSON(value?: CaseSummaryDomain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingConfirmedDate': value.bookingConfirmedDate === undefined ? undefined : (value.bookingConfirmedDate.toISOString()),
        'caseDecisionStatus': value.caseDecisionStatus,
        'caseId': value.caseId,
        'caseStatusDomain': CaseStatusDomainToJSON(value.caseStatusDomain),
        'citationId': value.citationId,
        'citationIssueDate': PureDateToJSON(value.citationIssueDate),
        'citationIssueDateUTC': value.citationIssueDateUTC === undefined ? undefined : (value.citationIssueDateUTC.toISOString()),
        'countyName': value.countyName,
        'courtDate': value.courtDate === undefined ? undefined : (value.courtDate.toISOString()),
        'courtName': value.courtName,
        'firstName': value.firstName,
        'involvesAccident': value.involvesAccident,
        'lastName': value.lastName,
        'legalFeeInCents': value.legalFeeInCents,
        'resolutionDateUtc': value.resolutionDateUtc === undefined ? undefined : (value.resolutionDateUtc.toISOString()),
        'ticketImageUrl': value.ticketImageUrl,
        'userId': value.userId,
        'violationCount': value.violationCount,
    };
}

/**
* @export
* @enum {string}
*/
export enum CaseSummaryDomainCaseDecisionStatusEnum {
    ACCEPTED = 'ACCEPTED',
    CREATED = 'CREATED',
    DECLINED = 'DECLINED',
    EXPIRED = 'EXPIRED',
    PENDING = 'PENDING',
    REMATCHED = 'REMATCHED',
    REMATCHEDREFERRAL = 'REMATCHED_REFERRAL'
}


