/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GhostUserResponse
 */
export interface GhostUserResponse {
    /**
     * 
     * @type {Date}
     * @memberof GhostUserResponse
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof GhostUserResponse
     */
    driverLicenseNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUserResponse
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUserResponse
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUserResponse
     */
    gender?: GhostUserResponseGenderEnum;
    /**
     * 
     * @type {string}
     * @memberof GhostUserResponse
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof GhostUserResponse
     */
    race?: GhostUserResponseRaceEnum;
    /**
     * 
     * @type {number}
     * @memberof GhostUserResponse
     */
    userId?: number;
}

export function GhostUserResponseFromJSON(json: any): GhostUserResponse {
    return GhostUserResponseFromJSONTyped(json, false);
}

export function GhostUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GhostUserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dob': !exists(json, 'dob') ? undefined : (new Date(json['dob'])),
        'driverLicenseNumber': !exists(json, 'driverLicenseNumber') ? undefined : json['driverLicenseNumber'],
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'race': !exists(json, 'race') ? undefined : json['race'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function GhostUserResponseToJSON(value?: GhostUserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dob': value.dob === undefined ? undefined : (value.dob.toISOString()),
        'driverLicenseNumber': value.driverLicenseNumber,
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'gender': value.gender,
        'lastname': value.lastname,
        'race': value.race,
        'userId': value.userId,
    };
}

/**
* @export
* @enum {string}
*/
export enum GhostUserResponseGenderEnum {
    FEMALE = 'FEMALE',
    MALE = 'MALE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    NOTLISTED = 'NOT_LISTED',
    UNVERIFIED = 'UNVERIFIED',
    X = 'X'
}
/**
* @export
* @enum {string}
*/
export enum GhostUserResponseRaceEnum {
    ASIAN = 'ASIAN',
    BLACK = 'BLACK',
    HISPANIC = 'HISPANIC',
    MIDDLEEASTERN = 'MIDDLE_EASTERN',
    NATIVE = 'NATIVE',
    NOTAVAILABLE = 'NOT_AVAILABLE',
    PACIFICISLANDER = 'PACIFIC_ISLANDER',
    TWOORMORE = 'TWO_OR_MORE',
    UNKNOWN = 'UNKNOWN',
    UNVERIFIED = 'UNVERIFIED',
    WHITE = 'WHITE'
}


