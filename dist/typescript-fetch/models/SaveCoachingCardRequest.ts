/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CoachingLinks,
    CoachingLinksFromJSON,
    CoachingLinksFromJSONTyped,
    CoachingLinksToJSON,
    SaveCoachingCardUserRequest,
    SaveCoachingCardUserRequestFromJSON,
    SaveCoachingCardUserRequestFromJSONTyped,
    SaveCoachingCardUserRequestToJSON,
} from './';

/**
 * 
 * @export
 * @interface SaveCoachingCardRequest
 */
export interface SaveCoachingCardRequest {
    /**
     * 
     * @type {number}
     * @memberof SaveCoachingCardRequest
     */
    coachingCardCategoryId?: number;
    /**
     * 
     * @type {number}
     * @memberof SaveCoachingCardRequest
     */
    coachingCardSubcategoryId?: number;
    /**
     * 
     * @type {string}
     * @memberof SaveCoachingCardRequest
     */
    coachingCardType?: SaveCoachingCardRequestCoachingCardTypeEnum;
    /**
     * 
     * @type {Array<SaveCoachingCardUserRequest>}
     * @memberof SaveCoachingCardRequest
     */
    coachingCardUserRequest?: Array<SaveCoachingCardUserRequest>;
    /**
     * 
     * @type {CoachingLinks}
     * @memberof SaveCoachingCardRequest
     */
    coachingLinks?: CoachingLinks;
    /**
     * 
     * @type {string}
     * @memberof SaveCoachingCardRequest
     */
    coachingText?: string;
}

export function SaveCoachingCardRequestFromJSON(json: any): SaveCoachingCardRequest {
    return SaveCoachingCardRequestFromJSONTyped(json, false);
}

export function SaveCoachingCardRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveCoachingCardRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coachingCardCategoryId': !exists(json, 'coachingCardCategoryId') ? undefined : json['coachingCardCategoryId'],
        'coachingCardSubcategoryId': !exists(json, 'coachingCardSubcategoryId') ? undefined : json['coachingCardSubcategoryId'],
        'coachingCardType': !exists(json, 'coachingCardType') ? undefined : json['coachingCardType'],
        'coachingCardUserRequest': !exists(json, 'coachingCardUserRequest') ? undefined : ((json['coachingCardUserRequest'] as Array<any>).map(SaveCoachingCardUserRequestFromJSON)),
        'coachingLinks': !exists(json, 'coachingLinks') ? undefined : CoachingLinksFromJSON(json['coachingLinks']),
        'coachingText': !exists(json, 'coachingText') ? undefined : json['coachingText'],
    };
}

export function SaveCoachingCardRequestToJSON(value?: SaveCoachingCardRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coachingCardCategoryId': value.coachingCardCategoryId,
        'coachingCardSubcategoryId': value.coachingCardSubcategoryId,
        'coachingCardType': value.coachingCardType,
        'coachingCardUserRequest': value.coachingCardUserRequest === undefined ? undefined : ((value.coachingCardUserRequest as Array<any>).map(SaveCoachingCardUserRequestToJSON)),
        'coachingLinks': CoachingLinksToJSON(value.coachingLinks),
        'coachingText': value.coachingText,
    };
}

/**
* @export
* @enum {string}
*/
export enum SaveCoachingCardRequestCoachingCardTypeEnum {
    COACHING = 'COACHING',
    KUDOS = 'KUDOS'
}


