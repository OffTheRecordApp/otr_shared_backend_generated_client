/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AggregateBySource,
    AggregateBySourceFromJSON,
    AggregateBySourceFromJSONTyped,
    AggregateBySourceToJSON,
} from './';

/**
 * 
 * @export
 * @interface AggregateRatingMetrics
 */
export interface AggregateRatingMetrics {
    /**
     * 
     * @type {Array<AggregateBySource>}
     * @memberof AggregateRatingMetrics
     */
    aggregatesBySource?: Array<AggregateBySource>;
    /**
     * 
     * @type {number}
     * @memberof AggregateRatingMetrics
     */
    overallRating?: number;
    /**
     * 
     * @type {number}
     * @memberof AggregateRatingMetrics
     */
    totalRatingCount?: number;
    /**
     * 
     * @type {number}
     * @memberof AggregateRatingMetrics
     */
    totalReviewCount?: number;
}

export function AggregateRatingMetricsFromJSON(json: any): AggregateRatingMetrics {
    return AggregateRatingMetricsFromJSONTyped(json, false);
}

export function AggregateRatingMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregateRatingMetrics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aggregatesBySource': !exists(json, 'aggregatesBySource') ? undefined : ((json['aggregatesBySource'] as Array<any>).map(AggregateBySourceFromJSON)),
        'overallRating': !exists(json, 'overallRating') ? undefined : json['overallRating'],
        'totalRatingCount': !exists(json, 'totalRatingCount') ? undefined : json['totalRatingCount'],
        'totalReviewCount': !exists(json, 'totalReviewCount') ? undefined : json['totalReviewCount'],
    };
}

export function AggregateRatingMetricsToJSON(value?: AggregateRatingMetrics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aggregatesBySource': value.aggregatesBySource === undefined ? undefined : ((value.aggregatesBySource as Array<any>).map(AggregateBySourceToJSON)),
        'overallRating': value.overallRating,
        'totalRatingCount': value.totalRatingCount,
        'totalReviewCount': value.totalReviewCount,
    };
}


