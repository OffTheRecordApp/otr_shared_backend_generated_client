/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseSummaryDomain,
    CaseSummaryDomainFromJSON,
    CaseSummaryDomainFromJSONTyped,
    CaseSummaryDomainToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetLawfirmSummaryCasesResponse
 */
export interface GetLawfirmSummaryCasesResponse {
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    activeCasesCount?: number;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    bookedCasesCount?: number;
    /**
     * 
     * @type {Array<CaseSummaryDomain>}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    cases?: Array<CaseSummaryDomain>;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    numMatchingCases?: number;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    pastDueCasesCount?: number;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    paymentPlanCasesCount?: number;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    pendingCasesCount?: number;
    /**
     * 
     * @type {number}
     * @memberof GetLawfirmSummaryCasesResponse
     */
    percentCasesWithPaymentPlan?: number;
}

export function GetLawfirmSummaryCasesResponseFromJSON(json: any): GetLawfirmSummaryCasesResponse {
    return GetLawfirmSummaryCasesResponseFromJSONTyped(json, false);
}

export function GetLawfirmSummaryCasesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetLawfirmSummaryCasesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activeCasesCount': !exists(json, 'activeCasesCount') ? undefined : json['activeCasesCount'],
        'bookedCasesCount': !exists(json, 'bookedCasesCount') ? undefined : json['bookedCasesCount'],
        'cases': !exists(json, 'cases') ? undefined : ((json['cases'] as Array<any>).map(CaseSummaryDomainFromJSON)),
        'numMatchingCases': !exists(json, 'numMatchingCases') ? undefined : json['numMatchingCases'],
        'pastDueCasesCount': !exists(json, 'pastDueCasesCount') ? undefined : json['pastDueCasesCount'],
        'paymentPlanCasesCount': !exists(json, 'paymentPlanCasesCount') ? undefined : json['paymentPlanCasesCount'],
        'pendingCasesCount': !exists(json, 'pendingCasesCount') ? undefined : json['pendingCasesCount'],
        'percentCasesWithPaymentPlan': !exists(json, 'percentCasesWithPaymentPlan') ? undefined : json['percentCasesWithPaymentPlan'],
    };
}

export function GetLawfirmSummaryCasesResponseToJSON(value?: GetLawfirmSummaryCasesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activeCasesCount': value.activeCasesCount,
        'bookedCasesCount': value.bookedCasesCount,
        'cases': value.cases === undefined ? undefined : ((value.cases as Array<any>).map(CaseSummaryDomainToJSON)),
        'numMatchingCases': value.numMatchingCases,
        'pastDueCasesCount': value.pastDueCasesCount,
        'paymentPlanCasesCount': value.paymentPlanCasesCount,
        'pendingCasesCount': value.pendingCasesCount,
        'percentCasesWithPaymentPlan': value.percentCasesWithPaymentPlan,
    };
}


