/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StripeApplicationFeeSyncResults,
    StripeApplicationFeeSyncResultsFromJSON,
    StripeApplicationFeeSyncResultsFromJSONTyped,
    StripeApplicationFeeSyncResultsToJSON,
    StripeFieldVerification,
    StripeFieldVerificationFromJSON,
    StripeFieldVerificationFromJSONTyped,
    StripeFieldVerificationToJSON,
    StripeRefundSyncResults,
    StripeRefundSyncResultsFromJSON,
    StripeRefundSyncResultsFromJSONTyped,
    StripeRefundSyncResultsToJSON,
    StripeTransferSyncResults,
    StripeTransferSyncResultsFromJSON,
    StripeTransferSyncResultsFromJSONTyped,
    StripeTransferSyncResultsToJSON,
} from './';

/**
 * 
 * @export
 * @interface StripeChargeSyncResults
 */
export interface StripeChargeSyncResults {
    /**
     * 
     * @type {Array<StripeApplicationFeeSyncResults>}
     * @memberof StripeChargeSyncResults
     */
    applicationFees?: Array<StripeApplicationFeeSyncResults>;
    /**
     * 
     * @type {Array<StripeFieldVerification>}
     * @memberof StripeChargeSyncResults
     */
    fields?: Array<StripeFieldVerification>;
    /**
     * 
     * @type {string}
     * @memberof StripeChargeSyncResults
     */
    id?: string;
    /**
     * 
     * @type {Array<StripeRefundSyncResults>}
     * @memberof StripeChargeSyncResults
     */
    refunds?: Array<StripeRefundSyncResults>;
    /**
     * 
     * @type {Array<StripeTransferSyncResults>}
     * @memberof StripeChargeSyncResults
     */
    transfers?: Array<StripeTransferSyncResults>;
    /**
     * 
     * @type {string}
     * @memberof StripeChargeSyncResults
     */
    verificationMessage?: string;
}

export function StripeChargeSyncResultsFromJSON(json: any): StripeChargeSyncResults {
    return StripeChargeSyncResultsFromJSONTyped(json, false);
}

export function StripeChargeSyncResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StripeChargeSyncResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'applicationFees': !exists(json, 'applicationFees') ? undefined : ((json['applicationFees'] as Array<any>).map(StripeApplicationFeeSyncResultsFromJSON)),
        'fields': !exists(json, 'fields') ? undefined : ((json['fields'] as Array<any>).map(StripeFieldVerificationFromJSON)),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'refunds': !exists(json, 'refunds') ? undefined : ((json['refunds'] as Array<any>).map(StripeRefundSyncResultsFromJSON)),
        'transfers': !exists(json, 'transfers') ? undefined : ((json['transfers'] as Array<any>).map(StripeTransferSyncResultsFromJSON)),
        'verificationMessage': !exists(json, 'verificationMessage') ? undefined : json['verificationMessage'],
    };
}

export function StripeChargeSyncResultsToJSON(value?: StripeChargeSyncResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'applicationFees': value.applicationFees === undefined ? undefined : ((value.applicationFees as Array<any>).map(StripeApplicationFeeSyncResultsToJSON)),
        'fields': value.fields === undefined ? undefined : ((value.fields as Array<any>).map(StripeFieldVerificationToJSON)),
        'id': value.id,
        'refunds': value.refunds === undefined ? undefined : ((value.refunds as Array<any>).map(StripeRefundSyncResultsToJSON)),
        'transfers': value.transfers === undefined ? undefined : ((value.transfers as Array<any>).map(StripeTransferSyncResultsToJSON)),
        'verificationMessage': value.verificationMessage,
    };
}


