/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserDomain,
    UserDomainFromJSON,
    UserDomainFromJSONTyped,
    UserDomainToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetCurrentUserResponse
 */
export interface GetCurrentUserResponse {
    /**
     * 
     * @type {boolean}
     * @memberof GetCurrentUserResponse
     */
    isUserAuthenticated?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCurrentUserResponse
     */
    isUserLoggedIn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetCurrentUserResponse
     */
    isUserRememberMeAuthenticated?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetCurrentUserResponse
     */
    jwt?: string;
    /**
     * 
     * @type {string}
     * @memberof GetCurrentUserResponse
     */
    redirectUrl?: string;
    /**
     * 
     * @type {UserDomain}
     * @memberof GetCurrentUserResponse
     */
    user?: UserDomain;
}

export function GetCurrentUserResponseFromJSON(json: any): GetCurrentUserResponse {
    return GetCurrentUserResponseFromJSONTyped(json, false);
}

export function GetCurrentUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCurrentUserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isUserAuthenticated': !exists(json, 'isUserAuthenticated') ? undefined : json['isUserAuthenticated'],
        'isUserLoggedIn': !exists(json, 'isUserLoggedIn') ? undefined : json['isUserLoggedIn'],
        'isUserRememberMeAuthenticated': !exists(json, 'isUserRememberMeAuthenticated') ? undefined : json['isUserRememberMeAuthenticated'],
        'jwt': !exists(json, 'jwt') ? undefined : json['jwt'],
        'redirectUrl': !exists(json, 'redirectUrl') ? undefined : json['redirectUrl'],
        'user': !exists(json, 'user') ? undefined : UserDomainFromJSON(json['user']),
    };
}

export function GetCurrentUserResponseToJSON(value?: GetCurrentUserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isUserAuthenticated': value.isUserAuthenticated,
        'isUserLoggedIn': value.isUserLoggedIn,
        'isUserRememberMeAuthenticated': value.isUserRememberMeAuthenticated,
        'jwt': value.jwt,
        'redirectUrl': value.redirectUrl,
        'user': UserDomainToJSON(value.user),
    };
}


