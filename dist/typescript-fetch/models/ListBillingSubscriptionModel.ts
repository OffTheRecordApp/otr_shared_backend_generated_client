/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ListBillingSubscriptionModel
 */
export interface ListBillingSubscriptionModel {
    /**
     * 
     * @type {string}
     * @memberof ListBillingSubscriptionModel
     */
    billingInterval?: ListBillingSubscriptionModelBillingIntervalEnum;
    /**
     * 
     * @type {Date}
     * @memberof ListBillingSubscriptionModel
     */
    currentPeriodEndDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ListBillingSubscriptionModel
     */
    lastPastDueDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof ListBillingSubscriptionModel
     */
    productName?: string;
    /**
     * 
     * @type {Date}
     * @memberof ListBillingSubscriptionModel
     */
    startDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof ListBillingSubscriptionModel
     */
    subscriptionId?: string;
    /**
     * 
     * @type {string}
     * @memberof ListBillingSubscriptionModel
     */
    subscriptionStatus?: ListBillingSubscriptionModelSubscriptionStatusEnum;
}

export function ListBillingSubscriptionModelFromJSON(json: any): ListBillingSubscriptionModel {
    return ListBillingSubscriptionModelFromJSONTyped(json, false);
}

export function ListBillingSubscriptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListBillingSubscriptionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'billingInterval': !exists(json, 'billingInterval') ? undefined : json['billingInterval'],
        'currentPeriodEndDate': !exists(json, 'currentPeriodEndDate') ? undefined : (new Date(json['currentPeriodEndDate'])),
        'lastPastDueDateUtc': !exists(json, 'lastPastDueDateUtc') ? undefined : (new Date(json['lastPastDueDateUtc'])),
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'startDateUtc': !exists(json, 'startDateUtc') ? undefined : (new Date(json['startDateUtc'])),
        'subscriptionId': !exists(json, 'subscriptionId') ? undefined : json['subscriptionId'],
        'subscriptionStatus': !exists(json, 'subscriptionStatus') ? undefined : json['subscriptionStatus'],
    };
}

export function ListBillingSubscriptionModelToJSON(value?: ListBillingSubscriptionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'billingInterval': value.billingInterval,
        'currentPeriodEndDate': value.currentPeriodEndDate === undefined ? undefined : (value.currentPeriodEndDate.toISOString()),
        'lastPastDueDateUtc': value.lastPastDueDateUtc === undefined ? undefined : (value.lastPastDueDateUtc.toISOString()),
        'productName': value.productName,
        'startDateUtc': value.startDateUtc === undefined ? undefined : (value.startDateUtc.toISOString()),
        'subscriptionId': value.subscriptionId,
        'subscriptionStatus': value.subscriptionStatus,
    };
}

/**
* @export
* @enum {string}
*/
export enum ListBillingSubscriptionModelBillingIntervalEnum {
    DAILY = 'DAILY',
    MONTHLY = 'MONTHLY',
    QUARTERLY = 'QUARTERLY',
    WEEKLY = 'WEEKLY',
    YEARLY = 'YEARLY'
}
/**
* @export
* @enum {string}
*/
export enum ListBillingSubscriptionModelSubscriptionStatusEnum {
    ACTIVE = 'ACTIVE',
    CANCELED = 'CANCELED',
    INCOMPLETE = 'INCOMPLETE',
    INCOMPLETEEXPIRED = 'INCOMPLETE_EXPIRED',
    INTRIALPERIOD = 'IN_TRIAL_PERIOD',
    PASTDUE = 'PAST_DUE',
    UNKNOWN = 'UNKNOWN',
    UNPAID = 'UNPAID'
}


