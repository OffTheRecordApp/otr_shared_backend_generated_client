/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CaseLineItemsSummary
 */
export interface CaseLineItemsSummary {
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    caseBaseCostInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    clientTotalCostInCents?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CaseLineItemsSummary
     */
    hasPredictedOrAdjustedFee?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmAssumedCostInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmCaseFees?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmEarningsForCase?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmRefcodeAdjustmentInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    lawfirmServiceChargeInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    otrEarnings?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    otrMarketingFeeChargedToLawfirm?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    otrRefcodeAdjustmentInCents?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    paymentProcessingFeeActual?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    paymentProcessingFeeChargedToLawfirm?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseLineItemsSummary
     */
    platformFee?: number;
}

export function CaseLineItemsSummaryFromJSON(json: any): CaseLineItemsSummary {
    return CaseLineItemsSummaryFromJSONTyped(json, false);
}

export function CaseLineItemsSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CaseLineItemsSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'caseBaseCostInCents': !exists(json, 'caseBaseCostInCents') ? undefined : json['caseBaseCostInCents'],
        'clientTotalCostInCents': !exists(json, 'clientTotalCostInCents') ? undefined : json['clientTotalCostInCents'],
        'hasPredictedOrAdjustedFee': !exists(json, 'hasPredictedOrAdjustedFee') ? undefined : json['hasPredictedOrAdjustedFee'],
        'lawfirmAssumedCostInCents': !exists(json, 'lawfirmAssumedCostInCents') ? undefined : json['lawfirmAssumedCostInCents'],
        'lawfirmCaseFees': !exists(json, 'lawfirmCaseFees') ? undefined : json['lawfirmCaseFees'],
        'lawfirmEarningsForCase': !exists(json, 'lawfirmEarningsForCase') ? undefined : json['lawfirmEarningsForCase'],
        'lawfirmRefcodeAdjustmentInCents': !exists(json, 'lawfirmRefcodeAdjustmentInCents') ? undefined : json['lawfirmRefcodeAdjustmentInCents'],
        'lawfirmServiceChargeInCents': !exists(json, 'lawfirmServiceChargeInCents') ? undefined : json['lawfirmServiceChargeInCents'],
        'otrEarnings': !exists(json, 'otrEarnings') ? undefined : json['otrEarnings'],
        'otrMarketingFeeChargedToLawfirm': !exists(json, 'otrMarketingFeeChargedToLawfirm') ? undefined : json['otrMarketingFeeChargedToLawfirm'],
        'otrRefcodeAdjustmentInCents': !exists(json, 'otrRefcodeAdjustmentInCents') ? undefined : json['otrRefcodeAdjustmentInCents'],
        'paymentProcessingFeeActual': !exists(json, 'paymentProcessingFeeActual') ? undefined : json['paymentProcessingFeeActual'],
        'paymentProcessingFeeChargedToLawfirm': !exists(json, 'paymentProcessingFeeChargedToLawfirm') ? undefined : json['paymentProcessingFeeChargedToLawfirm'],
        'platformFee': !exists(json, 'platformFee') ? undefined : json['platformFee'],
    };
}

export function CaseLineItemsSummaryToJSON(value?: CaseLineItemsSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'caseBaseCostInCents': value.caseBaseCostInCents,
        'clientTotalCostInCents': value.clientTotalCostInCents,
        'hasPredictedOrAdjustedFee': value.hasPredictedOrAdjustedFee,
        'lawfirmAssumedCostInCents': value.lawfirmAssumedCostInCents,
        'lawfirmCaseFees': value.lawfirmCaseFees,
        'lawfirmEarningsForCase': value.lawfirmEarningsForCase,
        'lawfirmRefcodeAdjustmentInCents': value.lawfirmRefcodeAdjustmentInCents,
        'lawfirmServiceChargeInCents': value.lawfirmServiceChargeInCents,
        'otrEarnings': value.otrEarnings,
        'otrMarketingFeeChargedToLawfirm': value.otrMarketingFeeChargedToLawfirm,
        'otrRefcodeAdjustmentInCents': value.otrRefcodeAdjustmentInCents,
        'paymentProcessingFeeActual': value.paymentProcessingFeeActual,
        'paymentProcessingFeeChargedToLawfirm': value.paymentProcessingFeeChargedToLawfirm,
        'platformFee': value.platformFee,
    };
}


