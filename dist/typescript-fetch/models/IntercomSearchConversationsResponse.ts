/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IntercomConversationResponse,
    IntercomConversationResponseFromJSON,
    IntercomConversationResponseFromJSONTyped,
    IntercomConversationResponseToJSON,
    IntercomPages,
    IntercomPagesFromJSON,
    IntercomPagesFromJSONTyped,
    IntercomPagesToJSON,
} from './';

/**
 * 
 * @export
 * @interface IntercomSearchConversationsResponse
 */
export interface IntercomSearchConversationsResponse {
    /**
     * 
     * @type {Array<IntercomConversationResponse>}
     * @memberof IntercomSearchConversationsResponse
     */
    conversations?: Array<IntercomConversationResponse>;
    /**
     * 
     * @type {IntercomPages}
     * @memberof IntercomSearchConversationsResponse
     */
    pages?: IntercomPages;
    /**
     * 
     * @type {number}
     * @memberof IntercomSearchConversationsResponse
     */
    totalCount?: number;
}

export function IntercomSearchConversationsResponseFromJSON(json: any): IntercomSearchConversationsResponse {
    return IntercomSearchConversationsResponseFromJSONTyped(json, false);
}

export function IntercomSearchConversationsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntercomSearchConversationsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conversations': !exists(json, 'conversations') ? undefined : ((json['conversations'] as Array<any>).map(IntercomConversationResponseFromJSON)),
        'pages': !exists(json, 'pages') ? undefined : IntercomPagesFromJSON(json['pages']),
        'totalCount': !exists(json, 'total_count') ? undefined : json['total_count'],
    };
}

export function IntercomSearchConversationsResponseToJSON(value?: IntercomSearchConversationsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conversations': value.conversations === undefined ? undefined : ((value.conversations as Array<any>).map(IntercomConversationResponseToJSON)),
        'pages': IntercomPagesToJSON(value.pages),
        'total_count': value.totalCount,
    };
}


