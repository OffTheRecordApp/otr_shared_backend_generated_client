/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
export function ListBillingSubscriptionModelFromJSON(json) {
    return ListBillingSubscriptionModelFromJSONTyped(json, false);
}
export function ListBillingSubscriptionModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'billingInterval': !exists(json, 'billingInterval') ? undefined : json['billingInterval'],
        'currentPeriodEndDate': !exists(json, 'currentPeriodEndDate') ? undefined : (new Date(json['currentPeriodEndDate'])),
        'lastPastDueDateUtc': !exists(json, 'lastPastDueDateUtc') ? undefined : (new Date(json['lastPastDueDateUtc'])),
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'startDateUtc': !exists(json, 'startDateUtc') ? undefined : (new Date(json['startDateUtc'])),
        'subscriptionId': !exists(json, 'subscriptionId') ? undefined : json['subscriptionId'],
        'subscriptionStatus': !exists(json, 'subscriptionStatus') ? undefined : json['subscriptionStatus'],
    };
}
export function ListBillingSubscriptionModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'billingInterval': value.billingInterval,
        'currentPeriodEndDate': value.currentPeriodEndDate === undefined ? undefined : (value.currentPeriodEndDate.toISOString()),
        'lastPastDueDateUtc': value.lastPastDueDateUtc === undefined ? undefined : (value.lastPastDueDateUtc.toISOString()),
        'productName': value.productName,
        'startDateUtc': value.startDateUtc === undefined ? undefined : (value.startDateUtc.toISOString()),
        'subscriptionId': value.subscriptionId,
        'subscriptionStatus': value.subscriptionStatus,
    };
}
/**
* @export
* @enum {string}
*/
export var ListBillingSubscriptionModelBillingIntervalEnum;
(function (ListBillingSubscriptionModelBillingIntervalEnum) {
    ListBillingSubscriptionModelBillingIntervalEnum["DAILY"] = "DAILY";
    ListBillingSubscriptionModelBillingIntervalEnum["MONTHLY"] = "MONTHLY";
    ListBillingSubscriptionModelBillingIntervalEnum["QUARTERLY"] = "QUARTERLY";
    ListBillingSubscriptionModelBillingIntervalEnum["WEEKLY"] = "WEEKLY";
    ListBillingSubscriptionModelBillingIntervalEnum["YEARLY"] = "YEARLY";
})(ListBillingSubscriptionModelBillingIntervalEnum || (ListBillingSubscriptionModelBillingIntervalEnum = {}));
/**
* @export
* @enum {string}
*/
export var ListBillingSubscriptionModelSubscriptionStatusEnum;
(function (ListBillingSubscriptionModelSubscriptionStatusEnum) {
    ListBillingSubscriptionModelSubscriptionStatusEnum["ACTIVE"] = "ACTIVE";
    ListBillingSubscriptionModelSubscriptionStatusEnum["CANCELED"] = "CANCELED";
    ListBillingSubscriptionModelSubscriptionStatusEnum["COMPLETE"] = "COMPLETE";
    ListBillingSubscriptionModelSubscriptionStatusEnum["INCOMPLETE"] = "INCOMPLETE";
    ListBillingSubscriptionModelSubscriptionStatusEnum["INCOMPLETEEXPIRED"] = "INCOMPLETE_EXPIRED";
    ListBillingSubscriptionModelSubscriptionStatusEnum["INTRIALPERIOD"] = "IN_TRIAL_PERIOD";
    ListBillingSubscriptionModelSubscriptionStatusEnum["PASTDUE"] = "PAST_DUE";
    ListBillingSubscriptionModelSubscriptionStatusEnum["UNKNOWN"] = "UNKNOWN";
    ListBillingSubscriptionModelSubscriptionStatusEnum["UNPAID"] = "UNPAID";
})(ListBillingSubscriptionModelSubscriptionStatusEnum || (ListBillingSubscriptionModelSubscriptionStatusEnum = {}));
