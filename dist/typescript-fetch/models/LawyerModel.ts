/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LawyerLicenseModel,
    LawyerLicenseModelFromJSON,
    LawyerLicenseModelFromJSONTyped,
    LawyerLicenseModelToJSON,
    PhoneNumberDomain,
    PhoneNumberDomainFromJSON,
    PhoneNumberDomainFromJSONTyped,
    PhoneNumberDomainToJSON,
    Timestamp,
    TimestampFromJSON,
    TimestampFromJSONTyped,
    TimestampToJSON,
} from './';

/**
 * 
 * @export
 * @interface LawyerModel
 */
export interface LawyerModel {
    /**
     * 
     * @type {Timestamp}
     * @memberof LawyerModel
     */
    creationDateUtc?: Timestamp;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    firstname?: string;
    /**
     * 
     * @type {boolean}
     * @memberof LawyerModel
     */
    isEmailConfirmed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LawyerModel
     */
    isLawfirmAccessGranted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LawyerModel
     */
    isUserAccountEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    jobTitle?: LawyerModelJobTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    lawSchool?: string;
    /**
     * 
     * @type {number}
     * @memberof LawyerModel
     */
    lawfirmId?: number;
    /**
     * 
     * @type {Date}
     * @memberof LawyerModel
     */
    licensedDateUtc?: Date;
    /**
     * 
     * @type {Array<LawyerLicenseModel>}
     * @memberof LawyerModel
     */
    licenses?: Array<LawyerLicenseModel>;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    otherJobTitle?: string;
    /**
     * 
     * @type {Array<PhoneNumberDomain>}
     * @memberof LawyerModel
     */
    phoneNumbers?: Array<PhoneNumberDomain>;
    /**
     * 
     * @type {string}
     * @memberof LawyerModel
     */
    profilePicture?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LawyerModel
     */
    roleTypes?: Array<LawyerModelRoleTypesEnum>;
    /**
     * 
     * @type {number}
     * @memberof LawyerModel
     */
    userId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof LawyerModel
     */
    visibleOnStorefront?: boolean;
}

export function LawyerModelFromJSON(json: any): LawyerModel {
    return LawyerModelFromJSONTyped(json, false);
}

export function LawyerModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LawyerModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creationDateUtc': !exists(json, 'creationDateUtc') ? undefined : TimestampFromJSON(json['creationDateUtc']),
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'isEmailConfirmed': !exists(json, 'isEmailConfirmed') ? undefined : json['isEmailConfirmed'],
        'isLawfirmAccessGranted': !exists(json, 'isLawfirmAccessGranted') ? undefined : json['isLawfirmAccessGranted'],
        'isUserAccountEnabled': !exists(json, 'isUserAccountEnabled') ? undefined : json['isUserAccountEnabled'],
        'jobTitle': !exists(json, 'jobTitle') ? undefined : json['jobTitle'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'lawSchool': !exists(json, 'lawSchool') ? undefined : json['lawSchool'],
        'lawfirmId': !exists(json, 'lawfirmId') ? undefined : json['lawfirmId'],
        'licensedDateUtc': !exists(json, 'licensedDateUtc') ? undefined : (new Date(json['licensedDateUtc'])),
        'licenses': !exists(json, 'licenses') ? undefined : ((json['licenses'] as Array<any>).map(LawyerLicenseModelFromJSON)),
        'otherJobTitle': !exists(json, 'otherJobTitle') ? undefined : json['otherJobTitle'],
        'phoneNumbers': !exists(json, 'phoneNumbers') ? undefined : ((json['phoneNumbers'] as Array<any>).map(PhoneNumberDomainFromJSON)),
        'profilePicture': !exists(json, 'profilePicture') ? undefined : json['profilePicture'],
        'roleTypes': !exists(json, 'roleTypes') ? undefined : json['roleTypes'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'visibleOnStorefront': !exists(json, 'visibleOnStorefront') ? undefined : json['visibleOnStorefront'],
    };
}

export function LawyerModelToJSON(value?: LawyerModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creationDateUtc': TimestampToJSON(value.creationDateUtc),
        'emailAddress': value.emailAddress,
        'firstname': value.firstname,
        'isEmailConfirmed': value.isEmailConfirmed,
        'isLawfirmAccessGranted': value.isLawfirmAccessGranted,
        'isUserAccountEnabled': value.isUserAccountEnabled,
        'jobTitle': value.jobTitle,
        'lastname': value.lastname,
        'lawSchool': value.lawSchool,
        'lawfirmId': value.lawfirmId,
        'licensedDateUtc': value.licensedDateUtc === undefined ? undefined : (value.licensedDateUtc.toISOString()),
        'licenses': value.licenses === undefined ? undefined : ((value.licenses as Array<any>).map(LawyerLicenseModelToJSON)),
        'otherJobTitle': value.otherJobTitle,
        'phoneNumbers': value.phoneNumbers === undefined ? undefined : ((value.phoneNumbers as Array<any>).map(PhoneNumberDomainToJSON)),
        'profilePicture': value.profilePicture,
        'roleTypes': value.roleTypes,
        'userId': value.userId,
        'visibleOnStorefront': value.visibleOnStorefront,
    };
}

/**
* @export
* @enum {string}
*/
export enum LawyerModelJobTitleEnum {
    ACCOUNTANT = 'ACCOUNTANT',
    ATTORNEY = 'ATTORNEY',
    ATTORNEYASSOCIATE = 'ATTORNEY_ASSOCIATE',
    ATTORNEYCOUNSEL = 'ATTORNEY_COUNSEL',
    ATTORNEYMANAGINGPARTNER = 'ATTORNEY_MANAGING_PARTNER',
    ATTORNEYPARTNER = 'ATTORNEY_PARTNER',
    ATTORNEYSTAFF = 'ATTORNEY_STAFF',
    CUSTOMERSERVICEREP = 'CUSTOMER_SERVICE_REP',
    LEGALASSISTANT = 'LEGAL_ASSISTANT',
    LEGALINTERN = 'LEGAL_INTERN',
    LEGALSECRETARY = 'LEGAL_SECRETARY',
    OTHER = 'OTHER',
    PARALEGAL = 'PARALEGAL'
}
/**
* @export
* @enum {string}
*/
export enum LawyerModelRoleTypesEnum {
    ADMIN = 'ADMIN',
    DEFENDANT = 'DEFENDANT',
    LAWFIRMADMIN = 'LAWFIRM_ADMIN',
    LAWYER = 'LAWYER',
    PARTNER = 'PARTNER',
    UNKNOWN = 'UNKNOWN'
}


