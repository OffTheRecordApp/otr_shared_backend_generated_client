/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { NoteAuthorFromJSON, NoteAuthorToJSON, } from './';
export function NoteModelFromJSON(json) {
    return NoteModelFromJSONTyped(json, false);
}
export function NoteModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'author': !exists(json, 'author') ? undefined : NoteAuthorFromJSON(json['author']),
        'deletedDateUtc': !exists(json, 'deletedDateUtc') ? undefined : json['deletedDateUtc'],
        'isDeleted': !exists(json, 'isDeleted') ? undefined : json['isDeleted'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'noteId': !exists(json, 'noteId') ? undefined : json['noteId'],
        'noteType': !exists(json, 'noteType') ? undefined : json['noteType'],
        'postedDateUtc': !exists(json, 'postedDateUtc') ? undefined : json['postedDateUtc'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
    };
}
export function NoteModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'author': NoteAuthorToJSON(value.author),
        'deletedDateUtc': value.deletedDateUtc,
        'isDeleted': value.isDeleted,
        'note': value.note,
        'noteId': value.noteId,
        'noteType': value.noteType,
        'postedDateUtc': value.postedDateUtc,
        'referenceId': value.referenceId,
    };
}
/**
* @export
* @enum {string}
*/
export var NoteModelNoteTypeEnum;
(function (NoteModelNoteTypeEnum) {
    NoteModelNoteTypeEnum["CASE"] = "CASE";
    NoteModelNoteTypeEnum["LAWFIRM"] = "LAWFIRM";
    NoteModelNoteTypeEnum["PHONELEAD"] = "PHONE_LEAD";
    NoteModelNoteTypeEnum["USER"] = "USER";
})(NoteModelNoteTypeEnum || (NoteModelNoteTypeEnum = {}));
