/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ZoneId,
    ZoneIdFromJSON,
    ZoneIdFromJSONTyped,
    ZoneIdToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserRegistrationStats
 */
export interface UserRegistrationStats {
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof UserRegistrationStats
     */
    clientTypes?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof UserRegistrationStats
     */
    conversionRate?: number;
    /**
     * 
     * @type {Date}
     * @memberof UserRegistrationStats
     */
    endDate?: Date;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof UserRegistrationStats
     */
    loginProviders?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof UserRegistrationStats
     */
    newCustomerCount?: number;
    /**
     * 
     * @type {number}
     * @memberof UserRegistrationStats
     */
    numRegistrations?: number;
    /**
     * 
     * @type {Date}
     * @memberof UserRegistrationStats
     */
    startDate?: Date;
    /**
     * 
     * @type {ZoneId}
     * @memberof UserRegistrationStats
     */
    zoneId?: ZoneId;
}

export function UserRegistrationStatsFromJSON(json: any): UserRegistrationStats {
    return UserRegistrationStatsFromJSONTyped(json, false);
}

export function UserRegistrationStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserRegistrationStats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clientTypes': !exists(json, 'clientTypes') ? undefined : json['clientTypes'],
        'conversionRate': !exists(json, 'conversionRate') ? undefined : json['conversionRate'],
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'loginProviders': !exists(json, 'loginProviders') ? undefined : json['loginProviders'],
        'newCustomerCount': !exists(json, 'newCustomerCount') ? undefined : json['newCustomerCount'],
        'numRegistrations': !exists(json, 'numRegistrations') ? undefined : json['numRegistrations'],
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'zoneId': !exists(json, 'zoneId') ? undefined : ZoneIdFromJSON(json['zoneId']),
    };
}

export function UserRegistrationStatsToJSON(value?: UserRegistrationStats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clientTypes': value.clientTypes,
        'conversionRate': value.conversionRate,
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'loginProviders': value.loginProviders,
        'newCustomerCount': value.newCustomerCount,
        'numRegistrations': value.numRegistrations,
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'zoneId': ZoneIdToJSON(value.zoneId),
    };
}


