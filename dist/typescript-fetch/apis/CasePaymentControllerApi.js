/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { AuthorizeChargeForCasePaymentRequestToJSON, AuthorizeChargeForCasePaymentResponseFromJSON, CaptureChargeFromCasePaymentRequestToJSON, GetAvailablePaymentPlansResponseFromJSON, GetCasePaymentsResponseFromJSON, GetStripeChargeResponseFromJSON, GetStripeChargesResponseFromJSON, ListCostItemsForCustomerResponseFromJSON, SaveCasePaymentPlanRequestToJSON, ScheduleNewPaymentRequestToJSON, UpdateCasePaymentRequestToJSON, UpdatePaymentDueDateRequestToJSON, } from '../models';
/**
 *
 */
export class CasePaymentControllerApi extends runtime.BaseAPI {
    /**
     * authorizeChargeForCasePayment
     */
    authorizeChargeForCasePaymentUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling authorizeChargeForCasePaymentUsingPOST.');
            }
            if (requestParameters.casePaymentId === null || requestParameters.casePaymentId === undefined) {
                throw new runtime.RequiredError('casePaymentId', 'Required parameter requestParameters.casePaymentId was null or undefined when calling authorizeChargeForCasePaymentUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payments/{casePaymentId}/authorize`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"casePaymentId"}}`, encodeURIComponent(String(requestParameters.casePaymentId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: AuthorizeChargeForCasePaymentRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => AuthorizeChargeForCasePaymentResponseFromJSON(jsonValue));
        });
    }
    /**
     * authorizeChargeForCasePayment
     */
    authorizeChargeForCasePaymentUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.authorizeChargeForCasePaymentUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * captureChargeFromCasePayment
     */
    captureChargeFromCasePaymentUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling captureChargeFromCasePaymentUsingPOST.');
            }
            if (requestParameters.casePaymentId === null || requestParameters.casePaymentId === undefined) {
                throw new runtime.RequiredError('casePaymentId', 'Required parameter requestParameters.casePaymentId was null or undefined when calling captureChargeFromCasePaymentUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payments/{casePaymentId}/capture`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"casePaymentId"}}`, encodeURIComponent(String(requestParameters.casePaymentId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: CaptureChargeFromCasePaymentRequestToJSON(requestParameters.request),
            });
            return new runtime.TextApiResponse(response);
        });
    }
    /**
     * captureChargeFromCasePayment
     */
    captureChargeFromCasePaymentUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.captureChargeFromCasePaymentUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * deleteCasePayment
     */
    deleteCasePaymentUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling deleteCasePaymentUsingDELETE.');
            }
            if (requestParameters.casePaymentId === null || requestParameters.casePaymentId === undefined) {
                throw new runtime.RequiredError('casePaymentId', 'Required parameter requestParameters.casePaymentId was null or undefined when calling deleteCasePaymentUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payments/{casePaymentId}`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"casePaymentId"}}`, encodeURIComponent(String(requestParameters.casePaymentId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * deleteCasePayment
     */
    deleteCasePaymentUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteCasePaymentUsingDELETERaw(requestParameters);
        });
    }
    /**
     * generateCasePaymentPlan
     */
    generateCasePaymentPlanUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling generateCasePaymentPlanUsingGET.');
            }
            if (requestParameters.paymentPlanTypeId === null || requestParameters.paymentPlanTypeId === undefined) {
                throw new runtime.RequiredError('paymentPlanTypeId', 'Required parameter requestParameters.paymentPlanTypeId was null or undefined when calling generateCasePaymentPlanUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.period !== undefined) {
                queryParameters['period'] = requestParameters.period;
            }
            if (requestParameters.productId !== undefined) {
                queryParameters['productId'] = requestParameters.productId;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payment-plans/{paymentPlanTypeId}`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"paymentPlanTypeId"}}`, encodeURIComponent(String(requestParameters.paymentPlanTypeId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => ListCostItemsForCustomerResponseFromJSON(jsonValue));
        });
    }
    /**
     * generateCasePaymentPlan
     */
    generateCasePaymentPlanUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.generateCasePaymentPlanUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getAvailablePaymentPlans
     */
    getAvailablePaymentPlansUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getAvailablePaymentPlansUsingPOST.');
            }
            if (requestParameters.legalFeeInCents === null || requestParameters.legalFeeInCents === undefined) {
                throw new runtime.RequiredError('legalFeeInCents', 'Required parameter requestParameters.legalFeeInCents was null or undefined when calling getAvailablePaymentPlansUsingPOST.');
            }
            if (requestParameters.state === null || requestParameters.state === undefined) {
                throw new runtime.RequiredError('state', 'Required parameter requestParameters.state was null or undefined when calling getAvailablePaymentPlansUsingPOST.');
            }
            const queryParameters = {};
            if (requestParameters.legalFeeInCents !== undefined) {
                queryParameters['legalFeeInCents'] = requestParameters.legalFeeInCents;
            }
            if (requestParameters.state !== undefined) {
                queryParameters['state'] = requestParameters.state;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/payment-plans/{lawfirmId}/case-payment`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetAvailablePaymentPlansResponseFromJSON(jsonValue));
        });
    }
    /**
     * getAvailablePaymentPlans
     */
    getAvailablePaymentPlansUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getAvailablePaymentPlansUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getCasePayments
     */
    getCasePaymentsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getCasePaymentsUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payments`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetCasePaymentsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getCasePayments
     */
    getCasePaymentsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getCasePaymentsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getPaymentPlanOptions
     */
    getPaymentPlanOptionsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getPaymentPlanOptionsUsingGET.');
            }
            if (requestParameters.feeInCents === null || requestParameters.feeInCents === undefined) {
                throw new runtime.RequiredError('feeInCents', 'Required parameter requestParameters.feeInCents was null or undefined when calling getPaymentPlanOptionsUsingGET.');
            }
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getPaymentPlanOptionsUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.feeInCents !== undefined) {
                queryParameters['feeInCents'] = requestParameters.feeInCents;
            }
            if (requestParameters.lawfirmId !== undefined) {
                queryParameters['lawfirmId'] = requestParameters.lawfirmId;
            }
            if (requestParameters.userId !== undefined) {
                queryParameters['userId'] = requestParameters.userId;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payment-plans`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetAvailablePaymentPlansResponseFromJSON(jsonValue));
        });
    }
    /**
     * getPaymentPlanOptions
     */
    getPaymentPlanOptionsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getPaymentPlanOptionsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getStripeCharge
     */
    getStripeChargeUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getStripeChargeUsingGET.');
            }
            if (requestParameters.stripeChargeId === null || requestParameters.stripeChargeId === undefined) {
                throw new runtime.RequiredError('stripeChargeId', 'Required parameter requestParameters.stripeChargeId was null or undefined when calling getStripeChargeUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/charges/{stripeChargeId}`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"stripeChargeId"}}`, encodeURIComponent(String(requestParameters.stripeChargeId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetStripeChargeResponseFromJSON(jsonValue));
        });
    }
    /**
     * getStripeCharge
     */
    getStripeChargeUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getStripeChargeUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getStripeCharges
     */
    getStripeChargesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getStripeChargesUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/stripe-charges`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetStripeChargesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getStripeCharges
     */
    getStripeChargesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getStripeChargesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * listCostItemsForCustomer
     */
    listCostItemsForCustomerUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling listCostItemsForCustomerUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.period !== undefined) {
                queryParameters['period'] = requestParameters.period;
            }
            if (requestParameters.productId !== undefined) {
                queryParameters['productId'] = requestParameters.productId;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/customer/cost`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => ListCostItemsForCustomerResponseFromJSON(jsonValue));
        });
    }
    /**
     * listCostItemsForCustomer
     */
    listCostItemsForCustomerUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listCostItemsForCustomerUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * saveCasePaymentPlan
     */
    saveCasePaymentPlanUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling saveCasePaymentPlanUsingPOST.');
            }
            if (requestParameters.paymentPlanTypeId === null || requestParameters.paymentPlanTypeId === undefined) {
                throw new runtime.RequiredError('paymentPlanTypeId', 'Required parameter requestParameters.paymentPlanTypeId was null or undefined when calling saveCasePaymentPlanUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling saveCasePaymentPlanUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payment-plans/{paymentPlanTypeId}`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"paymentPlanTypeId"}}`, encodeURIComponent(String(requestParameters.paymentPlanTypeId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SaveCasePaymentPlanRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * saveCasePaymentPlan
     */
    saveCasePaymentPlanUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveCasePaymentPlanUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * scheduleNewPayment
     */
    scheduleNewPaymentUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling scheduleNewPaymentUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling scheduleNewPaymentUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payments`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ScheduleNewPaymentRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * scheduleNewPayment
     */
    scheduleNewPaymentUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.scheduleNewPaymentUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * updateCasePayment
     */
    updateCasePaymentUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.casePaymentId === null || requestParameters.casePaymentId === undefined) {
                throw new runtime.RequiredError('casePaymentId', 'Required parameter requestParameters.casePaymentId was null or undefined when calling updateCasePaymentUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateCasePaymentUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/payments/{casePaymentId}`.replace(`{${"casePaymentId"}}`, encodeURIComponent(String(requestParameters.casePaymentId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateCasePaymentRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updateCasePayment
     */
    updateCasePaymentUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updateCasePaymentUsingPUTRaw(requestParameters);
        });
    }
    /**
     * updatePaymentDueDate
     */
    updatePaymentDueDateUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.casePaymentId === null || requestParameters.casePaymentId === undefined) {
                throw new runtime.RequiredError('casePaymentId', 'Required parameter requestParameters.casePaymentId was null or undefined when calling updatePaymentDueDateUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updatePaymentDueDateUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/payments/{casePaymentId}/due-date`.replace(`{${"casePaymentId"}}`, encodeURIComponent(String(requestParameters.casePaymentId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdatePaymentDueDateRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updatePaymentDueDate
     */
    updatePaymentDueDateUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updatePaymentDueDateUsingPUTRaw(requestParameters);
        });
    }
    /**
     * updatePaymentRecipient
     */
    updatePaymentRecipientUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.casePaymentId === null || requestParameters.casePaymentId === undefined) {
                throw new runtime.RequiredError('casePaymentId', 'Required parameter requestParameters.casePaymentId was null or undefined when calling updatePaymentRecipientUsingPUT.');
            }
            if (requestParameters.recipient === null || requestParameters.recipient === undefined) {
                throw new runtime.RequiredError('recipient', 'Required parameter requestParameters.recipient was null or undefined when calling updatePaymentRecipientUsingPUT.');
            }
            const queryParameters = {};
            if (requestParameters.recipient !== undefined) {
                queryParameters['recipient'] = requestParameters.recipient;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/payments/{casePaymentId}/owner`.replace(`{${"casePaymentId"}}`, encodeURIComponent(String(requestParameters.casePaymentId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updatePaymentRecipient
     */
    updatePaymentRecipientUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updatePaymentRecipientUsingPUTRaw(requestParameters);
        });
    }
}
/**
    * @export
    * @enum {string}
    */
export var GenerateCasePaymentPlanUsingGETPeriodEnum;
(function (GenerateCasePaymentPlanUsingGETPeriodEnum) {
    GenerateCasePaymentPlanUsingGETPeriodEnum["DAILY"] = "DAILY";
    GenerateCasePaymentPlanUsingGETPeriodEnum["MONTHLY"] = "MONTHLY";
    GenerateCasePaymentPlanUsingGETPeriodEnum["QUARTERLY"] = "QUARTERLY";
    GenerateCasePaymentPlanUsingGETPeriodEnum["WEEKLY"] = "WEEKLY";
    GenerateCasePaymentPlanUsingGETPeriodEnum["YEARLY"] = "YEARLY";
})(GenerateCasePaymentPlanUsingGETPeriodEnum || (GenerateCasePaymentPlanUsingGETPeriodEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var ListCostItemsForCustomerUsingGETPeriodEnum;
(function (ListCostItemsForCustomerUsingGETPeriodEnum) {
    ListCostItemsForCustomerUsingGETPeriodEnum["DAILY"] = "DAILY";
    ListCostItemsForCustomerUsingGETPeriodEnum["MONTHLY"] = "MONTHLY";
    ListCostItemsForCustomerUsingGETPeriodEnum["QUARTERLY"] = "QUARTERLY";
    ListCostItemsForCustomerUsingGETPeriodEnum["WEEKLY"] = "WEEKLY";
    ListCostItemsForCustomerUsingGETPeriodEnum["YEARLY"] = "YEARLY";
})(ListCostItemsForCustomerUsingGETPeriodEnum || (ListCostItemsForCustomerUsingGETPeriodEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var UpdatePaymentRecipientUsingPUTRecipientEnum;
(function (UpdatePaymentRecipientUsingPUTRecipientEnum) {
    UpdatePaymentRecipientUsingPUTRecipientEnum["COURT"] = "COURT";
    UpdatePaymentRecipientUsingPUTRecipientEnum["LAWFIRM"] = "LAWFIRM";
    UpdatePaymentRecipientUsingPUTRecipientEnum["OTR"] = "OTR";
})(UpdatePaymentRecipientUsingPUTRecipientEnum || (UpdatePaymentRecipientUsingPUTRecipientEnum = {}));
