/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { AddCaseMessageResponseFromJSON, AddNewCaseMessageRequestToJSON, EditConversationMessageRequestToJSON, GetCaseMessagesResponseFromJSON, SetFlagOnMessagesRequestToJSON, SetStarOnMessagesRequestToJSON, } from '../models';
/**
 *
 */
export class ConversationControllerApi extends runtime.BaseAPI {
    /**
     * addMessageToConversation
     */
    addMessageToConversationUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling addMessageToConversationUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling addMessageToConversationUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/conversation`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: AddNewCaseMessageRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => AddCaseMessageResponseFromJSON(jsonValue));
        });
    }
    /**
     * addMessageToConversation
     */
    addMessageToConversationUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.addMessageToConversationUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * editMessage
     */
    editMessageUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling editMessageUsingPUT.');
            }
            if (requestParameters.messageId === null || requestParameters.messageId === undefined) {
                throw new runtime.RequiredError('messageId', 'Required parameter requestParameters.messageId was null or undefined when calling editMessageUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling editMessageUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/conversation/{messageId}/edit`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"messageId"}}`, encodeURIComponent(String(requestParameters.messageId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: EditConversationMessageRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * editMessage
     */
    editMessageUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.editMessageUsingPUTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getConversation
     */
    getConversationUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getConversationUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.length !== undefined) {
                queryParameters['length'] = requestParameters.length;
            }
            if (requestParameters.page !== undefined) {
                queryParameters['page'] = requestParameters.page;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/conversation`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetCaseMessagesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getConversation
     */
    getConversationUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getConversationUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getMessage
     */
    getMessageUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getMessageUsingGET.');
            }
            if (requestParameters.messageId === null || requestParameters.messageId === undefined) {
                throw new runtime.RequiredError('messageId', 'Required parameter requestParameters.messageId was null or undefined when calling getMessageUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/conversation/{messageId}`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"messageId"}}`, encodeURIComponent(String(requestParameters.messageId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetCaseMessagesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getMessage
     */
    getMessageUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getMessageUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * markMessageAsDeleted
     */
    markMessageAsDeletedUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling markMessageAsDeletedUsingPUT.');
            }
            if (requestParameters.isDeleted === null || requestParameters.isDeleted === undefined) {
                throw new runtime.RequiredError('isDeleted', 'Required parameter requestParameters.isDeleted was null or undefined when calling markMessageAsDeletedUsingPUT.');
            }
            if (requestParameters.messageId === null || requestParameters.messageId === undefined) {
                throw new runtime.RequiredError('messageId', 'Required parameter requestParameters.messageId was null or undefined when calling markMessageAsDeletedUsingPUT.');
            }
            const queryParameters = {};
            if (requestParameters.isDeleted !== undefined) {
                queryParameters['isDeleted'] = requestParameters.isDeleted;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/conversation/{messageId}`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))).replace(`{${"messageId"}}`, encodeURIComponent(String(requestParameters.messageId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * markMessageAsDeleted
     */
    markMessageAsDeletedUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.markMessageAsDeletedUsingPUTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * setFlagOnMessages
     */
    setFlagOnMessagesUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling setFlagOnMessagesUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/conversation/flag`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: SetFlagOnMessagesRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * setFlagOnMessages
     */
    setFlagOnMessagesUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.setFlagOnMessagesUsingPUTRaw(requestParameters);
        });
    }
    /**
     * setStarOnMessages
     */
    setStarOnMessagesUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling setStarOnMessagesUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/cases/conversation/star`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: SetStarOnMessagesRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * setStarOnMessages
     */
    setStarOnMessagesUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.setStarOnMessagesUsingPUTRaw(requestParameters);
        });
    }
}
