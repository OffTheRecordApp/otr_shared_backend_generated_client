/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { FreshDeskTicketReq, FreshDeskTicketRes, FreshdeskWebhookRequest, MergeTicketResponse } from '../models';
export interface MergeTicketUsingPOSTRequest {
    ticketId: number;
    request: FreshdeskWebhookRequest;
}
export interface TicketStatusChangeHookUsingPUTRequest {
    ticketId: string;
    request: FreshdeskWebhookRequest;
}
export interface UpdateFreshdeskTicketUsingPUTRequest {
    ticketId: number;
    request: FreshDeskTicketReq;
}
/**
 *
 */
export declare class FreshdeskTicketControllerApi extends runtime.BaseAPI {
    /**
     * mergeTicket
     */
    mergeTicketUsingPOSTRaw(requestParameters: MergeTicketUsingPOSTRequest): Promise<runtime.ApiResponse<MergeTicketResponse>>;
    /**
     * mergeTicket
     */
    mergeTicketUsingPOST(requestParameters: MergeTicketUsingPOSTRequest): Promise<MergeTicketResponse>;
    /**
     * ticketStatusChangeHook
     */
    ticketStatusChangeHookUsingPUTRaw(requestParameters: TicketStatusChangeHookUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * ticketStatusChangeHook
     */
    ticketStatusChangeHookUsingPUT(requestParameters: TicketStatusChangeHookUsingPUTRequest): Promise<void>;
    /**
     * updateFreshdeskTicket
     */
    updateFreshdeskTicketUsingPUTRaw(requestParameters: UpdateFreshdeskTicketUsingPUTRequest): Promise<runtime.ApiResponse<FreshDeskTicketRes>>;
    /**
     * updateFreshdeskTicket
     */
    updateFreshdeskTicketUsingPUT(requestParameters: UpdateFreshdeskTicketUsingPUTRequest): Promise<FreshDeskTicketRes>;
}
