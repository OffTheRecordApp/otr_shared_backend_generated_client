/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AccountLevelFeeRequest, AccountLevelFeeResponse, EnableViolationsForLawfirmRequest, EnableViolationsForLawfirmResponse, GetLawfirmCoverageResponse, GetLawfirmFeeCoverageResponse, PostCourtCoverageRequest, RemoveCoverageRequest, ResetFeesForLawfirmRequest, ResetFeesForLawfirmResponse } from '../models';
export interface AddCourtToCoverageUsingPOSTRequest {
    lawfirmIdString: string;
    request: PostCourtCoverageRequest;
}
export interface EnableViolationsForLawfirmUsingPOSTRequest {
    lawfirmId: string;
    request: EnableViolationsForLawfirmRequest;
}
export interface GetAccountFeesUsingGETRequest {
    lawfirmId: string;
    enabledFeesOnly?: boolean;
}
export interface GetLawfirmCoverageUsingGETRequest {
    lawfirmIdString: string;
}
export interface GetLawfirmFeeCoverageUsingGETRequest {
    lawfirmId: string;
    legalServiceType?: GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum;
}
export interface RemoveAccountFeesUsingDELETERequest {
    lawfirmId: string;
    classification?: RemoveAccountFeesUsingDELETEClassificationEnum;
    isPermitted?: boolean;
    regionCode?: string;
    violationId?: number;
}
export interface RemoveCourtsUsingDELETERequest {
    courtsToRemove: number;
    lawfirmId: string;
}
export interface RemoveCoverageUsingDELETERequest {
    lawfirmId: string;
    courtsToRemove: RemoveCoverageRequest;
}
export interface ResetFeesForLawfirmUsingPOSTRequest {
    lawfirmId: string;
    request: ResetFeesForLawfirmRequest;
}
export interface SaveAccountFeesUsingPOSTRequest {
    lawfirmId: string;
    request: AccountLevelFeeRequest;
}
/**
 *
 */
export declare class LawfirmFeeCoverageControllerApi extends runtime.BaseAPI {
    /**
     * addCourtToCoverage
     */
    addCourtToCoverageUsingPOSTRaw(requestParameters: AddCourtToCoverageUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * addCourtToCoverage
     */
    addCourtToCoverageUsingPOST(requestParameters: AddCourtToCoverageUsingPOSTRequest): Promise<object>;
    /**
     * enableViolationsForLawfirm
     */
    enableViolationsForLawfirmUsingPOSTRaw(requestParameters: EnableViolationsForLawfirmUsingPOSTRequest): Promise<runtime.ApiResponse<EnableViolationsForLawfirmResponse>>;
    /**
     * enableViolationsForLawfirm
     */
    enableViolationsForLawfirmUsingPOST(requestParameters: EnableViolationsForLawfirmUsingPOSTRequest): Promise<EnableViolationsForLawfirmResponse>;
    /**
     * getAccountFees
     */
    getAccountFeesUsingGETRaw(requestParameters: GetAccountFeesUsingGETRequest): Promise<runtime.ApiResponse<AccountLevelFeeResponse>>;
    /**
     * getAccountFees
     */
    getAccountFeesUsingGET(requestParameters: GetAccountFeesUsingGETRequest): Promise<AccountLevelFeeResponse>;
    /**
     * getLawfirmCoverage
     */
    getLawfirmCoverageUsingGETRaw(requestParameters: GetLawfirmCoverageUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmCoverageResponse>>;
    /**
     * getLawfirmCoverage
     */
    getLawfirmCoverageUsingGET(requestParameters: GetLawfirmCoverageUsingGETRequest): Promise<GetLawfirmCoverageResponse>;
    /**
     * getLawfirmFeeCoverage
     */
    getLawfirmFeeCoverageUsingGETRaw(requestParameters: GetLawfirmFeeCoverageUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmFeeCoverageResponse>>;
    /**
     * getLawfirmFeeCoverage
     */
    getLawfirmFeeCoverageUsingGET(requestParameters: GetLawfirmFeeCoverageUsingGETRequest): Promise<GetLawfirmFeeCoverageResponse>;
    /**
     * removeAccountFees
     */
    removeAccountFeesUsingDELETERaw(requestParameters: RemoveAccountFeesUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * removeAccountFees
     */
    removeAccountFeesUsingDELETE(requestParameters: RemoveAccountFeesUsingDELETERequest): Promise<void>;
    /**
     * removeCourts
     */
    removeCourtsUsingDELETERaw(requestParameters: RemoveCourtsUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * removeCourts
     */
    removeCourtsUsingDELETE(requestParameters: RemoveCourtsUsingDELETERequest): Promise<void>;
    /**
     * removeCoverage
     */
    removeCoverageUsingDELETERaw(requestParameters: RemoveCoverageUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * removeCoverage
     */
    removeCoverageUsingDELETE(requestParameters: RemoveCoverageUsingDELETERequest): Promise<void>;
    /**
     * resetFeesForLawfirm
     */
    resetFeesForLawfirmUsingPOSTRaw(requestParameters: ResetFeesForLawfirmUsingPOSTRequest): Promise<runtime.ApiResponse<ResetFeesForLawfirmResponse>>;
    /**
     * resetFeesForLawfirm
     */
    resetFeesForLawfirmUsingPOST(requestParameters: ResetFeesForLawfirmUsingPOSTRequest): Promise<ResetFeesForLawfirmResponse>;
    /**
     * saveAccountFees
     */
    saveAccountFeesUsingPOSTRaw(requestParameters: SaveAccountFeesUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * saveAccountFees
     */
    saveAccountFeesUsingPOST(requestParameters: SaveAccountFeesUsingPOSTRequest): Promise<object>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum {
    DEFER = "DEFER",
    FIGHT = "FIGHT"
}
/**
    * @export
    * @enum {string}
    */
export declare enum RemoveAccountFeesUsingDELETEClassificationEnum {
    CLASS1FELONY = "CLASS_1_FELONY",
    CLASS1MISDEMEANOR = "CLASS_1_MISDEMEANOR",
    CLASS2FELONY = "CLASS_2_FELONY",
    CLASS2MISDEMEANOR = "CLASS_2_MISDEMEANOR",
    CLASS3FELONY = "CLASS_3_FELONY",
    CLASS3MISDEMEANOR = "CLASS_3_MISDEMEANOR",
    CLASS4FELONY = "CLASS_4_FELONY",
    CLASS4MISDEMEANOR = "CLASS_4_MISDEMEANOR",
    CLASS5FELONY = "CLASS_5_FELONY",
    CLASS6FELONY = "CLASS_6_FELONY",
    CLASSA1MISDEMEANOR = "CLASS_A1_MISDEMEANOR",
    CLASSAFELONY = "CLASS_A_FELONY",
    CLASSAINFRACTION = "CLASS_A_INFRACTION",
    CLASSAMISDEMEANOR = "CLASS_A_MISDEMEANOR",
    CLASSAVIOLATION = "CLASS_A_VIOLATION",
    CLASSBFELONY = "CLASS_B_FELONY",
    CLASSBINFRACTION = "CLASS_B_INFRACTION",
    CLASSBMISDEMEANOR = "CLASS_B_MISDEMEANOR",
    CLASSBVIOLATION = "CLASS_B_VIOLATION",
    CLASSCFELONY = "CLASS_C_FELONY",
    CLASSCINFRACTION = "CLASS_C_INFRACTION",
    CLASSCMISDEMEANOR = "CLASS_C_MISDEMEANOR",
    CLASSCVIOLATION = "CLASS_C_VIOLATION",
    CLASSDFELONY = "CLASS_D_FELONY",
    CLASSDMISDEMEANOR = "CLASS_D_MISDEMEANOR",
    CLASSDVIOLATION = "CLASS_D_VIOLATION",
    CLASSEFELONY = "CLASS_E_FELONY",
    CLASSFFELONY = "CLASS_F_FELONY",
    CLASSHFELONY = "CLASS_H_FELONY",
    DISORDERLYPERSONSOFFENSE = "DISORDERLY_PERSONS_OFFENSE",
    FELONY = "FELONY",
    FELONY1STDEGREE = "FELONY_1ST_DEGREE",
    FELONY2NDDEGREE = "FELONY_2ND_DEGREE",
    FELONY3RDDEGREE = "FELONY_3RD_DEGREE",
    FELONY4THDEGREE = "FELONY_4TH_DEGREE",
    FELONY5THDEGREE = "FELONY_5TH_DEGREE",
    GROSSMISDEMEANOR = "GROSS_MISDEMEANOR",
    HIGHANDAGGRAVATEDMISDEMEANOR = "HIGH_AND_AGGRAVATED_MISDEMEANOR",
    INFRACTION = "INFRACTION",
    LEVEL4FELONY = "LEVEL_4_FELONY",
    LEVEL5FELONY = "LEVEL_5_FELONY",
    LEVEL6FELONY = "LEVEL_6_FELONY",
    MINORMISDEMEANOR = "MINOR_MISDEMEANOR",
    MISDEMEANOR = "MISDEMEANOR",
    MISDEMEANOR1STDEGREE = "MISDEMEANOR_1ST_DEGREE",
    MISDEMEANOR2NDDEGREE = "MISDEMEANOR_2ND_DEGREE",
    MISDEMEANOR3RDDEGREE = "MISDEMEANOR_3RD_DEGREE",
    MISDEMEANOR4THDEGREE = "MISDEMEANOR_4TH_DEGREE",
    MISDEMEANORWITHREFUND = "MISDEMEANOR_WITH_REFUND",
    NONMOVING = "NON_MOVING",
    NONREPORTABLE = "NON_REPORTABLE",
    PETTYMISDEMEANOR = "PETTY_MISDEMEANOR",
    QUASICRIMINAL = "QUASI_CRIMINAL",
    SUMMARYOFFENSE = "SUMMARY_OFFENSE",
    SUMMARYOFFENSENOREFUND = "SUMMARY_OFFENSE_NO_REFUND",
    WOBBLERTOFELONY = "WOBBLER_TO_FELONY",
    WOBBLERTOMISDEMEANOR = "WOBBLER_TO_MISDEMEANOR"
}
