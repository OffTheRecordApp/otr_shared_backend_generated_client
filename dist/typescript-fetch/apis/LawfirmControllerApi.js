/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { CreateNewLawfirmRequestToJSON, GetLawfirmAddressesResponseFromJSON, GetLawfirmCaseStatsResponseFromJSON, GetLawfirmInboxMessagesResponseFromJSON, GetLawfirmJobTitleResponseFromJSON, GetLawfirmLawyersResponseFromJSON, GetLawfirmResponseFromJSON, GetLawfirmSupportedStatesResponseFromJSON, GetLawfirmsResponseFromJSON, GetStripeConnectedAccountsResponseFromJSON, IntercomSearchTicketsResponseFromJSON, LawfirmPictureRequestToJSON, LawfirmVacationRequestToJSON, UpdateLawfirmPaymentModelRequestToJSON, UpdateLawfirmRequestToJSON, UpdateLawyerRoleRequestToJSON, UploadLawfirmsRequestToJSON, UploadLawfirmsResponseFromJSON, UpsertAddressRequestToJSON, } from '../models';
/**
 *
 */
export class LawfirmControllerApi extends runtime.BaseAPI {
    /**
     * addLawfirmAddress
     */
    addLawfirmAddressUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling addLawfirmAddressUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling addLawfirmAddressUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/addresses`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UpsertAddressRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * addLawfirmAddress
     */
    addLawfirmAddressUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.addLawfirmAddressUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * createLawfirm
     */
    createLawfirmUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling createLawfirmUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: CreateNewLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * createLawfirm
     */
    createLawfirmUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createLawfirmUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * deleteLawfirmConnectedAccount
     */
    deleteLawfirmConnectedAccountUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling deleteLawfirmConnectedAccountUsingDELETE.');
            }
            if (requestParameters.stripeAccountId === null || requestParameters.stripeAccountId === undefined) {
                throw new runtime.RequiredError('stripeAccountId', 'Required parameter requestParameters.stripeAccountId was null or undefined when calling deleteLawfirmConnectedAccountUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/stripe/account/{stripeAccountId}`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))).replace(`{${"stripeAccountId"}}`, encodeURIComponent(String(requestParameters.stripeAccountId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * deleteLawfirmConnectedAccount
     */
    deleteLawfirmConnectedAccountUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteLawfirmConnectedAccountUsingDELETERaw(requestParameters);
        });
    }
    /**
     * deleteLawfirmCoverPhoto
     */
    deleteLawfirmCoverPhotoUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling deleteLawfirmCoverPhotoUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/cover-photo`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * deleteLawfirmCoverPhoto
     */
    deleteLawfirmCoverPhotoUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteLawfirmCoverPhotoUsingDELETERaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getInboxMessages
     */
    getInboxMessagesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getInboxMessagesUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.caseStatuses !== undefined) {
                queryParameters['caseStatuses'] = requestParameters.caseStatuses;
            }
            if (requestParameters.courtDateFilter !== undefined) {
                queryParameters['courtDateFilter'] = requestParameters.courtDateFilter;
            }
            if (requestParameters.filter !== undefined) {
                queryParameters['filter'] = requestParameters.filter;
            }
            if (requestParameters.latestMessageBy !== undefined) {
                queryParameters['latestMessageBy'] = requestParameters.latestMessageBy;
            }
            if (requestParameters.length !== undefined) {
                queryParameters['length'] = requestParameters.length;
            }
            if (requestParameters.page !== undefined) {
                queryParameters['page'] = requestParameters.page;
            }
            if (requestParameters.query !== undefined) {
                queryParameters['query'] = requestParameters.query;
            }
            if (requestParameters.statusCategories !== undefined) {
                queryParameters['statusCategories'] = requestParameters.statusCategories;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/inbox-messages`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmInboxMessagesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getInboxMessages
     */
    getInboxMessagesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getInboxMessagesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmAddresses
     */
    getLawfirmAddressesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getLawfirmAddressesUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/addresses`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmAddressesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmAddresses
     */
    getLawfirmAddressesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmAddressesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmByPrimaryEmail
     */
    getLawfirmByPrimaryEmailUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.primaryLawfirmEmail === null || requestParameters.primaryLawfirmEmail === undefined) {
                throw new runtime.RequiredError('primaryLawfirmEmail', 'Required parameter requestParameters.primaryLawfirmEmail was null or undefined when calling getLawfirmByPrimaryEmailUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/email/{primaryLawfirmEmail}`.replace(`{${"primaryLawfirmEmail"}}`, encodeURIComponent(String(requestParameters.primaryLawfirmEmail))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmByPrimaryEmail
     */
    getLawfirmByPrimaryEmailUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmByPrimaryEmailUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmByUrl
     */
    getLawfirmByUrlUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.seoUrl === null || requestParameters.seoUrl === undefined) {
                throw new runtime.RequiredError('seoUrl', 'Required parameter requestParameters.seoUrl was null or undefined when calling getLawfirmByUrlUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.seoUrl !== undefined) {
                queryParameters['seoUrl'] = requestParameters.seoUrl;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/url`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmByUrl
     */
    getLawfirmByUrlUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmByUrlUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmCaseStats
     */
    getLawfirmCaseStatsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getLawfirmCaseStatsUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/cases/stats`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmCaseStatsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmCaseStats
     */
    getLawfirmCaseStatsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmCaseStatsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmJobTitles
     */
    getLawfirmJobTitlesUsingGETRaw() {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/job-titles`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmJobTitleResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmJobTitles
     */
    getLawfirmJobTitlesUsingGET() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmJobTitlesUsingGETRaw();
            return yield response.value();
        });
    }
    /**
     * getLawfirmLawyers
     */
    getLawfirmLawyersUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getLawfirmLawyersUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.settingName !== undefined) {
                queryParameters['settingName'] = requestParameters.settingName;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/lawyers`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmLawyersResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmLawyers
     */
    getLawfirmLawyersUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmLawyersUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmStatuses
     */
    getLawfirmStatusesUsingGETRaw() {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/statuses`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * getLawfirmStatuses
     */
    getLawfirmStatusesUsingGET() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmStatusesUsingGETRaw();
            return yield response.value();
        });
    }
    /**
     * getLawfirmSupportTickets
     */
    getLawfirmSupportTicketsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getLawfirmSupportTicketsUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.limit !== undefined) {
                queryParameters['limit'] = requestParameters.limit;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/lawfirms/{lawfirmId}/support-tickets`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => IntercomSearchTicketsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmSupportTickets
     */
    getLawfirmSupportTicketsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmSupportTicketsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirm
     */
    getLawfirmUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmIdString === null || requestParameters.lawfirmIdString === undefined) {
                throw new runtime.RequiredError('lawfirmIdString', 'Required parameter requestParameters.lawfirmIdString was null or undefined when calling getLawfirmUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmIdString}`.replace(`{${"lawfirmIdString"}}`, encodeURIComponent(String(requestParameters.lawfirmIdString))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirm
     */
    getLawfirmUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirms
     */
    getLawfirmsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.acceptsAccidentTickets !== undefined) {
                queryParameters['acceptsAccidentTickets'] = requestParameters.acceptsAccidentTickets;
            }
            if (requestParameters.acceptsPastDueTickets !== undefined) {
                queryParameters['acceptsPastDueTickets'] = requestParameters.acceptsPastDueTickets;
            }
            if (requestParameters.includeTestLawfirms !== undefined) {
                queryParameters['includeTestLawfirms'] = requestParameters.includeTestLawfirms;
            }
            if (requestParameters.includeVacationMode !== undefined) {
                queryParameters['includeVacationMode'] = requestParameters.includeVacationMode;
            }
            if (requestParameters.q !== undefined) {
                queryParameters['q'] = requestParameters.q;
            }
            if (requestParameters.states !== undefined) {
                queryParameters['states'] = requestParameters.states;
            }
            if (requestParameters.statusCategories !== undefined) {
                queryParameters['statusCategories'] = requestParameters.statusCategories;
            }
            if (requestParameters.statuses !== undefined) {
                queryParameters['statuses'] = requestParameters.statuses;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirms
     */
    getLawfirmsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getOtrLawfirmNotes
     */
    getOtrLawfirmNotesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getOtrLawfirmNotesUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/otr-notes`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * getOtrLawfirmNotes
     */
    getOtrLawfirmNotesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getOtrLawfirmNotesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getStripeConnectedAccounts
     */
    getStripeConnectedAccountsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getStripeConnectedAccountsUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/stripe`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetStripeConnectedAccountsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getStripeConnectedAccounts
     */
    getStripeConnectedAccountsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getStripeConnectedAccountsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getSupportedStatesForLawfirm
     */
    getSupportedStatesForLawfirmUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getSupportedStatesForLawfirmUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/supported-states`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmSupportedStatesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getSupportedStatesForLawfirm
     */
    getSupportedStatesForLawfirmUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getSupportedStatesForLawfirmUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * setVacationMode
     */
    setVacationModeUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling setVacationModeUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling setVacationModeUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/vacation`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: LawfirmVacationRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * setVacationMode
     */
    setVacationModeUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.setVacationModeUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * updateLawfirmAddress
     */
    updateLawfirmAddressUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.addressId === null || requestParameters.addressId === undefined) {
                throw new runtime.RequiredError('addressId', 'Required parameter requestParameters.addressId was null or undefined when calling updateLawfirmAddressUsingPUT.');
            }
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling updateLawfirmAddressUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateLawfirmAddressUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/addresses/{addressId}`.replace(`{${"addressId"}}`, encodeURIComponent(String(requestParameters.addressId))).replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpsertAddressRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updateLawfirmAddress
     */
    updateLawfirmAddressUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updateLawfirmAddressUsingPUTRaw(requestParameters);
        });
    }
    /**
     * updateLawfirm
     */
    updateLawfirmUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmIdString === null || requestParameters.lawfirmIdString === undefined) {
                throw new runtime.RequiredError('lawfirmIdString', 'Required parameter requestParameters.lawfirmIdString was null or undefined when calling updateLawfirmUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateLawfirmUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmIdString}`.replace(`{${"lawfirmIdString"}}`, encodeURIComponent(String(requestParameters.lawfirmIdString))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * updateLawfirm
     */
    updateLawfirmUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateLawfirmUsingPUTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * updateLawfirmWithPicture
     */
    updateLawfirmWithPictureUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling updateLawfirmWithPictureUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateLawfirmWithPictureUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/picture`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: LawfirmPictureRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * updateLawfirmWithPicture
     */
    updateLawfirmWithPictureUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateLawfirmWithPictureUsingPUTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * updateLawyerRole
     */
    updateLawyerRoleUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling updateLawyerRoleUsingPUT.');
            }
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling updateLawyerRoleUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateLawyerRoleUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/lawyers/{userId}/update-role`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))).replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateLawyerRoleRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updateLawyerRole
     */
    updateLawyerRoleUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updateLawyerRoleUsingPUTRaw(requestParameters);
        });
    }
    /**
     * updatePaymentModel
     */
    updatePaymentModelUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling updatePaymentModelUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updatePaymentModelUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/payment-model`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateLawfirmPaymentModelRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updatePaymentModel
     */
    updatePaymentModelUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updatePaymentModelUsingPUTRaw(requestParameters);
        });
    }
    /**
     * uploadLawfirms
     */
    uploadLawfirmsUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling uploadLawfirmsUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/bulk-upload`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UploadLawfirmsRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => UploadLawfirmsResponseFromJSON(jsonValue));
        });
    }
    /**
     * uploadLawfirms
     */
    uploadLawfirmsUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.uploadLawfirmsUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
}
/**
    * @export
    * @enum {string}
    */
export var GetInboxMessagesUsingGETCaseStatusesEnum;
(function (GetInboxMessagesUsingGETCaseStatusesEnum) {
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDDOWNWITHINCLASS"] = "AMENDED_DOWN_WITHIN_CLASS";
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDFULLFINE"] = "AMENDED_FULL_FINE";
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDINCREASEDFINE"] = "AMENDED_INCREASED_FINE";
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDNOFINE"] = "AMENDED_NO_FINE";
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDREDUCEDFINE"] = "AMENDED_REDUCED_FINE";
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDTOINFRACTION"] = "AMENDED_TO_INFRACTION";
    GetInboxMessagesUsingGETCaseStatusesEnum["AMENDEDTONMV"] = "AMENDED_TO_NMV";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDATTORNEYATFAULT"] = "CANCELLED_ATTORNEY_AT_FAULT";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDBYLAWFIRM"] = "CANCELLED_BY_LAWFIRM";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDBYUSER"] = "CANCELLED_BY_USER";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDDUPLICATE"] = "CANCELLED_DUPLICATE";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDNMV"] = "CANCELLED_NMV";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDNONPAYMENT"] = "CANCELLED_NON_PAYMENT";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDNOLAWFIRM"] = "CANCELLED_NO_LAWFIRM";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDOVERDUE"] = "CANCELLED_OVERDUE";
    GetInboxMessagesUsingGETCaseStatusesEnum["CANCELLEDTOOSHORTNOTICE"] = "CANCELLED_TOO_SHORT_NOTICE";
    GetInboxMessagesUsingGETCaseStatusesEnum["CASEINPROGRESS"] = "CASE_IN_PROGRESS";
    GetInboxMessagesUsingGETCaseStatusesEnum["CLIENTCONFIRMED"] = "CLIENT_CONFIRMED";
    GetInboxMessagesUsingGETCaseStatusesEnum["CLIENTCONFIRMEDUNPAID"] = "CLIENT_CONFIRMED_UNPAID";
    GetInboxMessagesUsingGETCaseStatusesEnum["CLIENTFIREDLAWFIRM"] = "CLIENT_FIRED_LAWFIRM";
    GetInboxMessagesUsingGETCaseStatusesEnum["CLIENTFORCEDLOSS"] = "CLIENT_FORCED_LOSS";
    GetInboxMessagesUsingGETCaseStatusesEnum["CLIENTPAIDFINE"] = "CLIENT_PAID_FINE";
    GetInboxMessagesUsingGETCaseStatusesEnum["CLIENTUNRESPONSIVE"] = "CLIENT_UNRESPONSIVE";
    GetInboxMessagesUsingGETCaseStatusesEnum["DEFERRED"] = "DEFERRED";
    GetInboxMessagesUsingGETCaseStatusesEnum["DISMISSED"] = "DISMISSED";
    GetInboxMessagesUsingGETCaseStatusesEnum["DIVERSION"] = "DIVERSION";
    GetInboxMessagesUsingGETCaseStatusesEnum["FEESDISPUTED"] = "FEES_DISPUTED";
    GetInboxMessagesUsingGETCaseStatusesEnum["FINEREDUCTIONONLY"] = "FINE_REDUCTION_ONLY";
    GetInboxMessagesUsingGETCaseStatusesEnum["LAWFIRMWITHDRAWN"] = "LAWFIRM_WITHDRAWN";
    GetInboxMessagesUsingGETCaseStatusesEnum["LOST"] = "LOST";
    GetInboxMessagesUsingGETCaseStatusesEnum["NOLAWFIRMAVAILABLE"] = "NO_LAWFIRM_AVAILABLE";
    GetInboxMessagesUsingGETCaseStatusesEnum["POINTREDUCTION"] = "POINT_REDUCTION";
    GetInboxMessagesUsingGETCaseStatusesEnum["REFUSEDBYLAWFIRM"] = "REFUSED_BY_LAWFIRM";
    GetInboxMessagesUsingGETCaseStatusesEnum["RESOLVEDNONPAYMENT"] = "RESOLVED_NON_PAYMENT";
    GetInboxMessagesUsingGETCaseStatusesEnum["STALE"] = "STALE";
    GetInboxMessagesUsingGETCaseStatusesEnum["TRAFFICSCHOOL"] = "TRAFFIC_SCHOOL";
    GetInboxMessagesUsingGETCaseStatusesEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(GetInboxMessagesUsingGETCaseStatusesEnum || (GetInboxMessagesUsingGETCaseStatusesEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetInboxMessagesUsingGETCourtDateFilterEnum;
(function (GetInboxMessagesUsingGETCourtDateFilterEnum) {
    GetInboxMessagesUsingGETCourtDateFilterEnum["NOCOURTDATE"] = "NO_COURT_DATE";
    GetInboxMessagesUsingGETCourtDateFilterEnum["PASTDUE"] = "PAST_DUE";
    GetInboxMessagesUsingGETCourtDateFilterEnum["PASTDUEANDNOCOURTDATE"] = "PAST_DUE_AND_NO_COURT_DATE";
    GetInboxMessagesUsingGETCourtDateFilterEnum["UPCOMING"] = "UPCOMING";
})(GetInboxMessagesUsingGETCourtDateFilterEnum || (GetInboxMessagesUsingGETCourtDateFilterEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetInboxMessagesUsingGETFilterEnum;
(function (GetInboxMessagesUsingGETFilterEnum) {
    GetInboxMessagesUsingGETFilterEnum["ARCHIVE"] = "ARCHIVE";
    GetInboxMessagesUsingGETFilterEnum["DEFAULT"] = "DEFAULT";
    GetInboxMessagesUsingGETFilterEnum["FLAGONLY"] = "FLAG_ONLY";
    GetInboxMessagesUsingGETFilterEnum["STARONLY"] = "STAR_ONLY";
})(GetInboxMessagesUsingGETFilterEnum || (GetInboxMessagesUsingGETFilterEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetInboxMessagesUsingGETLatestMessageByEnum;
(function (GetInboxMessagesUsingGETLatestMessageByEnum) {
    GetInboxMessagesUsingGETLatestMessageByEnum["ADMIN"] = "ADMIN";
    GetInboxMessagesUsingGETLatestMessageByEnum["CLIENT"] = "CLIENT";
    GetInboxMessagesUsingGETLatestMessageByEnum["LAWYER"] = "LAWYER";
})(GetInboxMessagesUsingGETLatestMessageByEnum || (GetInboxMessagesUsingGETLatestMessageByEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetInboxMessagesUsingGETStatusCategoriesEnum;
(function (GetInboxMessagesUsingGETStatusCategoriesEnum) {
    GetInboxMessagesUsingGETStatusCategoriesEnum["ACTIVE"] = "ACTIVE";
    GetInboxMessagesUsingGETStatusCategoriesEnum["CANCELLED"] = "CANCELLED";
    GetInboxMessagesUsingGETStatusCategoriesEnum["RESOLVED"] = "RESOLVED";
    GetInboxMessagesUsingGETStatusCategoriesEnum["UNCONFIRMED"] = "UNCONFIRMED";
})(GetInboxMessagesUsingGETStatusCategoriesEnum || (GetInboxMessagesUsingGETStatusCategoriesEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetLawfirmsUsingGETStatesEnum;
(function (GetLawfirmsUsingGETStatesEnum) {
    GetLawfirmsUsingGETStatesEnum["AK"] = "AK";
    GetLawfirmsUsingGETStatesEnum["AL"] = "AL";
    GetLawfirmsUsingGETStatesEnum["AR"] = "AR";
    GetLawfirmsUsingGETStatesEnum["AZ"] = "AZ";
    GetLawfirmsUsingGETStatesEnum["CA"] = "CA";
    GetLawfirmsUsingGETStatesEnum["CO"] = "CO";
    GetLawfirmsUsingGETStatesEnum["CT"] = "CT";
    GetLawfirmsUsingGETStatesEnum["DC"] = "DC";
    GetLawfirmsUsingGETStatesEnum["DE"] = "DE";
    GetLawfirmsUsingGETStatesEnum["FL"] = "FL";
    GetLawfirmsUsingGETStatesEnum["GA"] = "GA";
    GetLawfirmsUsingGETStatesEnum["HI"] = "HI";
    GetLawfirmsUsingGETStatesEnum["IA"] = "IA";
    GetLawfirmsUsingGETStatesEnum["ID"] = "ID";
    GetLawfirmsUsingGETStatesEnum["IL"] = "IL";
    GetLawfirmsUsingGETStatesEnum["IN"] = "IN";
    GetLawfirmsUsingGETStatesEnum["KS"] = "KS";
    GetLawfirmsUsingGETStatesEnum["KY"] = "KY";
    GetLawfirmsUsingGETStatesEnum["LA"] = "LA";
    GetLawfirmsUsingGETStatesEnum["MA"] = "MA";
    GetLawfirmsUsingGETStatesEnum["MD"] = "MD";
    GetLawfirmsUsingGETStatesEnum["ME"] = "ME";
    GetLawfirmsUsingGETStatesEnum["MI"] = "MI";
    GetLawfirmsUsingGETStatesEnum["MN"] = "MN";
    GetLawfirmsUsingGETStatesEnum["MO"] = "MO";
    GetLawfirmsUsingGETStatesEnum["MS"] = "MS";
    GetLawfirmsUsingGETStatesEnum["MT"] = "MT";
    GetLawfirmsUsingGETStatesEnum["NC"] = "NC";
    GetLawfirmsUsingGETStatesEnum["ND"] = "ND";
    GetLawfirmsUsingGETStatesEnum["NE"] = "NE";
    GetLawfirmsUsingGETStatesEnum["NH"] = "NH";
    GetLawfirmsUsingGETStatesEnum["NJ"] = "NJ";
    GetLawfirmsUsingGETStatesEnum["NM"] = "NM";
    GetLawfirmsUsingGETStatesEnum["NV"] = "NV";
    GetLawfirmsUsingGETStatesEnum["NY"] = "NY";
    GetLawfirmsUsingGETStatesEnum["OH"] = "OH";
    GetLawfirmsUsingGETStatesEnum["OK"] = "OK";
    GetLawfirmsUsingGETStatesEnum["OR"] = "OR";
    GetLawfirmsUsingGETStatesEnum["PA"] = "PA";
    GetLawfirmsUsingGETStatesEnum["RI"] = "RI";
    GetLawfirmsUsingGETStatesEnum["SC"] = "SC";
    GetLawfirmsUsingGETStatesEnum["SD"] = "SD";
    GetLawfirmsUsingGETStatesEnum["TN"] = "TN";
    GetLawfirmsUsingGETStatesEnum["TX"] = "TX";
    GetLawfirmsUsingGETStatesEnum["UT"] = "UT";
    GetLawfirmsUsingGETStatesEnum["VA"] = "VA";
    GetLawfirmsUsingGETStatesEnum["VT"] = "VT";
    GetLawfirmsUsingGETStatesEnum["WA"] = "WA";
    GetLawfirmsUsingGETStatesEnum["WI"] = "WI";
    GetLawfirmsUsingGETStatesEnum["WV"] = "WV";
    GetLawfirmsUsingGETStatesEnum["WY"] = "WY";
})(GetLawfirmsUsingGETStatesEnum || (GetLawfirmsUsingGETStatesEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetLawfirmsUsingGETStatusCategoriesEnum;
(function (GetLawfirmsUsingGETStatusCategoriesEnum) {
    GetLawfirmsUsingGETStatusCategoriesEnum["ACTIVE"] = "ACTIVE";
    GetLawfirmsUsingGETStatusCategoriesEnum["INACTIVE"] = "INACTIVE";
    GetLawfirmsUsingGETStatusCategoriesEnum["LEAD"] = "LEAD";
    GetLawfirmsUsingGETStatusCategoriesEnum["NOTINTERESTED"] = "NOT_INTERESTED";
    GetLawfirmsUsingGETStatusCategoriesEnum["REJECTED"] = "REJECTED";
    GetLawfirmsUsingGETStatusCategoriesEnum["TERMINATED"] = "TERMINATED";
})(GetLawfirmsUsingGETStatusCategoriesEnum || (GetLawfirmsUsingGETStatusCategoriesEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var GetLawfirmsUsingGETStatusesEnum;
(function (GetLawfirmsUsingGETStatusesEnum) {
    GetLawfirmsUsingGETStatusesEnum["ACCOUNTCLOSED"] = "ACCOUNT_CLOSED";
    GetLawfirmsUsingGETStatusesEnum["ACTIVE"] = "ACTIVE";
    GetLawfirmsUsingGETStatusesEnum["BLACKLISTED"] = "BLACKLISTED";
    GetLawfirmsUsingGETStatusesEnum["DEMOCOMPLETED"] = "DEMO_COMPLETED";
    GetLawfirmsUsingGETStatusesEnum["DUPLICATE"] = "DUPLICATE";
    GetLawfirmsUsingGETStatusesEnum["FUTURELEAD"] = "FUTURE_LEAD";
    GetLawfirmsUsingGETStatusesEnum["LEAD"] = "LEAD";
    GetLawfirmsUsingGETStatusesEnum["NEWPARTNER"] = "NEW_PARTNER";
    GetLawfirmsUsingGETStatusesEnum["NOTAGOODFIT"] = "NOT_A_GOOD_FIT";
    GetLawfirmsUsingGETStatusesEnum["NOTINTERESTEDDONOTCONTACT"] = "NOT_INTERESTED_DO_NOT_CONTACT";
    GetLawfirmsUsingGETStatusesEnum["NOTINTERESTEDFEESPLITTING"] = "NOT_INTERESTED_FEE_SPLITTING";
    GetLawfirmsUsingGETStatusesEnum["NOTINTERESTEDMARKETINGFEE"] = "NOT_INTERESTED_MARKETING_FEE";
    GetLawfirmsUsingGETStatusesEnum["NOTINTERESTEDMONEYBACKGUARANTEE"] = "NOT_INTERESTED_MONEY_BACK_GUARANTEE";
    GetLawfirmsUsingGETStatusesEnum["NOTINTERESTEDPLATFORMRESISTANCE"] = "NOT_INTERESTED_PLATFORM_RESISTANCE";
    GetLawfirmsUsingGETStatusesEnum["PASTINTEREST"] = "PAST_INTEREST";
    GetLawfirmsUsingGETStatusesEnum["SUPERVISED"] = "SUPERVISED";
    GetLawfirmsUsingGETStatusesEnum["TEMPORARILYTURNEDOFF"] = "TEMPORARILY_TURNED_OFF";
    GetLawfirmsUsingGETStatusesEnum["TERMINATEDFRAUD"] = "TERMINATED_FRAUD";
    GetLawfirmsUsingGETStatusesEnum["TERMINATEDGENERIC"] = "TERMINATED_GENERIC";
    GetLawfirmsUsingGETStatusesEnum["TERMINATEDPOORSERVICE"] = "TERMINATED_POOR_SERVICE";
    GetLawfirmsUsingGETStatusesEnum["TERMINATEDPOORSUCCESS"] = "TERMINATED_POOR_SUCCESS";
})(GetLawfirmsUsingGETStatusesEnum || (GetLawfirmsUsingGETStatusesEnum = {}));
