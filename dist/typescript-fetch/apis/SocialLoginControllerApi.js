/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { AppleLoginRequestToJSON, GoogleLoginRequestToJSON, SocialLoginRequestToJSON, SocialLoginResponseFromJSON, } from '../models';
/**
 *
 */
export class SocialLoginControllerApi extends runtime.BaseAPI {
    /**
     * appleConnect
     */
    appleConnectUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling appleConnectUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/connect/Apple`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: AppleLoginRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * appleConnect
     */
    appleConnectUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.appleConnectUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * appleConnect
     */
    appleConnectUsingPOST1Raw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling appleConnectUsingPOST1.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/connect/apple`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: AppleLoginRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * appleConnect
     */
    appleConnectUsingPOST1(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.appleConnectUsingPOST1Raw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * facebookConnect
     */
    facebookConnectUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling facebookConnectUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/connect/Facebook`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SocialLoginRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * facebookConnect
     */
    facebookConnectUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.facebookConnectUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * facebookConnect
     */
    facebookConnectUsingPOST1Raw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling facebookConnectUsingPOST1.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/connect/facebook`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SocialLoginRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * facebookConnect
     */
    facebookConnectUsingPOST1(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.facebookConnectUsingPOST1Raw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * googleConnect
     */
    googleConnectUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling googleConnectUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/connect/Google`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: GoogleLoginRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * googleConnect
     */
    googleConnectUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.googleConnectUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * googleConnect
     */
    googleConnectUsingPOST1Raw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling googleConnectUsingPOST1.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/connect/google`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: GoogleLoginRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * googleConnect
     */
    googleConnectUsingPOST1(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.googleConnectUsingPOST1Raw(requestParameters);
            return yield response.value();
        });
    }
}
