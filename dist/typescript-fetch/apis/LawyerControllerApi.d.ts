/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { DeleteLawyerLicenseRequest, GetLawyerResponse, InviteLawyerToLawfirmRequest, SaveLawyerLeadRequest, SaveLawyerLicensesRequest, SaveLawyerRequest } from '../models';
export interface CancelLawyerInviteUsingDELETERequest {
    inviteeEmail: string;
    userId: number;
}
export interface DeleteLawyerLicensesUsingDELETERequest {
    userId: string;
    request: DeleteLawyerLicenseRequest;
}
export interface DeleteLawyerUsingDELETERequest {
    userId: number;
    removeAdminOnly?: boolean;
}
export interface GetLawyerEmailGuessesUsingGETRequest {
    lawyerId: number;
}
export interface GetLawyerUsingGETRequest {
    userId: number;
}
export interface InviteLawyerToLawfirmUsingPOSTRequest {
    lawfirmId: number;
    userId: number;
    request: InviteLawyerToLawfirmRequest;
}
export interface SaveLawyerLeadUsingPOSTRequest {
    request: SaveLawyerLeadRequest;
}
export interface SaveLawyerLicensesUsingPOSTRequest {
    userId: string;
    request: SaveLawyerLicensesRequest;
}
export interface UpsertLawyerUsingPOSTRequest {
    request: SaveLawyerRequest;
}
/**
 *
 */
export declare class LawyerControllerApi extends runtime.BaseAPI {
    /**
     * cancelLawyerInvite
     */
    cancelLawyerInviteUsingDELETERaw(requestParameters: CancelLawyerInviteUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * cancelLawyerInvite
     */
    cancelLawyerInviteUsingDELETE(requestParameters: CancelLawyerInviteUsingDELETERequest): Promise<void>;
    /**
     * deleteLawyerLicenses
     */
    deleteLawyerLicensesUsingDELETERaw(requestParameters: DeleteLawyerLicensesUsingDELETERequest): Promise<runtime.ApiResponse<object>>;
    /**
     * deleteLawyerLicenses
     */
    deleteLawyerLicensesUsingDELETE(requestParameters: DeleteLawyerLicensesUsingDELETERequest): Promise<object>;
    /**
     * deleteLawyer
     */
    deleteLawyerUsingDELETERaw(requestParameters: DeleteLawyerUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * deleteLawyer
     */
    deleteLawyerUsingDELETE(requestParameters: DeleteLawyerUsingDELETERequest): Promise<void>;
    /**
     * getLawyerEmailGuesses
     */
    getLawyerEmailGuessesUsingGETRaw(requestParameters: GetLawyerEmailGuessesUsingGETRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * getLawyerEmailGuesses
     */
    getLawyerEmailGuessesUsingGET(requestParameters: GetLawyerEmailGuessesUsingGETRequest): Promise<object>;
    /**
     * getLawyer
     */
    getLawyerUsingGETRaw(requestParameters: GetLawyerUsingGETRequest): Promise<runtime.ApiResponse<GetLawyerResponse>>;
    /**
     * getLawyer
     */
    getLawyerUsingGET(requestParameters: GetLawyerUsingGETRequest): Promise<GetLawyerResponse>;
    /**
     * inviteLawyerToLawfirm
     */
    inviteLawyerToLawfirmUsingPOSTRaw(requestParameters: InviteLawyerToLawfirmUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * inviteLawyerToLawfirm
     */
    inviteLawyerToLawfirmUsingPOST(requestParameters: InviteLawyerToLawfirmUsingPOSTRequest): Promise<void>;
    /**
     * saveLawyerLead
     */
    saveLawyerLeadUsingPOSTRaw(requestParameters: SaveLawyerLeadUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * saveLawyerLead
     */
    saveLawyerLeadUsingPOST(requestParameters: SaveLawyerLeadUsingPOSTRequest): Promise<object>;
    /**
     * saveLawyerLicenses
     */
    saveLawyerLicensesUsingPOSTRaw(requestParameters: SaveLawyerLicensesUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * saveLawyerLicenses
     */
    saveLawyerLicensesUsingPOST(requestParameters: SaveLawyerLicensesUsingPOSTRequest): Promise<object>;
    /**
     * upsertLawyer
     */
    upsertLawyerUsingPOSTRaw(requestParameters: UpsertLawyerUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * upsertLawyer
     */
    upsertLawyerUsingPOST(requestParameters: UpsertLawyerUsingPOSTRequest): Promise<object>;
}
