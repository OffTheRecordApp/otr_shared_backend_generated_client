/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AddActionToCaseRequest, AddActionToCaseResponse, GetCaseActionResponse, GetCaseActionTimelineResponse, GetCaseActionTypesResponse, MarkActionAsDeletedResponse, UpdateCaseActionRequest, UpdateCaseActionResponse } from '../models';
export interface AddActionToCaseV2UsingPOSTRequest {
    caseId: string;
    request: AddActionToCaseRequest;
}
export interface GetActionTimelineUsingGETRequest {
    caseId: string;
}
export interface GetCaseActionsUsingGETRequest {
    caseId: string;
    showDeleted?: boolean;
}
export interface MarkActionAsDeletedUsingDELETERequest {
    caseActionId: number;
    caseId: string;
    isDeleted: boolean;
}
export interface UpdateCaseActionUsingPUTRequest {
    caseActionId: number;
    caseId: string;
    request: UpdateCaseActionRequest;
}
/**
 *
 */
export declare class CaseActionsControllerApi extends runtime.BaseAPI {
    /**
     * addActionToCaseV2
     */
    addActionToCaseV2UsingPOSTRaw(requestParameters: AddActionToCaseV2UsingPOSTRequest): Promise<runtime.ApiResponse<AddActionToCaseResponse>>;
    /**
     * addActionToCaseV2
     */
    addActionToCaseV2UsingPOST(requestParameters: AddActionToCaseV2UsingPOSTRequest): Promise<AddActionToCaseResponse>;
    /**
     * getActionTimeline
     */
    getActionTimelineUsingGETRaw(requestParameters: GetActionTimelineUsingGETRequest): Promise<runtime.ApiResponse<GetCaseActionTimelineResponse>>;
    /**
     * getActionTimeline
     */
    getActionTimelineUsingGET(requestParameters: GetActionTimelineUsingGETRequest): Promise<GetCaseActionTimelineResponse>;
    /**
     * getAllActions
     */
    getAllActionsUsingGETRaw(): Promise<runtime.ApiResponse<GetCaseActionTypesResponse>>;
    /**
     * getAllActions
     */
    getAllActionsUsingGET(): Promise<GetCaseActionTypesResponse>;
    /**
     * getCaseActions
     */
    getCaseActionsUsingGETRaw(requestParameters: GetCaseActionsUsingGETRequest): Promise<runtime.ApiResponse<GetCaseActionResponse>>;
    /**
     * getCaseActions
     */
    getCaseActionsUsingGET(requestParameters: GetCaseActionsUsingGETRequest): Promise<GetCaseActionResponse>;
    /**
     * markActionAsDeleted
     */
    markActionAsDeletedUsingDELETERaw(requestParameters: MarkActionAsDeletedUsingDELETERequest): Promise<runtime.ApiResponse<MarkActionAsDeletedResponse>>;
    /**
     * markActionAsDeleted
     */
    markActionAsDeletedUsingDELETE(requestParameters: MarkActionAsDeletedUsingDELETERequest): Promise<MarkActionAsDeletedResponse>;
    /**
     * updateCaseAction
     */
    updateCaseActionUsingPUTRaw(requestParameters: UpdateCaseActionUsingPUTRequest): Promise<runtime.ApiResponse<UpdateCaseActionResponse>>;
    /**
     * updateCaseAction
     */
    updateCaseActionUsingPUT(requestParameters: UpdateCaseActionUsingPUTRequest): Promise<UpdateCaseActionResponse>;
}
