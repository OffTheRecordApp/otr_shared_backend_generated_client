/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { AddCourtRequestToJSON, FindCourtsWithNoCoverageResponseFromJSON, FindsCourtsResponseFromJSON, GetCourtResponseFromJSON, GetCourtsByQueryResponseFromJSON, UpdateCourtRequestToJSON, UpsertAddressRequestToJSON, } from '../models';
/**
 *
 */
export class CourtControllerApi extends runtime.BaseAPI {
    /**
     * addCourt
     */
    addCourtUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling addCourtUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/courts`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: AddCourtRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * addCourt
     */
    addCourtUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.addCourtUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * findCourts
     */
    findCourtsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.citationId !== undefined) {
                queryParameters['citationId'] = requestParameters.citationId;
            }
            if (requestParameters.city !== undefined) {
                queryParameters['city'] = requestParameters.city;
            }
            if (requestParameters.countryCode !== undefined) {
                queryParameters['countryCode'] = requestParameters.countryCode;
            }
            if (requestParameters.county !== undefined) {
                queryParameters['county'] = requestParameters.county;
            }
            if (requestParameters.length !== undefined) {
                queryParameters['length'] = requestParameters.length;
            }
            if (requestParameters.offset !== undefined) {
                queryParameters['offset'] = requestParameters.offset;
            }
            if (requestParameters.q !== undefined) {
                queryParameters['q'] = requestParameters.q;
            }
            if (requestParameters.regionCode !== undefined) {
                queryParameters['regionCode'] = requestParameters.regionCode;
            }
            if (requestParameters.state !== undefined) {
                queryParameters['state'] = requestParameters.state;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v2/courts/traffic`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => FindsCourtsResponseFromJSON(jsonValue));
        });
    }
    /**
     * findCourts
     */
    findCourtsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.findCourtsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * findCourtsWithNoCoverage
     */
    findCourtsWithNoCoverageUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.countryCode !== undefined) {
                queryParameters['countryCode'] = requestParameters.countryCode;
            }
            if (requestParameters.countyId !== undefined) {
                queryParameters['countyId'] = requestParameters.countyId;
            }
            if (requestParameters.regionCode !== undefined) {
                queryParameters['regionCode'] = requestParameters.regionCode;
            }
            if (requestParameters.trailingDays !== undefined) {
                queryParameters['trailingDays'] = requestParameters.trailingDays;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/courts/no-coverage`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => FindCourtsWithNoCoverageResponseFromJSON(jsonValue));
        });
    }
    /**
     * findCourtsWithNoCoverage
     */
    findCourtsWithNoCoverageUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.findCourtsWithNoCoverageUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getCourt
     */
    getCourtUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.courtId === null || requestParameters.courtId === undefined) {
                throw new runtime.RequiredError('courtId', 'Required parameter requestParameters.courtId was null or undefined when calling getCourtUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/courts/{courtId}`.replace(`{${"courtId"}}`, encodeURIComponent(String(requestParameters.courtId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetCourtResponseFromJSON(jsonValue));
        });
    }
    /**
     * getCourt
     */
    getCourtUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getCourtUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * searchCourts
     */
    searchCourtsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.citationId !== undefined) {
                queryParameters['citationId'] = requestParameters.citationId;
            }
            if (requestParameters.city !== undefined) {
                queryParameters['city'] = requestParameters.city;
            }
            if (requestParameters.countryCode !== undefined) {
                queryParameters['countryCode'] = requestParameters.countryCode;
            }
            if (requestParameters.county !== undefined) {
                queryParameters['county'] = requestParameters.county;
            }
            if (requestParameters.length !== undefined) {
                queryParameters['length'] = requestParameters.length;
            }
            if (requestParameters.offset !== undefined) {
                queryParameters['offset'] = requestParameters.offset;
            }
            if (requestParameters.q !== undefined) {
                queryParameters['q'] = requestParameters.q;
            }
            if (requestParameters.regionCode !== undefined) {
                queryParameters['regionCode'] = requestParameters.regionCode;
            }
            if (requestParameters.state !== undefined) {
                queryParameters['state'] = requestParameters.state;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/courts/traffic`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetCourtsByQueryResponseFromJSON(jsonValue));
        });
    }
    /**
     * searchCourts
     */
    searchCourtsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.searchCourtsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * updateCourtAddress
     */
    updateCourtAddressUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.addressId === null || requestParameters.addressId === undefined) {
                throw new runtime.RequiredError('addressId', 'Required parameter requestParameters.addressId was null or undefined when calling updateCourtAddressUsingPUT.');
            }
            if (requestParameters.courtId === null || requestParameters.courtId === undefined) {
                throw new runtime.RequiredError('courtId', 'Required parameter requestParameters.courtId was null or undefined when calling updateCourtAddressUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateCourtAddressUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/courts/{courtId}/addresses/{addressId}`.replace(`{${"addressId"}}`, encodeURIComponent(String(requestParameters.addressId))).replace(`{${"courtId"}}`, encodeURIComponent(String(requestParameters.courtId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpsertAddressRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updateCourtAddress
     */
    updateCourtAddressUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updateCourtAddressUsingPUTRaw(requestParameters);
        });
    }
    /**
     * updateCourt
     */
    updateCourtUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.courtId === null || requestParameters.courtId === undefined) {
                throw new runtime.RequiredError('courtId', 'Required parameter requestParameters.courtId was null or undefined when calling updateCourtUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateCourtUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/courts/{courtId}`.replace(`{${"courtId"}}`, encodeURIComponent(String(requestParameters.courtId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateCourtRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * updateCourt
     */
    updateCourtUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updateCourtUsingPUTRaw(requestParameters);
        });
    }
}
/**
    * @export
    * @enum {string}
    */
export var FindCourtsUsingGETStateEnum;
(function (FindCourtsUsingGETStateEnum) {
    FindCourtsUsingGETStateEnum["AK"] = "AK";
    FindCourtsUsingGETStateEnum["AL"] = "AL";
    FindCourtsUsingGETStateEnum["AR"] = "AR";
    FindCourtsUsingGETStateEnum["AZ"] = "AZ";
    FindCourtsUsingGETStateEnum["CA"] = "CA";
    FindCourtsUsingGETStateEnum["CO"] = "CO";
    FindCourtsUsingGETStateEnum["CT"] = "CT";
    FindCourtsUsingGETStateEnum["DC"] = "DC";
    FindCourtsUsingGETStateEnum["DE"] = "DE";
    FindCourtsUsingGETStateEnum["FL"] = "FL";
    FindCourtsUsingGETStateEnum["GA"] = "GA";
    FindCourtsUsingGETStateEnum["HI"] = "HI";
    FindCourtsUsingGETStateEnum["IA"] = "IA";
    FindCourtsUsingGETStateEnum["ID"] = "ID";
    FindCourtsUsingGETStateEnum["IL"] = "IL";
    FindCourtsUsingGETStateEnum["IN"] = "IN";
    FindCourtsUsingGETStateEnum["KS"] = "KS";
    FindCourtsUsingGETStateEnum["KY"] = "KY";
    FindCourtsUsingGETStateEnum["LA"] = "LA";
    FindCourtsUsingGETStateEnum["MA"] = "MA";
    FindCourtsUsingGETStateEnum["MD"] = "MD";
    FindCourtsUsingGETStateEnum["ME"] = "ME";
    FindCourtsUsingGETStateEnum["MI"] = "MI";
    FindCourtsUsingGETStateEnum["MN"] = "MN";
    FindCourtsUsingGETStateEnum["MO"] = "MO";
    FindCourtsUsingGETStateEnum["MS"] = "MS";
    FindCourtsUsingGETStateEnum["MT"] = "MT";
    FindCourtsUsingGETStateEnum["NC"] = "NC";
    FindCourtsUsingGETStateEnum["ND"] = "ND";
    FindCourtsUsingGETStateEnum["NE"] = "NE";
    FindCourtsUsingGETStateEnum["NH"] = "NH";
    FindCourtsUsingGETStateEnum["NJ"] = "NJ";
    FindCourtsUsingGETStateEnum["NM"] = "NM";
    FindCourtsUsingGETStateEnum["NV"] = "NV";
    FindCourtsUsingGETStateEnum["NY"] = "NY";
    FindCourtsUsingGETStateEnum["OH"] = "OH";
    FindCourtsUsingGETStateEnum["OK"] = "OK";
    FindCourtsUsingGETStateEnum["OR"] = "OR";
    FindCourtsUsingGETStateEnum["PA"] = "PA";
    FindCourtsUsingGETStateEnum["RI"] = "RI";
    FindCourtsUsingGETStateEnum["SC"] = "SC";
    FindCourtsUsingGETStateEnum["SD"] = "SD";
    FindCourtsUsingGETStateEnum["TN"] = "TN";
    FindCourtsUsingGETStateEnum["TX"] = "TX";
    FindCourtsUsingGETStateEnum["UT"] = "UT";
    FindCourtsUsingGETStateEnum["VA"] = "VA";
    FindCourtsUsingGETStateEnum["VT"] = "VT";
    FindCourtsUsingGETStateEnum["WA"] = "WA";
    FindCourtsUsingGETStateEnum["WI"] = "WI";
    FindCourtsUsingGETStateEnum["WV"] = "WV";
    FindCourtsUsingGETStateEnum["WY"] = "WY";
})(FindCourtsUsingGETStateEnum || (FindCourtsUsingGETStateEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var SearchCourtsUsingGETStateEnum;
(function (SearchCourtsUsingGETStateEnum) {
    SearchCourtsUsingGETStateEnum["AK"] = "AK";
    SearchCourtsUsingGETStateEnum["AL"] = "AL";
    SearchCourtsUsingGETStateEnum["AR"] = "AR";
    SearchCourtsUsingGETStateEnum["AZ"] = "AZ";
    SearchCourtsUsingGETStateEnum["CA"] = "CA";
    SearchCourtsUsingGETStateEnum["CO"] = "CO";
    SearchCourtsUsingGETStateEnum["CT"] = "CT";
    SearchCourtsUsingGETStateEnum["DC"] = "DC";
    SearchCourtsUsingGETStateEnum["DE"] = "DE";
    SearchCourtsUsingGETStateEnum["FL"] = "FL";
    SearchCourtsUsingGETStateEnum["GA"] = "GA";
    SearchCourtsUsingGETStateEnum["HI"] = "HI";
    SearchCourtsUsingGETStateEnum["IA"] = "IA";
    SearchCourtsUsingGETStateEnum["ID"] = "ID";
    SearchCourtsUsingGETStateEnum["IL"] = "IL";
    SearchCourtsUsingGETStateEnum["IN"] = "IN";
    SearchCourtsUsingGETStateEnum["KS"] = "KS";
    SearchCourtsUsingGETStateEnum["KY"] = "KY";
    SearchCourtsUsingGETStateEnum["LA"] = "LA";
    SearchCourtsUsingGETStateEnum["MA"] = "MA";
    SearchCourtsUsingGETStateEnum["MD"] = "MD";
    SearchCourtsUsingGETStateEnum["ME"] = "ME";
    SearchCourtsUsingGETStateEnum["MI"] = "MI";
    SearchCourtsUsingGETStateEnum["MN"] = "MN";
    SearchCourtsUsingGETStateEnum["MO"] = "MO";
    SearchCourtsUsingGETStateEnum["MS"] = "MS";
    SearchCourtsUsingGETStateEnum["MT"] = "MT";
    SearchCourtsUsingGETStateEnum["NC"] = "NC";
    SearchCourtsUsingGETStateEnum["ND"] = "ND";
    SearchCourtsUsingGETStateEnum["NE"] = "NE";
    SearchCourtsUsingGETStateEnum["NH"] = "NH";
    SearchCourtsUsingGETStateEnum["NJ"] = "NJ";
    SearchCourtsUsingGETStateEnum["NM"] = "NM";
    SearchCourtsUsingGETStateEnum["NV"] = "NV";
    SearchCourtsUsingGETStateEnum["NY"] = "NY";
    SearchCourtsUsingGETStateEnum["OH"] = "OH";
    SearchCourtsUsingGETStateEnum["OK"] = "OK";
    SearchCourtsUsingGETStateEnum["OR"] = "OR";
    SearchCourtsUsingGETStateEnum["PA"] = "PA";
    SearchCourtsUsingGETStateEnum["RI"] = "RI";
    SearchCourtsUsingGETStateEnum["SC"] = "SC";
    SearchCourtsUsingGETStateEnum["SD"] = "SD";
    SearchCourtsUsingGETStateEnum["TN"] = "TN";
    SearchCourtsUsingGETStateEnum["TX"] = "TX";
    SearchCourtsUsingGETStateEnum["UT"] = "UT";
    SearchCourtsUsingGETStateEnum["VA"] = "VA";
    SearchCourtsUsingGETStateEnum["VT"] = "VT";
    SearchCourtsUsingGETStateEnum["WA"] = "WA";
    SearchCourtsUsingGETStateEnum["WI"] = "WI";
    SearchCourtsUsingGETStateEnum["WV"] = "WV";
    SearchCourtsUsingGETStateEnum["WY"] = "WY";
})(SearchCourtsUsingGETStateEnum || (SearchCourtsUsingGETStateEnum = {}));
