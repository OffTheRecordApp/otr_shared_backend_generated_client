/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AssignCitationOwnerRequest, CreateCitationRequest, CreateCitationResponse, CreateReferralSourceForCitation, DeleteCitationResponse, DismissCitationsFromContactListRequest, GetAnonymousTicketUploads, GetCitationResponse, GetListOfCitationsWithMissingCourtResponse, GetNoViolationCitationsResponse, SignImageUrlRequest, SignImageUrlResponse, UpdateCitationAddressRequest, UpdateCitationPictureRequest, UpdateCitationRequest } from '../models';
export interface AssignCitationOwnerUsingPOSTRequest {
    citationId: number;
    request?: AssignCitationOwnerRequest;
}
export interface CreateNewCitationUsingPOSTRequest {
    request: CreateCitationRequest;
}
export interface CreateReferralSourceForCitationUsingPOSTRequest {
    citationId: string;
    request: CreateReferralSourceForCitation;
}
export interface DeleteCitationCourtUsingDELETERequest {
    citationId: number;
}
export interface DeleteCitationUsingDELETERequest {
    citationIdString: string;
}
export interface DeleteMissingCourtRecordUsingDELETERequest {
    citationId: number;
}
export interface DismissCitationsFromContactListUsingPOSTRequest {
    request: DismissCitationsFromContactListRequest;
}
export interface GetAnonymousTicketUploadsUsingGETRequest {
    emailAddress: string;
}
export interface GetCitationUsingGETRequest {
    citationIdString: string;
}
export interface GetNoViolationCitationsUsingGETRequest {
    regionCodes?: string;
    trailingDays?: number;
}
export interface PostMissingCourtForCitationUsingPOSTRequest {
    citationId: string;
    state: PostMissingCourtForCitationUsingPOSTStateEnum;
}
export interface SetCitationContactListFlagUsingPOSTRequest {
    citationIdString: string;
    isDismissed: boolean;
}
export interface SetLockForCitationUsingPUTRequest {
    citationId: number;
    isLocked: boolean;
}
export interface SignImageUrlUsingPOSTRequest {
    request: SignImageUrlRequest;
}
export interface ToggleDeleteCitationUsingDELETERequest {
    citationId: number;
    isDeleteRequest: boolean;
}
export interface UpdateCitationAddressUsingPOSTRequest {
    citationId: string;
    request: UpdateCitationAddressRequest;
}
export interface UpdateCitationPictureUsingPUTRequest {
    citationId: string;
    request: UpdateCitationPictureRequest;
}
export interface UpdateCitationUsingPUTRequest {
    citationIdString: string;
    updateCitationRequest: UpdateCitationRequest;
}
/**
 *
 */
export declare class CitationControllerApi extends runtime.BaseAPI {
    /**
     * assignCitationOwner
     */
    assignCitationOwnerUsingPOSTRaw(requestParameters: AssignCitationOwnerUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * assignCitationOwner
     */
    assignCitationOwnerUsingPOST(requestParameters: AssignCitationOwnerUsingPOSTRequest): Promise<object>;
    /**
     * createNewCitation
     */
    createNewCitationUsingPOSTRaw(requestParameters: CreateNewCitationUsingPOSTRequest): Promise<runtime.ApiResponse<CreateCitationResponse>>;
    /**
     * createNewCitation
     */
    createNewCitationUsingPOST(requestParameters: CreateNewCitationUsingPOSTRequest): Promise<CreateCitationResponse>;
    /**
     * createReferralSourceForCitation
     */
    createReferralSourceForCitationUsingPOSTRaw(requestParameters: CreateReferralSourceForCitationUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * createReferralSourceForCitation
     */
    createReferralSourceForCitationUsingPOST(requestParameters: CreateReferralSourceForCitationUsingPOSTRequest): Promise<void>;
    /**
     * deleteCitationCourt
     */
    deleteCitationCourtUsingDELETERaw(requestParameters: DeleteCitationCourtUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * deleteCitationCourt
     */
    deleteCitationCourtUsingDELETE(requestParameters: DeleteCitationCourtUsingDELETERequest): Promise<void>;
    /**
     * deleteCitation
     */
    deleteCitationUsingDELETERaw(requestParameters: DeleteCitationUsingDELETERequest): Promise<runtime.ApiResponse<DeleteCitationResponse>>;
    /**
     * deleteCitation
     */
    deleteCitationUsingDELETE(requestParameters: DeleteCitationUsingDELETERequest): Promise<DeleteCitationResponse>;
    /**
     * deleteMissingCourtRecord
     */
    deleteMissingCourtRecordUsingDELETERaw(requestParameters: DeleteMissingCourtRecordUsingDELETERequest): Promise<runtime.ApiResponse<GetListOfCitationsWithMissingCourtResponse>>;
    /**
     * deleteMissingCourtRecord
     */
    deleteMissingCourtRecordUsingDELETE(requestParameters: DeleteMissingCourtRecordUsingDELETERequest): Promise<GetListOfCitationsWithMissingCourtResponse>;
    /**
     * dismissCitationsFromContactList
     */
    dismissCitationsFromContactListUsingPOSTRaw(requestParameters: DismissCitationsFromContactListUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * dismissCitationsFromContactList
     */
    dismissCitationsFromContactListUsingPOST(requestParameters: DismissCitationsFromContactListUsingPOSTRequest): Promise<object>;
    /**
     * getAnonymousTicketUploads
     */
    getAnonymousTicketUploadsUsingGETRaw(requestParameters: GetAnonymousTicketUploadsUsingGETRequest): Promise<runtime.ApiResponse<GetAnonymousTicketUploads>>;
    /**
     * getAnonymousTicketUploads
     */
    getAnonymousTicketUploadsUsingGET(requestParameters: GetAnonymousTicketUploadsUsingGETRequest): Promise<GetAnonymousTicketUploads>;
    /**
     * getCitation
     */
    getCitationUsingGETRaw(requestParameters: GetCitationUsingGETRequest): Promise<runtime.ApiResponse<GetCitationResponse>>;
    /**
     * getCitation
     */
    getCitationUsingGET(requestParameters: GetCitationUsingGETRequest): Promise<GetCitationResponse>;
    /**
     * getListOfCitationsWithMissingCourt
     */
    getListOfCitationsWithMissingCourtUsingGETRaw(): Promise<runtime.ApiResponse<GetListOfCitationsWithMissingCourtResponse>>;
    /**
     * getListOfCitationsWithMissingCourt
     */
    getListOfCitationsWithMissingCourtUsingGET(): Promise<GetListOfCitationsWithMissingCourtResponse>;
    /**
     * getNoViolationCitations
     */
    getNoViolationCitationsUsingGETRaw(requestParameters: GetNoViolationCitationsUsingGETRequest): Promise<runtime.ApiResponse<GetNoViolationCitationsResponse>>;
    /**
     * getNoViolationCitations
     */
    getNoViolationCitationsUsingGET(requestParameters: GetNoViolationCitationsUsingGETRequest): Promise<GetNoViolationCitationsResponse>;
    /**
     * postMissingCourtForCitation
     */
    postMissingCourtForCitationUsingPOSTRaw(requestParameters: PostMissingCourtForCitationUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * postMissingCourtForCitation
     */
    postMissingCourtForCitationUsingPOST(requestParameters: PostMissingCourtForCitationUsingPOSTRequest): Promise<object>;
    /**
     * setCitationContactListFlag
     */
    setCitationContactListFlagUsingPOSTRaw(requestParameters: SetCitationContactListFlagUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * setCitationContactListFlag
     */
    setCitationContactListFlagUsingPOST(requestParameters: SetCitationContactListFlagUsingPOSTRequest): Promise<object>;
    /**
     * setLockForCitation
     */
    setLockForCitationUsingPUTRaw(requestParameters: SetLockForCitationUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * setLockForCitation
     */
    setLockForCitationUsingPUT(requestParameters: SetLockForCitationUsingPUTRequest): Promise<void>;
    /**
     * signImageUrl
     */
    signImageUrlUsingPOSTRaw(requestParameters: SignImageUrlUsingPOSTRequest): Promise<runtime.ApiResponse<SignImageUrlResponse>>;
    /**
     * signImageUrl
     */
    signImageUrlUsingPOST(requestParameters: SignImageUrlUsingPOSTRequest): Promise<SignImageUrlResponse>;
    /**
     * toggleDeleteCitation
     */
    toggleDeleteCitationUsingDELETERaw(requestParameters: ToggleDeleteCitationUsingDELETERequest): Promise<runtime.ApiResponse<DeleteCitationResponse>>;
    /**
     * toggleDeleteCitation
     */
    toggleDeleteCitationUsingDELETE(requestParameters: ToggleDeleteCitationUsingDELETERequest): Promise<DeleteCitationResponse>;
    /**
     * updateCitationAddress
     */
    updateCitationAddressUsingPOSTRaw(requestParameters: UpdateCitationAddressUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updateCitationAddress
     */
    updateCitationAddressUsingPOST(requestParameters: UpdateCitationAddressUsingPOSTRequest): Promise<void>;
    /**
     * updateCitationPicture
     */
    updateCitationPictureUsingPUTRaw(requestParameters: UpdateCitationPictureUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updateCitationPicture
     */
    updateCitationPictureUsingPUT(requestParameters: UpdateCitationPictureUsingPUTRequest): Promise<void>;
    /**
     * updateCitation
     */
    updateCitationUsingPUTRaw(requestParameters: UpdateCitationUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updateCitation
     */
    updateCitationUsingPUT(requestParameters: UpdateCitationUsingPUTRequest): Promise<void>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PostMissingCourtForCitationUsingPOSTStateEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
