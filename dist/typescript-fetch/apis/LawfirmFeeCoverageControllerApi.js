/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { AccountLevelFeeRequestToJSON, AccountLevelFeeResponseFromJSON, EnableViolationsForLawfirmRequestToJSON, EnableViolationsForLawfirmResponseFromJSON, GetLawfirmCoverageResponseFromJSON, GetLawfirmFeeCoverageResponseFromJSON, PostCourtCoverageRequestToJSON, RemoveCoverageRequestToJSON, ResetFeesForLawfirmRequestToJSON, ResetFeesForLawfirmResponseFromJSON, } from '../models';
/**
 *
 */
export class LawfirmFeeCoverageControllerApi extends runtime.BaseAPI {
    /**
     * addCourtToCoverage
     */
    addCourtToCoverageUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmIdString === null || requestParameters.lawfirmIdString === undefined) {
                throw new runtime.RequiredError('lawfirmIdString', 'Required parameter requestParameters.lawfirmIdString was null or undefined when calling addCourtToCoverageUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling addCourtToCoverageUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmIdString}/courts`.replace(`{${"lawfirmIdString"}}`, encodeURIComponent(String(requestParameters.lawfirmIdString))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: PostCourtCoverageRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * addCourtToCoverage
     */
    addCourtToCoverageUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.addCourtToCoverageUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * enableViolationsForLawfirm
     */
    enableViolationsForLawfirmUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling enableViolationsForLawfirmUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling enableViolationsForLawfirmUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/account-fees/enable-violations`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: EnableViolationsForLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => EnableViolationsForLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * enableViolationsForLawfirm
     */
    enableViolationsForLawfirmUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.enableViolationsForLawfirmUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getAccountFees
     */
    getAccountFeesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getAccountFeesUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.enabledFeesOnly !== undefined) {
                queryParameters['enabledFeesOnly'] = requestParameters.enabledFeesOnly;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/account-fees`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => AccountLevelFeeResponseFromJSON(jsonValue));
        });
    }
    /**
     * getAccountFees
     */
    getAccountFeesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getAccountFeesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmCoverage
     */
    getLawfirmCoverageUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmIdString === null || requestParameters.lawfirmIdString === undefined) {
                throw new runtime.RequiredError('lawfirmIdString', 'Required parameter requestParameters.lawfirmIdString was null or undefined when calling getLawfirmCoverageUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmIdString}/coverage`.replace(`{${"lawfirmIdString"}}`, encodeURIComponent(String(requestParameters.lawfirmIdString))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmCoverageResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmCoverage
     */
    getLawfirmCoverageUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmCoverageUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmFeeCoverage
     */
    getLawfirmFeeCoverageUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getLawfirmFeeCoverageUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.legalServiceType !== undefined) {
                queryParameters['legalServiceType'] = requestParameters.legalServiceType;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v2/lawfirms/{lawfirmId}/coverage`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmFeeCoverageResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmFeeCoverage
     */
    getLawfirmFeeCoverageUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmFeeCoverageUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * removeAccountFees
     */
    removeAccountFeesUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling removeAccountFeesUsingDELETE.');
            }
            const queryParameters = {};
            if (requestParameters.classification !== undefined) {
                queryParameters['classification'] = requestParameters.classification;
            }
            if (requestParameters.isPermitted !== undefined) {
                queryParameters['isPermitted'] = requestParameters.isPermitted;
            }
            if (requestParameters.regionCode !== undefined) {
                queryParameters['regionCode'] = requestParameters.regionCode;
            }
            if (requestParameters.violationId !== undefined) {
                queryParameters['violationId'] = requestParameters.violationId;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/account-fees`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * removeAccountFees
     */
    removeAccountFeesUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.removeAccountFeesUsingDELETERaw(requestParameters);
        });
    }
    /**
     * removeCourts
     */
    removeCourtsUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.courtsToRemove === null || requestParameters.courtsToRemove === undefined) {
                throw new runtime.RequiredError('courtsToRemove', 'Required parameter requestParameters.courtsToRemove was null or undefined when calling removeCourtsUsingDELETE.');
            }
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling removeCourtsUsingDELETE.');
            }
            const queryParameters = {};
            if (requestParameters.courtsToRemove !== undefined) {
                queryParameters['courtsToRemove'] = requestParameters.courtsToRemove;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/courts`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * removeCourts
     */
    removeCourtsUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.removeCourtsUsingDELETERaw(requestParameters);
        });
    }
    /**
     * removeCoverage
     */
    removeCoverageUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling removeCoverageUsingDELETE.');
            }
            if (requestParameters.courtsToRemove === null || requestParameters.courtsToRemove === undefined) {
                throw new runtime.RequiredError('courtsToRemove', 'Required parameter requestParameters.courtsToRemove was null or undefined when calling removeCoverageUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v2/lawfirms/{lawfirmId}/courts`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: RemoveCoverageRequestToJSON(requestParameters.courtsToRemove),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * removeCoverage
     */
    removeCoverageUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.removeCoverageUsingDELETERaw(requestParameters);
        });
    }
    /**
     * resetFeesForLawfirm
     */
    resetFeesForLawfirmUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling resetFeesForLawfirmUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling resetFeesForLawfirmUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/account-fees/reset`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ResetFeesForLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => ResetFeesForLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * resetFeesForLawfirm
     */
    resetFeesForLawfirmUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.resetFeesForLawfirmUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * saveAccountFees
     */
    saveAccountFeesUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling saveAccountFeesUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling saveAccountFeesUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/account-fees`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: AccountLevelFeeRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * saveAccountFees
     */
    saveAccountFeesUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveAccountFeesUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
}
/**
    * @export
    * @enum {string}
    */
export var GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum;
(function (GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum) {
    GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum["DEFER"] = "DEFER";
    GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum["FIGHT"] = "FIGHT";
})(GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum || (GetLawfirmFeeCoverageUsingGETLegalServiceTypeEnum = {}));
/**
    * @export
    * @enum {string}
    */
export var RemoveAccountFeesUsingDELETEClassificationEnum;
(function (RemoveAccountFeesUsingDELETEClassificationEnum) {
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS1FELONY"] = "CLASS_1_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS1MISDEMEANOR"] = "CLASS_1_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS2FELONY"] = "CLASS_2_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS2MISDEMEANOR"] = "CLASS_2_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS3FELONY"] = "CLASS_3_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS3MISDEMEANOR"] = "CLASS_3_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS4FELONY"] = "CLASS_4_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS4MISDEMEANOR"] = "CLASS_4_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS5FELONY"] = "CLASS_5_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASS6FELONY"] = "CLASS_6_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSA1MISDEMEANOR"] = "CLASS_A1_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSAFELONY"] = "CLASS_A_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSAINFRACTION"] = "CLASS_A_INFRACTION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSAMISDEMEANOR"] = "CLASS_A_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSAVIOLATION"] = "CLASS_A_VIOLATION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSBFELONY"] = "CLASS_B_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSBINFRACTION"] = "CLASS_B_INFRACTION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSBMISDEMEANOR"] = "CLASS_B_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSBVIOLATION"] = "CLASS_B_VIOLATION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSCFELONY"] = "CLASS_C_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSCINFRACTION"] = "CLASS_C_INFRACTION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSCMISDEMEANOR"] = "CLASS_C_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSCVIOLATION"] = "CLASS_C_VIOLATION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSDFELONY"] = "CLASS_D_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSDMISDEMEANOR"] = "CLASS_D_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSDVIOLATION"] = "CLASS_D_VIOLATION";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSEFELONY"] = "CLASS_E_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSFFELONY"] = "CLASS_F_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["CLASSHFELONY"] = "CLASS_H_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["DISORDERLYPERSONSOFFENSE"] = "DISORDERLY_PERSONS_OFFENSE";
    RemoveAccountFeesUsingDELETEClassificationEnum["FELONY"] = "FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["FELONY1STDEGREE"] = "FELONY_1ST_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["FELONY2NDDEGREE"] = "FELONY_2ND_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["FELONY3RDDEGREE"] = "FELONY_3RD_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["FELONY4THDEGREE"] = "FELONY_4TH_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["FELONY5THDEGREE"] = "FELONY_5TH_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["GROSSMISDEMEANOR"] = "GROSS_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["HIGHANDAGGRAVATEDMISDEMEANOR"] = "HIGH_AND_AGGRAVATED_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["INFRACTION"] = "INFRACTION";
    RemoveAccountFeesUsingDELETEClassificationEnum["LEVEL4FELONY"] = "LEVEL_4_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["LEVEL5FELONY"] = "LEVEL_5_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["LEVEL6FELONY"] = "LEVEL_6_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["MINORMISDEMEANOR"] = "MINOR_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["MISDEMEANOR"] = "MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["MISDEMEANOR1STDEGREE"] = "MISDEMEANOR_1ST_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["MISDEMEANOR2NDDEGREE"] = "MISDEMEANOR_2ND_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["MISDEMEANOR3RDDEGREE"] = "MISDEMEANOR_3RD_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["MISDEMEANOR4THDEGREE"] = "MISDEMEANOR_4TH_DEGREE";
    RemoveAccountFeesUsingDELETEClassificationEnum["MISDEMEANORWITHREFUND"] = "MISDEMEANOR_WITH_REFUND";
    RemoveAccountFeesUsingDELETEClassificationEnum["NONMOVING"] = "NON_MOVING";
    RemoveAccountFeesUsingDELETEClassificationEnum["NONREPORTABLE"] = "NON_REPORTABLE";
    RemoveAccountFeesUsingDELETEClassificationEnum["PETTYMISDEMEANOR"] = "PETTY_MISDEMEANOR";
    RemoveAccountFeesUsingDELETEClassificationEnum["QUASICRIMINAL"] = "QUASI_CRIMINAL";
    RemoveAccountFeesUsingDELETEClassificationEnum["SUMMARYOFFENSE"] = "SUMMARY_OFFENSE";
    RemoveAccountFeesUsingDELETEClassificationEnum["SUMMARYOFFENSENOREFUND"] = "SUMMARY_OFFENSE_NO_REFUND";
    RemoveAccountFeesUsingDELETEClassificationEnum["WOBBLERTOFELONY"] = "WOBBLER_TO_FELONY";
    RemoveAccountFeesUsingDELETEClassificationEnum["WOBBLERTOMISDEMEANOR"] = "WOBBLER_TO_MISDEMEANOR";
})(RemoveAccountFeesUsingDELETEClassificationEnum || (RemoveAccountFeesUsingDELETEClassificationEnum = {}));
