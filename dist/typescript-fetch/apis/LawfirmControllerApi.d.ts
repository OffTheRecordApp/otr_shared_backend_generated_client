/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CreateNewLawfirmRequest, GetLawfirmAddressesResponse, GetLawfirmCaseStatsResponse, GetLawfirmInboxMessagesResponse, GetLawfirmJobTitleResponse, GetLawfirmLawyersResponse, GetLawfirmResponse, GetLawfirmSupportedStatesResponse, GetLawfirmsResponse, GetStripeConnectedAccountsResponse, LawfirmPictureRequest, LawfirmVacationRequest, UpdateLawfirmPaymentModelRequest, UpdateLawfirmRequest, UpdateLawyerRoleRequest, UpsertAddressRequest } from '../models';
export interface AddLawfirmAddressUsingPOSTRequest {
    lawfirmId: number;
    request: UpsertAddressRequest;
}
export interface CreateLawfirmUsingPOSTRequest {
    request: CreateNewLawfirmRequest;
}
export interface DeleteLawfirmConnectedAccountUsingDELETERequest {
    lawfirmId: number;
    stripeAccountId: string;
}
export interface DeleteLawfirmCoverPhotoUsingDELETERequest {
    lawfirmId: string;
}
export interface GetInboxMessagesUsingGETRequest {
    lawfirmId: number;
    caseStatuses?: GetInboxMessagesUsingGETCaseStatusesEnum;
    courtDateFilter?: GetInboxMessagesUsingGETCourtDateFilterEnum;
    filter?: GetInboxMessagesUsingGETFilterEnum;
    latestMessageBy?: GetInboxMessagesUsingGETLatestMessageByEnum;
    length?: number;
    page?: number;
    query?: string;
    statusCategories?: GetInboxMessagesUsingGETStatusCategoriesEnum;
}
export interface GetLawfirmAddressesUsingGETRequest {
    lawfirmId: number;
}
export interface GetLawfirmByUrlUsingGETRequest {
    seoUrl: string;
}
export interface GetLawfirmCaseStatsUsingGETRequest {
    lawfirmId: number;
}
export interface GetLawfirmLawyersUsingGETRequest {
    lawfirmId: number;
}
export interface GetLawfirmUsingGETRequest {
    lawfirmIdString: string;
    isDetailsRequired?: boolean;
}
export interface GetLawfirmsUsingGETRequest {
    acceptsAccidentTickets?: boolean;
    acceptsPastDueTickets?: boolean;
    includeTestLawfirms?: boolean;
    includeVacationMode?: boolean;
    q?: string;
    states?: GetLawfirmsUsingGETStatesEnum;
    statuses?: GetLawfirmsUsingGETStatusesEnum;
}
export interface GetOtrLawfirmNotesUsingGETRequest {
    lawfirmId: string;
}
export interface GetStripeConnectedAccountsUsingGETRequest {
    lawfirmId: number;
}
export interface GetSupportedStatesForLawfirmUsingGETRequest {
    lawfirmId: number;
}
export interface SetVacationModeUsingPOSTRequest {
    lawfirmId: number;
    request: LawfirmVacationRequest;
}
export interface UpdateLawfirmAddressUsingPUTRequest {
    addressId: number;
    lawfirmId: number;
    request: UpsertAddressRequest;
}
export interface UpdateLawfirmUsingPUTRequest {
    lawfirmIdString: string;
    request: UpdateLawfirmRequest;
}
export interface UpdateLawfirmWithPictureUsingPUTRequest {
    lawfirmId: string;
    request: LawfirmPictureRequest;
}
export interface UpdateLawyerRoleUsingPUTRequest {
    lawfirmId: number;
    userId: number;
    request: UpdateLawyerRoleRequest;
}
export interface UpdatePaymentModelUsingPUTRequest {
    lawfirmId: number;
    request: UpdateLawfirmPaymentModelRequest;
}
/**
 *
 */
export declare class LawfirmControllerApi extends runtime.BaseAPI {
    /**
     * addLawfirmAddress
     */
    addLawfirmAddressUsingPOSTRaw(requestParameters: AddLawfirmAddressUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * addLawfirmAddress
     */
    addLawfirmAddressUsingPOST(requestParameters: AddLawfirmAddressUsingPOSTRequest): Promise<void>;
    /**
     * createLawfirm
     */
    createLawfirmUsingPOSTRaw(requestParameters: CreateLawfirmUsingPOSTRequest): Promise<runtime.ApiResponse<GetLawfirmResponse>>;
    /**
     * createLawfirm
     */
    createLawfirmUsingPOST(requestParameters: CreateLawfirmUsingPOSTRequest): Promise<GetLawfirmResponse>;
    /**
     * deleteLawfirmConnectedAccount
     */
    deleteLawfirmConnectedAccountUsingDELETERaw(requestParameters: DeleteLawfirmConnectedAccountUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * deleteLawfirmConnectedAccount
     */
    deleteLawfirmConnectedAccountUsingDELETE(requestParameters: DeleteLawfirmConnectedAccountUsingDELETERequest): Promise<void>;
    /**
     * deleteLawfirmCoverPhoto
     */
    deleteLawfirmCoverPhotoUsingDELETERaw(requestParameters: DeleteLawfirmCoverPhotoUsingDELETERequest): Promise<runtime.ApiResponse<object>>;
    /**
     * deleteLawfirmCoverPhoto
     */
    deleteLawfirmCoverPhotoUsingDELETE(requestParameters: DeleteLawfirmCoverPhotoUsingDELETERequest): Promise<object>;
    /**
     * getInboxMessages
     */
    getInboxMessagesUsingGETRaw(requestParameters: GetInboxMessagesUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmInboxMessagesResponse>>;
    /**
     * getInboxMessages
     */
    getInboxMessagesUsingGET(requestParameters: GetInboxMessagesUsingGETRequest): Promise<GetLawfirmInboxMessagesResponse>;
    /**
     * getLawfirmAddresses
     */
    getLawfirmAddressesUsingGETRaw(requestParameters: GetLawfirmAddressesUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmAddressesResponse>>;
    /**
     * getLawfirmAddresses
     */
    getLawfirmAddressesUsingGET(requestParameters: GetLawfirmAddressesUsingGETRequest): Promise<GetLawfirmAddressesResponse>;
    /**
     * getLawfirmByUrl
     */
    getLawfirmByUrlUsingGETRaw(requestParameters: GetLawfirmByUrlUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmResponse>>;
    /**
     * getLawfirmByUrl
     */
    getLawfirmByUrlUsingGET(requestParameters: GetLawfirmByUrlUsingGETRequest): Promise<GetLawfirmResponse>;
    /**
     * getLawfirmCaseStats
     */
    getLawfirmCaseStatsUsingGETRaw(requestParameters: GetLawfirmCaseStatsUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmCaseStatsResponse>>;
    /**
     * getLawfirmCaseStats
     */
    getLawfirmCaseStatsUsingGET(requestParameters: GetLawfirmCaseStatsUsingGETRequest): Promise<GetLawfirmCaseStatsResponse>;
    /**
     * getLawfirmJobTitles
     */
    getLawfirmJobTitlesUsingGETRaw(): Promise<runtime.ApiResponse<GetLawfirmJobTitleResponse>>;
    /**
     * getLawfirmJobTitles
     */
    getLawfirmJobTitlesUsingGET(): Promise<GetLawfirmJobTitleResponse>;
    /**
     * getLawfirmLawyers
     */
    getLawfirmLawyersUsingGETRaw(requestParameters: GetLawfirmLawyersUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmLawyersResponse>>;
    /**
     * getLawfirmLawyers
     */
    getLawfirmLawyersUsingGET(requestParameters: GetLawfirmLawyersUsingGETRequest): Promise<GetLawfirmLawyersResponse>;
    /**
     * getLawfirmStatuses
     */
    getLawfirmStatusesUsingGETRaw(): Promise<runtime.ApiResponse<object>>;
    /**
     * getLawfirmStatuses
     */
    getLawfirmStatusesUsingGET(): Promise<object>;
    /**
     * getLawfirm
     */
    getLawfirmUsingGETRaw(requestParameters: GetLawfirmUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmResponse>>;
    /**
     * getLawfirm
     */
    getLawfirmUsingGET(requestParameters: GetLawfirmUsingGETRequest): Promise<GetLawfirmResponse>;
    /**
     * getLawfirms
     */
    getLawfirmsUsingGETRaw(requestParameters: GetLawfirmsUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmsResponse>>;
    /**
     * getLawfirms
     */
    getLawfirmsUsingGET(requestParameters: GetLawfirmsUsingGETRequest): Promise<GetLawfirmsResponse>;
    /**
     * getOtrLawfirmNotes
     */
    getOtrLawfirmNotesUsingGETRaw(requestParameters: GetOtrLawfirmNotesUsingGETRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * getOtrLawfirmNotes
     */
    getOtrLawfirmNotesUsingGET(requestParameters: GetOtrLawfirmNotesUsingGETRequest): Promise<object>;
    /**
     * getStripeConnectedAccounts
     */
    getStripeConnectedAccountsUsingGETRaw(requestParameters: GetStripeConnectedAccountsUsingGETRequest): Promise<runtime.ApiResponse<GetStripeConnectedAccountsResponse>>;
    /**
     * getStripeConnectedAccounts
     */
    getStripeConnectedAccountsUsingGET(requestParameters: GetStripeConnectedAccountsUsingGETRequest): Promise<GetStripeConnectedAccountsResponse>;
    /**
     * getSupportedStatesForLawfirm
     */
    getSupportedStatesForLawfirmUsingGETRaw(requestParameters: GetSupportedStatesForLawfirmUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmSupportedStatesResponse>>;
    /**
     * getSupportedStatesForLawfirm
     */
    getSupportedStatesForLawfirmUsingGET(requestParameters: GetSupportedStatesForLawfirmUsingGETRequest): Promise<GetLawfirmSupportedStatesResponse>;
    /**
     * setVacationMode
     */
    setVacationModeUsingPOSTRaw(requestParameters: SetVacationModeUsingPOSTRequest): Promise<runtime.ApiResponse<GetLawfirmResponse>>;
    /**
     * setVacationMode
     */
    setVacationModeUsingPOST(requestParameters: SetVacationModeUsingPOSTRequest): Promise<GetLawfirmResponse>;
    /**
     * updateLawfirmAddress
     */
    updateLawfirmAddressUsingPUTRaw(requestParameters: UpdateLawfirmAddressUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updateLawfirmAddress
     */
    updateLawfirmAddressUsingPUT(requestParameters: UpdateLawfirmAddressUsingPUTRequest): Promise<void>;
    /**
     * updateLawfirm
     */
    updateLawfirmUsingPUTRaw(requestParameters: UpdateLawfirmUsingPUTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * updateLawfirm
     */
    updateLawfirmUsingPUT(requestParameters: UpdateLawfirmUsingPUTRequest): Promise<object>;
    /**
     * updateLawfirmWithPicture
     */
    updateLawfirmWithPictureUsingPUTRaw(requestParameters: UpdateLawfirmWithPictureUsingPUTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * updateLawfirmWithPicture
     */
    updateLawfirmWithPictureUsingPUT(requestParameters: UpdateLawfirmWithPictureUsingPUTRequest): Promise<object>;
    /**
     * updateLawyerRole
     */
    updateLawyerRoleUsingPUTRaw(requestParameters: UpdateLawyerRoleUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updateLawyerRole
     */
    updateLawyerRoleUsingPUT(requestParameters: UpdateLawyerRoleUsingPUTRequest): Promise<void>;
    /**
     * updatePaymentModel
     */
    updatePaymentModelUsingPUTRaw(requestParameters: UpdatePaymentModelUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updatePaymentModel
     */
    updatePaymentModelUsingPUT(requestParameters: UpdatePaymentModelUsingPUTRequest): Promise<void>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetInboxMessagesUsingGETCaseStatusesEnum {
    AMENDEDDOWNWITHINCLASS = "AMENDED_DOWN_WITHIN_CLASS",
    AMENDEDFULLFINE = "AMENDED_FULL_FINE",
    AMENDEDINCREASEDFINE = "AMENDED_INCREASED_FINE",
    AMENDEDNOFINE = "AMENDED_NO_FINE",
    AMENDEDREDUCEDFINE = "AMENDED_REDUCED_FINE",
    AMENDEDTOINFRACTION = "AMENDED_TO_INFRACTION",
    AMENDEDTONMV = "AMENDED_TO_NMV",
    CANCELLEDATTORNEYATFAULT = "CANCELLED_ATTORNEY_AT_FAULT",
    CANCELLEDBYLAWFIRM = "CANCELLED_BY_LAWFIRM",
    CANCELLEDBYUSER = "CANCELLED_BY_USER",
    CANCELLEDDUPLICATE = "CANCELLED_DUPLICATE",
    CANCELLEDNMV = "CANCELLED_NMV",
    CANCELLEDNONPAYMENT = "CANCELLED_NON_PAYMENT",
    CANCELLEDNOLAWFIRM = "CANCELLED_NO_LAWFIRM",
    CANCELLEDOVERDUE = "CANCELLED_OVERDUE",
    CANCELLEDTOOSHORTNOTICE = "CANCELLED_TOO_SHORT_NOTICE",
    CASEINPROGRESS = "CASE_IN_PROGRESS",
    CLIENTCONFIRMED = "CLIENT_CONFIRMED",
    CLIENTCONFIRMEDUNPAID = "CLIENT_CONFIRMED_UNPAID",
    CLIENTFIREDLAWFIRM = "CLIENT_FIRED_LAWFIRM",
    CLIENTFORCEDLOSS = "CLIENT_FORCED_LOSS",
    CLIENTPAIDFINE = "CLIENT_PAID_FINE",
    CLIENTUNRESPONSIVE = "CLIENT_UNRESPONSIVE",
    DEFERRED = "DEFERRED",
    DISMISSED = "DISMISSED",
    DIVERSION = "DIVERSION",
    FEESDISPUTED = "FEES_DISPUTED",
    FINEREDUCTIONONLY = "FINE_REDUCTION_ONLY",
    LAWFIRMWITHDRAWN = "LAWFIRM_WITHDRAWN",
    LOST = "LOST",
    NOLAWFIRMAVAILABLE = "NO_LAWFIRM_AVAILABLE",
    POINTREDUCTION = "POINT_REDUCTION",
    REFUSEDBYLAWFIRM = "REFUSED_BY_LAWFIRM",
    RESOLVEDNONPAYMENT = "RESOLVED_NON_PAYMENT",
    STALE = "STALE",
    TRAFFICSCHOOL = "TRAFFIC_SCHOOL",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetInboxMessagesUsingGETCourtDateFilterEnum {
    NOCOURTDATE = "NO_COURT_DATE",
    PASTDUE = "PAST_DUE",
    PASTDUEANDNOCOURTDATE = "PAST_DUE_AND_NO_COURT_DATE",
    UPCOMING = "UPCOMING"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetInboxMessagesUsingGETFilterEnum {
    ARCHIVE = "ARCHIVE",
    DEFAULT = "DEFAULT",
    FLAGONLY = "FLAG_ONLY",
    STARONLY = "STAR_ONLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetInboxMessagesUsingGETLatestMessageByEnum {
    ADMIN = "ADMIN",
    CLIENT = "CLIENT",
    LAWYER = "LAWYER"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetInboxMessagesUsingGETStatusCategoriesEnum {
    ACTIVE = "ACTIVE",
    CANCELLED = "CANCELLED",
    RESOLVED = "RESOLVED",
    UNCONFIRMED = "UNCONFIRMED"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmsUsingGETStatesEnum {
    AK = "AK",
    AL = "AL",
    AR = "AR",
    AZ = "AZ",
    CA = "CA",
    CO = "CO",
    CT = "CT",
    DC = "DC",
    DE = "DE",
    FL = "FL",
    GA = "GA",
    HI = "HI",
    IA = "IA",
    ID = "ID",
    IL = "IL",
    IN = "IN",
    KS = "KS",
    KY = "KY",
    LA = "LA",
    MA = "MA",
    MD = "MD",
    ME = "ME",
    MI = "MI",
    MN = "MN",
    MO = "MO",
    MS = "MS",
    MT = "MT",
    NC = "NC",
    ND = "ND",
    NE = "NE",
    NH = "NH",
    NJ = "NJ",
    NM = "NM",
    NV = "NV",
    NY = "NY",
    OH = "OH",
    OK = "OK",
    OR = "OR",
    PA = "PA",
    RI = "RI",
    SC = "SC",
    SD = "SD",
    TN = "TN",
    TX = "TX",
    UT = "UT",
    VA = "VA",
    VT = "VT",
    WA = "WA",
    WI = "WI",
    WV = "WV",
    WY = "WY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetLawfirmsUsingGETStatusesEnum {
    ACCOUNTCLOSED = "ACCOUNT_CLOSED",
    DUPLICATE = "DUPLICATE",
    ESTABLISHED = "ESTABLISHED",
    FUTURELEAD = "FUTURE_LEAD",
    INTRIAL = "IN_TRIAL",
    LAWFIRMINTERESTED = "LAWFIRM_INTERESTED",
    LAWFIRMLEAD = "LAWFIRM_LEAD",
    LAWFIRMNOTINTERESTED = "LAWFIRM_NOT_INTERESTED",
    NOTINTERESTEDFEESPLITTINGETHICS = "NOT_INTERESTED_FEE_SPLITTING_ETHICS",
    NOTINTERESTEDREFUNDETHICS = "NOT_INTERESTED_REFUND_ETHICS",
    ONBOARDING = "ONBOARDING",
    TEMPORARILYTURNEDOFF = "TEMPORARILY_TURNED_OFF",
    TERMINATEDFRAUD = "TERMINATED_FRAUD",
    TERMINATEDPOORSERVICE = "TERMINATED_POOR_SERVICE",
    TERMINATEDPOORSUCCESS = "TERMINATED_POOR_SUCCESS",
    UNDERREVIEW = "UNDER_REVIEW"
}
