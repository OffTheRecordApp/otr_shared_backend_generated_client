/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AddCaseMessageResponse, AddNewCaseMessageRequest, EditConversationMessageRequest, GetCaseMessagesResponse, SetFlagOnMessagesRequest, SetStarOnMessagesRequest } from '../models';
export interface AddMessageToConversationUsingPOSTRequest {
    caseId: string;
    request: AddNewCaseMessageRequest;
}
export interface EditMessageUsingPUTRequest {
    caseId: string;
    messageId: number;
    request: EditConversationMessageRequest;
}
export interface GetConversationUsingGETRequest {
    caseId: string;
    includeActions?: boolean;
}
export interface GetMessageUsingGETRequest {
    caseId: string;
    messageId: number;
}
export interface MarkMessageAsDeletedUsingPUTRequest {
    caseId: string;
    isDeleted: boolean;
    messageId: number;
}
export interface SetFlagOnMessagesUsingPUTRequest {
    request: SetFlagOnMessagesRequest;
}
export interface SetStarOnMessagesUsingPUTRequest {
    request: SetStarOnMessagesRequest;
}
/**
 *
 */
export declare class ConversationControllerApi extends runtime.BaseAPI {
    /**
     * addMessageToConversation
     */
    addMessageToConversationUsingPOSTRaw(requestParameters: AddMessageToConversationUsingPOSTRequest): Promise<runtime.ApiResponse<AddCaseMessageResponse>>;
    /**
     * addMessageToConversation
     */
    addMessageToConversationUsingPOST(requestParameters: AddMessageToConversationUsingPOSTRequest): Promise<AddCaseMessageResponse>;
    /**
     * editMessage
     */
    editMessageUsingPUTRaw(requestParameters: EditMessageUsingPUTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * editMessage
     */
    editMessageUsingPUT(requestParameters: EditMessageUsingPUTRequest): Promise<object>;
    /**
     * getConversation
     */
    getConversationUsingGETRaw(requestParameters: GetConversationUsingGETRequest): Promise<runtime.ApiResponse<GetCaseMessagesResponse>>;
    /**
     * getConversation
     */
    getConversationUsingGET(requestParameters: GetConversationUsingGETRequest): Promise<GetCaseMessagesResponse>;
    /**
     * getMessage
     */
    getMessageUsingGETRaw(requestParameters: GetMessageUsingGETRequest): Promise<runtime.ApiResponse<GetCaseMessagesResponse>>;
    /**
     * getMessage
     */
    getMessageUsingGET(requestParameters: GetMessageUsingGETRequest): Promise<GetCaseMessagesResponse>;
    /**
     * markMessageAsDeleted
     */
    markMessageAsDeletedUsingPUTRaw(requestParameters: MarkMessageAsDeletedUsingPUTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * markMessageAsDeleted
     */
    markMessageAsDeletedUsingPUT(requestParameters: MarkMessageAsDeletedUsingPUTRequest): Promise<object>;
    /**
     * setFlagOnMessages
     */
    setFlagOnMessagesUsingPUTRaw(requestParameters: SetFlagOnMessagesUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * setFlagOnMessages
     */
    setFlagOnMessagesUsingPUT(requestParameters: SetFlagOnMessagesUsingPUTRequest): Promise<void>;
    /**
     * setStarOnMessages
     */
    setStarOnMessagesUsingPUTRaw(requestParameters: SetStarOnMessagesUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * setStarOnMessages
     */
    setStarOnMessagesUsingPUT(requestParameters: SetStarOnMessagesUsingPUTRequest): Promise<void>;
}
