/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { ChargeFeeToLawfirmRequestToJSON, ChargeFeeToLawfirmResponseFromJSON, GetLawfirmFeesResponseFromJSON, GetLawfirmFinancialTransactionsResponseFromJSON, GetLawfirmPayoutReversalsResponseFromJSON, GetLawfirmPayoutsResponseFromJSON, GetLawfirmTransactionsForCaseResponseFromJSON, ListLawfirmBankPayoutsResponseFromJSON, RefundLawfirmFeeRequestToJSON, ReverseLawfirmPayoutRequestToJSON, SendPayoutToLawfirmRequestToJSON, SendPayoutToLawfirmResponseFromJSON, UpdateLawfirmFeeRequestToJSON, UpdateLawfirmFeeResponseFromJSON, UpdateLawfirmPayoutRequestToJSON, UpdateLawfirmPayoutResponseFromJSON, } from '../models';
/**
 *
 */
export class LawfirmTransactionsControllerApi extends runtime.BaseAPI {
    /**
     * chargeFeeToLawfirm
     */
    chargeFeeToLawfirmUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling chargeFeeToLawfirmUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling chargeFeeToLawfirmUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/debits`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ChargeFeeToLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => ChargeFeeToLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * chargeFeeToLawfirm
     */
    chargeFeeToLawfirmUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.chargeFeeToLawfirmUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * debitLawfirmFee
     */
    debitLawfirmFeeUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmFeeId === null || requestParameters.lawfirmFeeId === undefined) {
                throw new runtime.RequiredError('lawfirmFeeId', 'Required parameter requestParameters.lawfirmFeeId was null or undefined when calling debitLawfirmFeeUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirm-fees/{lawfirmFeeId}/debit`.replace(`{${"lawfirmFeeId"}}`, encodeURIComponent(String(requestParameters.lawfirmFeeId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * debitLawfirmFee
     */
    debitLawfirmFeeUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.debitLawfirmFeeUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * deleteLawfirmFeeRecord
     */
    deleteLawfirmFeeRecordUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmFeeId === null || requestParameters.lawfirmFeeId === undefined) {
                throw new runtime.RequiredError('lawfirmFeeId', 'Required parameter requestParameters.lawfirmFeeId was null or undefined when calling deleteLawfirmFeeRecordUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/fees/{lawfirmFeeId}`.replace(`{${"lawfirmFeeId"}}`, encodeURIComponent(String(requestParameters.lawfirmFeeId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * deleteLawfirmFeeRecord
     */
    deleteLawfirmFeeRecordUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteLawfirmFeeRecordUsingDELETERaw(requestParameters);
        });
    }
    /**
     * deleteLawfirmPayoutRecord
     */
    deleteLawfirmPayoutRecordUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmPayoutId === null || requestParameters.lawfirmPayoutId === undefined) {
                throw new runtime.RequiredError('lawfirmPayoutId', 'Required parameter requestParameters.lawfirmPayoutId was null or undefined when calling deleteLawfirmPayoutRecordUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/payouts/{lawfirmPayoutId}`.replace(`{${"lawfirmPayoutId"}}`, encodeURIComponent(String(requestParameters.lawfirmPayoutId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * deleteLawfirmPayoutRecord
     */
    deleteLawfirmPayoutRecordUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteLawfirmPayoutRecordUsingDELETERaw(requestParameters);
        });
    }
    /**
     * executeLawfirmPayout
     */
    executeLawfirmPayoutUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmPayoutId === null || requestParameters.lawfirmPayoutId === undefined) {
                throw new runtime.RequiredError('lawfirmPayoutId', 'Required parameter requestParameters.lawfirmPayoutId was null or undefined when calling executeLawfirmPayoutUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirm-payouts/{lawfirmPayoutId}/transfer`.replace(`{${"lawfirmPayoutId"}}`, encodeURIComponent(String(requestParameters.lawfirmPayoutId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * executeLawfirmPayout
     */
    executeLawfirmPayoutUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.executeLawfirmPayoutUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * getLawfirmFees
     */
    getLawfirmFeesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getLawfirmFeesUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/lawfirm-fees`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmFeesResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmFees
     */
    getLawfirmFeesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmFeesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmFinancialTransactions
     */
    getLawfirmFinancialTransactionsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling getLawfirmFinancialTransactionsUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.length !== undefined) {
                queryParameters['length'] = requestParameters.length;
            }
            if (requestParameters.page !== undefined) {
                queryParameters['page'] = requestParameters.page;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v2/lawfirms/{lawfirmId}/transactions`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmFinancialTransactionsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmFinancialTransactions
     */
    getLawfirmFinancialTransactionsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmFinancialTransactionsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmPayoutReversals
     */
    getLawfirmPayoutReversalsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getLawfirmPayoutReversalsUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/reversals`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmPayoutReversalsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmPayoutReversals
     */
    getLawfirmPayoutReversalsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmPayoutReversalsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmPayouts
     */
    getLawfirmPayoutsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getLawfirmPayoutsUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/payouts`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmPayoutsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmPayouts
     */
    getLawfirmPayoutsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmPayoutsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawfirmTransactionsForCase
     */
    getLawfirmTransactionsForCaseUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
                throw new runtime.RequiredError('caseId', 'Required parameter requestParameters.caseId was null or undefined when calling getLawfirmTransactionsForCaseUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/cases/{caseId}/lawfirm-transactions`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawfirmTransactionsForCaseResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawfirmTransactionsForCase
     */
    getLawfirmTransactionsForCaseUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawfirmTransactionsForCaseUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * listLawfirmBankPayouts
     */
    listLawfirmBankPayoutsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.includeTransactions === null || requestParameters.includeTransactions === undefined) {
                throw new runtime.RequiredError('includeTransactions', 'Required parameter requestParameters.includeTransactions was null or undefined when calling listLawfirmBankPayoutsUsingGET.');
            }
            if (requestParameters.index === null || requestParameters.index === undefined) {
                throw new runtime.RequiredError('index', 'Required parameter requestParameters.index was null or undefined when calling listLawfirmBankPayoutsUsingGET.');
            }
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling listLawfirmBankPayoutsUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.includeTransactions !== undefined) {
                queryParameters['includeTransactions '] = requestParameters.includeTransactions;
            }
            if (requestParameters.index !== undefined) {
                queryParameters['index'] = requestParameters.index;
            }
            if (requestParameters.size !== undefined) {
                queryParameters['size'] = requestParameters.size;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/bank-payouts`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => ListLawfirmBankPayoutsResponseFromJSON(jsonValue));
        });
    }
    /**
     * listLawfirmBankPayouts
     */
    listLawfirmBankPayoutsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listLawfirmBankPayoutsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * refundLawfirmFee
     */
    refundLawfirmFeeUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmFeeId === null || requestParameters.lawfirmFeeId === undefined) {
                throw new runtime.RequiredError('lawfirmFeeId', 'Required parameter requestParameters.lawfirmFeeId was null or undefined when calling refundLawfirmFeeUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling refundLawfirmFeeUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirm-fee/{lawfirmFeeId}/refund`.replace(`{${"lawfirmFeeId"}}`, encodeURIComponent(String(requestParameters.lawfirmFeeId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: RefundLawfirmFeeRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * refundLawfirmFee
     */
    refundLawfirmFeeUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.refundLawfirmFeeUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * reverseLawfirmPayout
     */
    reverseLawfirmPayoutUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmPayoutId === null || requestParameters.lawfirmPayoutId === undefined) {
                throw new runtime.RequiredError('lawfirmPayoutId', 'Required parameter requestParameters.lawfirmPayoutId was null or undefined when calling reverseLawfirmPayoutUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling reverseLawfirmPayoutUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirm-payouts/{lawfirmPayoutId}/reverse`.replace(`{${"lawfirmPayoutId"}}`, encodeURIComponent(String(requestParameters.lawfirmPayoutId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ReverseLawfirmPayoutRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * reverseLawfirmPayout
     */
    reverseLawfirmPayoutUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.reverseLawfirmPayoutUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * sendPayoutToLawfirm
     */
    sendPayoutToLawfirmUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling sendPayoutToLawfirmUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling sendPayoutToLawfirmUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/payouts`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SendPayoutToLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => SendPayoutToLawfirmResponseFromJSON(jsonValue));
        });
    }
    /**
     * sendPayoutToLawfirm
     */
    sendPayoutToLawfirmUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.sendPayoutToLawfirmUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * updateLawfirmFee
     */
    updateLawfirmFeeUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmFeeId === null || requestParameters.lawfirmFeeId === undefined) {
                throw new runtime.RequiredError('lawfirmFeeId', 'Required parameter requestParameters.lawfirmFeeId was null or undefined when calling updateLawfirmFeeUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateLawfirmFeeUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirm-fees/{lawfirmFeeId}`.replace(`{${"lawfirmFeeId"}}`, encodeURIComponent(String(requestParameters.lawfirmFeeId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateLawfirmFeeRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => UpdateLawfirmFeeResponseFromJSON(jsonValue));
        });
    }
    /**
     * updateLawfirmFee
     */
    updateLawfirmFeeUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateLawfirmFeeUsingPUTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * updateLawfirmPayout
     */
    updateLawfirmPayoutUsingPUTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmPayoutId === null || requestParameters.lawfirmPayoutId === undefined) {
                throw new runtime.RequiredError('lawfirmPayoutId', 'Required parameter requestParameters.lawfirmPayoutId was null or undefined when calling updateLawfirmPayoutUsingPUT.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling updateLawfirmPayoutUsingPUT.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirm-payouts/{lawfirmPayoutId}`.replace(`{${"lawfirmPayoutId"}}`, encodeURIComponent(String(requestParameters.lawfirmPayoutId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateLawfirmPayoutRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => UpdateLawfirmPayoutResponseFromJSON(jsonValue));
        });
    }
    /**
     * updateLawfirmPayout
     */
    updateLawfirmPayoutUsingPUT(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateLawfirmPayoutUsingPUTRaw(requestParameters);
            return yield response.value();
        });
    }
}
