/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AuthorizeChargeForCasePaymentRequest, AuthorizeChargeForCasePaymentResponse, CaptureChargeFromCasePaymentRequest, GetAvailablePaymentPlansResponse, GetCasePaymentsResponse, GetStripeChargeResponse, GetStripeChargesResponse, ListCostItemsForCustomerResponse, SaveCasePaymentPlanRequest, ScheduleNewPaymentRequest, UpdateCasePaymentRequest, UpdatePaymentDueDateRequest } from '../models';
export interface AuthorizeChargeForCasePaymentUsingPOSTRequest {
    caseId: string;
    casePaymentId: string;
    request?: AuthorizeChargeForCasePaymentRequest;
}
export interface CaptureChargeFromCasePaymentUsingPOSTRequest {
    caseId: string;
    casePaymentId: string;
    request?: CaptureChargeFromCasePaymentRequest;
}
export interface DeleteCasePaymentUsingDELETERequest {
    caseId: string;
    casePaymentId: string;
}
export interface GenerateCasePaymentPlanUsingGETRequest {
    caseId: string;
    paymentPlanTypeId: string;
    period?: GenerateCasePaymentPlanUsingGETPeriodEnum;
    productId?: string;
}
export interface GetAvailablePaymentPlansUsingPOSTRequest {
    lawfirmId: number;
    legalFeeInCents: string;
    state: string;
}
export interface GetCasePaymentsUsingGETRequest {
    caseId: string;
}
export interface GetPaymentPlanOptionsUsingGETRequest {
    caseId: string;
    feeInCents: number;
    lawfirmId: number;
    userId?: number;
}
export interface GetStripeChargeUsingGETRequest {
    caseId: string;
    stripeChargeId: string;
}
export interface GetStripeChargesUsingGETRequest {
    caseId: string;
}
export interface ListCostItemsForCustomerUsingGETRequest {
    caseId: string;
    period?: ListCostItemsForCustomerUsingGETPeriodEnum;
    productId?: string;
}
export interface SaveCasePaymentPlanUsingPOSTRequest {
    caseId: string;
    paymentPlanTypeId: string;
    request: SaveCasePaymentPlanRequest;
}
export interface ScheduleNewPaymentUsingPOSTRequest {
    caseId: string;
    request: ScheduleNewPaymentRequest;
}
export interface UpdateCasePaymentUsingPUTRequest {
    casePaymentId: string;
    request: UpdateCasePaymentRequest;
}
export interface UpdatePaymentDueDateUsingPUTRequest {
    casePaymentId: string;
    request: UpdatePaymentDueDateRequest;
}
export interface UpdatePaymentRecipientUsingPUTRequest {
    casePaymentId: string;
    recipient: UpdatePaymentRecipientUsingPUTRecipientEnum;
}
/**
 *
 */
export declare class CasePaymentControllerApi extends runtime.BaseAPI {
    /**
     * authorizeChargeForCasePayment
     */
    authorizeChargeForCasePaymentUsingPOSTRaw(requestParameters: AuthorizeChargeForCasePaymentUsingPOSTRequest): Promise<runtime.ApiResponse<AuthorizeChargeForCasePaymentResponse>>;
    /**
     * authorizeChargeForCasePayment
     */
    authorizeChargeForCasePaymentUsingPOST(requestParameters: AuthorizeChargeForCasePaymentUsingPOSTRequest): Promise<AuthorizeChargeForCasePaymentResponse>;
    /**
     * captureChargeFromCasePayment
     */
    captureChargeFromCasePaymentUsingPOSTRaw(requestParameters: CaptureChargeFromCasePaymentUsingPOSTRequest): Promise<runtime.ApiResponse<boolean>>;
    /**
     * captureChargeFromCasePayment
     */
    captureChargeFromCasePaymentUsingPOST(requestParameters: CaptureChargeFromCasePaymentUsingPOSTRequest): Promise<boolean>;
    /**
     * deleteCasePayment
     */
    deleteCasePaymentUsingDELETERaw(requestParameters: DeleteCasePaymentUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * deleteCasePayment
     */
    deleteCasePaymentUsingDELETE(requestParameters: DeleteCasePaymentUsingDELETERequest): Promise<void>;
    /**
     * generateCasePaymentPlan
     */
    generateCasePaymentPlanUsingGETRaw(requestParameters: GenerateCasePaymentPlanUsingGETRequest): Promise<runtime.ApiResponse<ListCostItemsForCustomerResponse>>;
    /**
     * generateCasePaymentPlan
     */
    generateCasePaymentPlanUsingGET(requestParameters: GenerateCasePaymentPlanUsingGETRequest): Promise<ListCostItemsForCustomerResponse>;
    /**
     * getAvailablePaymentPlans
     */
    getAvailablePaymentPlansUsingPOSTRaw(requestParameters: GetAvailablePaymentPlansUsingPOSTRequest): Promise<runtime.ApiResponse<GetAvailablePaymentPlansResponse>>;
    /**
     * getAvailablePaymentPlans
     */
    getAvailablePaymentPlansUsingPOST(requestParameters: GetAvailablePaymentPlansUsingPOSTRequest): Promise<GetAvailablePaymentPlansResponse>;
    /**
     * getCasePayments
     */
    getCasePaymentsUsingGETRaw(requestParameters: GetCasePaymentsUsingGETRequest): Promise<runtime.ApiResponse<GetCasePaymentsResponse>>;
    /**
     * getCasePayments
     */
    getCasePaymentsUsingGET(requestParameters: GetCasePaymentsUsingGETRequest): Promise<GetCasePaymentsResponse>;
    /**
     * getPaymentPlanOptions
     */
    getPaymentPlanOptionsUsingGETRaw(requestParameters: GetPaymentPlanOptionsUsingGETRequest): Promise<runtime.ApiResponse<GetAvailablePaymentPlansResponse>>;
    /**
     * getPaymentPlanOptions
     */
    getPaymentPlanOptionsUsingGET(requestParameters: GetPaymentPlanOptionsUsingGETRequest): Promise<GetAvailablePaymentPlansResponse>;
    /**
     * getStripeCharge
     */
    getStripeChargeUsingGETRaw(requestParameters: GetStripeChargeUsingGETRequest): Promise<runtime.ApiResponse<GetStripeChargeResponse>>;
    /**
     * getStripeCharge
     */
    getStripeChargeUsingGET(requestParameters: GetStripeChargeUsingGETRequest): Promise<GetStripeChargeResponse>;
    /**
     * getStripeCharges
     */
    getStripeChargesUsingGETRaw(requestParameters: GetStripeChargesUsingGETRequest): Promise<runtime.ApiResponse<GetStripeChargesResponse>>;
    /**
     * getStripeCharges
     */
    getStripeChargesUsingGET(requestParameters: GetStripeChargesUsingGETRequest): Promise<GetStripeChargesResponse>;
    /**
     * listCostItemsForCustomer
     */
    listCostItemsForCustomerUsingGETRaw(requestParameters: ListCostItemsForCustomerUsingGETRequest): Promise<runtime.ApiResponse<ListCostItemsForCustomerResponse>>;
    /**
     * listCostItemsForCustomer
     */
    listCostItemsForCustomerUsingGET(requestParameters: ListCostItemsForCustomerUsingGETRequest): Promise<ListCostItemsForCustomerResponse>;
    /**
     * saveCasePaymentPlan
     */
    saveCasePaymentPlanUsingPOSTRaw(requestParameters: SaveCasePaymentPlanUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * saveCasePaymentPlan
     */
    saveCasePaymentPlanUsingPOST(requestParameters: SaveCasePaymentPlanUsingPOSTRequest): Promise<void>;
    /**
     * scheduleNewPayment
     */
    scheduleNewPaymentUsingPOSTRaw(requestParameters: ScheduleNewPaymentUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * scheduleNewPayment
     */
    scheduleNewPaymentUsingPOST(requestParameters: ScheduleNewPaymentUsingPOSTRequest): Promise<void>;
    /**
     * updateCasePayment
     */
    updateCasePaymentUsingPUTRaw(requestParameters: UpdateCasePaymentUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updateCasePayment
     */
    updateCasePaymentUsingPUT(requestParameters: UpdateCasePaymentUsingPUTRequest): Promise<void>;
    /**
     * updatePaymentDueDate
     */
    updatePaymentDueDateUsingPUTRaw(requestParameters: UpdatePaymentDueDateUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updatePaymentDueDate
     */
    updatePaymentDueDateUsingPUT(requestParameters: UpdatePaymentDueDateUsingPUTRequest): Promise<void>;
    /**
     * updatePaymentRecipient
     */
    updatePaymentRecipientUsingPUTRaw(requestParameters: UpdatePaymentRecipientUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * updatePaymentRecipient
     */
    updatePaymentRecipientUsingPUT(requestParameters: UpdatePaymentRecipientUsingPUTRequest): Promise<void>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GenerateCasePaymentPlanUsingGETPeriodEnum {
    DAILY = "DAILY",
    MONTHLY = "MONTHLY",
    QUARTERLY = "QUARTERLY",
    WEEKLY = "WEEKLY",
    YEARLY = "YEARLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListCostItemsForCustomerUsingGETPeriodEnum {
    DAILY = "DAILY",
    MONTHLY = "MONTHLY",
    QUARTERLY = "QUARTERLY",
    WEEKLY = "WEEKLY",
    YEARLY = "YEARLY"
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdatePaymentRecipientUsingPUTRecipientEnum {
    COURT = "COURT",
    LAWFIRM = "LAWFIRM",
    OTR = "OTR"
}
