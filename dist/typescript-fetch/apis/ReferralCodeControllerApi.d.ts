/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CreateReferralCodeRequest, CreateReferralCodeResponse, GetReferralCodeResponse, GetReferralCodesResponse } from '../models';
export interface ApproveReferralCodeUsingPUTRequest {
    codeId: string;
}
export interface GenerateReferralCodeUsingPOSTRequest {
    request: CreateReferralCodeRequest;
}
export interface GetReferralCodeUsingGETRequest {
    codeId: string;
}
export interface GetReferralCodesUsingGETRequest {
    isActive?: boolean;
}
export interface MarkCodeAsInactiveUsingDELETERequest {
    codeId: string;
}
export interface ValidateReferralCodeUsingGETRequest {
    codeId: string;
}
/**
 *
 */
export declare class ReferralCodeControllerApi extends runtime.BaseAPI {
    /**
     * Only for admins. This will approve and activate a given referral code
     */
    approveReferralCodeUsingPUTRaw(requestParameters: ApproveReferralCodeUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Only for admins. This will approve and activate a given referral code
     */
    approveReferralCodeUsingPUT(requestParameters: ApproveReferralCodeUsingPUTRequest): Promise<void>;
    /**
     * Referral codes are currently immutable. Meaning, once a referral code is created then no modification is allowed. In urgent scenarios, we can update the values via SQL. If you want to apply a discount to the referee then enter a negative value (applies both for percentage_discount and cents_value types), and enter a positive value if you want to increase the price.
     */
    generateReferralCodeUsingPOSTRaw(requestParameters: GenerateReferralCodeUsingPOSTRequest): Promise<runtime.ApiResponse<CreateReferralCodeResponse>>;
    /**
     * Referral codes are currently immutable. Meaning, once a referral code is created then no modification is allowed. In urgent scenarios, we can update the values via SQL. If you want to apply a discount to the referee then enter a negative value (applies both for percentage_discount and cents_value types), and enter a positive value if you want to increase the price.
     */
    generateReferralCodeUsingPOST(requestParameters: GenerateReferralCodeUsingPOSTRequest): Promise<CreateReferralCodeResponse>;
    /**
     * getReferralCode
     */
    getReferralCodeUsingGETRaw(requestParameters: GetReferralCodeUsingGETRequest): Promise<runtime.ApiResponse<GetReferralCodeResponse>>;
    /**
     * getReferralCode
     */
    getReferralCodeUsingGET(requestParameters: GetReferralCodeUsingGETRequest): Promise<GetReferralCodeResponse>;
    /**
     * getReferralCodes
     */
    getReferralCodesUsingGETRaw(requestParameters: GetReferralCodesUsingGETRequest): Promise<runtime.ApiResponse<GetReferralCodesResponse>>;
    /**
     * getReferralCodes
     */
    getReferralCodesUsingGET(requestParameters: GetReferralCodesUsingGETRequest): Promise<GetReferralCodesResponse>;
    /**
     * markCodeAsInactive
     */
    markCodeAsInactiveUsingDELETERaw(requestParameters: MarkCodeAsInactiveUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * markCodeAsInactive
     */
    markCodeAsInactiveUsingDELETE(requestParameters: MarkCodeAsInactiveUsingDELETERequest): Promise<void>;
    /**
     * Validates and returns the referral code. Validation includes: Are we passed the expiration date? Has the code exceeded it\'s max use count?
     */
    validateReferralCodeUsingGETRaw(requestParameters: ValidateReferralCodeUsingGETRequest): Promise<runtime.ApiResponse<GetReferralCodeResponse>>;
    /**
     * Validates and returns the referral code. Validation includes: Are we passed the expiration date? Has the code exceeded it\'s max use count?
     */
    validateReferralCodeUsingGET(requestParameters: ValidateReferralCodeUsingGETRequest): Promise<GetReferralCodeResponse>;
}
