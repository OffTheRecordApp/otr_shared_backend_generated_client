/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { DeleteLawyerLicenseRequestToJSON, GetLawyerResponseFromJSON, InviteLawyerToLawfirmRequestToJSON, SaveLawyerLeadRequestToJSON, SaveLawyerLicensesRequestToJSON, SaveLawyerRequestToJSON, } from '../models';
/**
 *
 */
export class LawyerControllerApi extends runtime.BaseAPI {
    /**
     * cancelLawyerInvite
     */
    cancelLawyerInviteUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.inviteeEmail === null || requestParameters.inviteeEmail === undefined) {
                throw new runtime.RequiredError('inviteeEmail', 'Required parameter requestParameters.inviteeEmail was null or undefined when calling cancelLawyerInviteUsingDELETE.');
            }
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling cancelLawyerInviteUsingDELETE.');
            }
            const queryParameters = {};
            if (requestParameters.inviteeEmail !== undefined) {
                queryParameters['inviteeEmail'] = requestParameters.inviteeEmail;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawyers/{userId}/invite`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * cancelLawyerInvite
     */
    cancelLawyerInviteUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.cancelLawyerInviteUsingDELETERaw(requestParameters);
        });
    }
    /**
     * deleteLawyerLicenses
     */
    deleteLawyerLicensesUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling deleteLawyerLicensesUsingDELETE.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling deleteLawyerLicensesUsingDELETE.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawyers/{userId}/licenses`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: DeleteLawyerLicenseRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * deleteLawyerLicenses
     */
    deleteLawyerLicensesUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteLawyerLicensesUsingDELETERaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * deleteLawyer
     */
    deleteLawyerUsingDELETERaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling deleteLawyerUsingDELETE.');
            }
            const queryParameters = {};
            if (requestParameters.removeAdminOnly !== undefined) {
                queryParameters['removeAdminOnly'] = requestParameters.removeAdminOnly;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawyers/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * deleteLawyer
     */
    deleteLawyerUsingDELETE(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteLawyerUsingDELETERaw(requestParameters);
        });
    }
    /**
     * getLawyerEmailGuesses
     */
    getLawyerEmailGuessesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawyerId === null || requestParameters.lawyerId === undefined) {
                throw new runtime.RequiredError('lawyerId', 'Required parameter requestParameters.lawyerId was null or undefined when calling getLawyerEmailGuessesUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawyers/{lawyerId}/email-guesses`.replace(`{${"lawyerId"}}`, encodeURIComponent(String(requestParameters.lawyerId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * getLawyerEmailGuesses
     */
    getLawyerEmailGuessesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawyerEmailGuessesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getLawyer
     */
    getLawyerUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling getLawyerUsingGET.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/lawyers/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetLawyerResponseFromJSON(jsonValue));
        });
    }
    /**
     * getLawyer
     */
    getLawyerUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getLawyerUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * inviteLawyerToLawfirm
     */
    inviteLawyerToLawfirmUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.lawfirmId === null || requestParameters.lawfirmId === undefined) {
                throw new runtime.RequiredError('lawfirmId', 'Required parameter requestParameters.lawfirmId was null or undefined when calling inviteLawyerToLawfirmUsingPOST.');
            }
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling inviteLawyerToLawfirmUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling inviteLawyerToLawfirmUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawfirms/{lawfirmId}/lawyers/{userId}/invite`.replace(`{${"lawfirmId"}}`, encodeURIComponent(String(requestParameters.lawfirmId))).replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: InviteLawyerToLawfirmRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * inviteLawyerToLawfirm
     */
    inviteLawyerToLawfirmUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.inviteLawyerToLawfirmUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * saveLawyerLead
     */
    saveLawyerLeadUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling saveLawyerLeadUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawyers/lead`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SaveLawyerLeadRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * saveLawyerLead
     */
    saveLawyerLeadUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveLawyerLeadUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * saveLawyerLicenses
     */
    saveLawyerLicensesUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.userId === null || requestParameters.userId === undefined) {
                throw new runtime.RequiredError('userId', 'Required parameter requestParameters.userId was null or undefined when calling saveLawyerLicensesUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling saveLawyerLicensesUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawyers/{userId}/licenses`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SaveLawyerLicensesRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * saveLawyerLicenses
     */
    saveLawyerLicensesUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveLawyerLicensesUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * upsertLawyer
     */
    upsertLawyerUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling upsertLawyerUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/lawyers`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SaveLawyerRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * upsertLawyer
     */
    upsertLawyerUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.upsertLawyerUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
}
