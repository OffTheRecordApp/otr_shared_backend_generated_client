/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { DeleteNotificationByPagesRequest, DeleteNotificationEventRequest, NotificationEvents, PushNotificationRegistrationRequest, PushNotificationRequest } from '../models';
export interface GetUnreadCountsUsingGETRequest {
    includeMessage?: boolean;
}
export interface MarkAllReadForUserUsingDELETERequest {
    userId: string;
}
export interface MarkCaseNotificationsAsUnreadUsingPUTRequest {
    caseId: string;
    userId: number;
}
export interface MarkPageTypesAsReadUsingDELETERequest {
    caseId: string;
    request: DeleteNotificationByPagesRequest;
}
export interface MarkReadUsingDELETERequest {
    caseId: string;
    request: DeleteNotificationEventRequest;
}
export interface PushCaseMessageUsingPOSTRequest {
    caseId: string;
    pushRequest: PushNotificationRequest;
}
export interface PushNotificationToUserUsingPOSTRequest {
    body: string;
}
export interface RegisterUsingPOSTRequest {
    request: PushNotificationRegistrationRequest;
}
/**
 *
 */
export declare class PushNotificationControllerApi extends runtime.BaseAPI {
    /**
     * getUnreadCounts
     */
    getUnreadCountsUsingGETRaw(requestParameters: GetUnreadCountsUsingGETRequest): Promise<runtime.ApiResponse<NotificationEvents>>;
    /**
     * getUnreadCounts
     */
    getUnreadCountsUsingGET(requestParameters: GetUnreadCountsUsingGETRequest): Promise<NotificationEvents>;
    /**
     * markAllReadForUser
     */
    markAllReadForUserUsingDELETERaw(requestParameters: MarkAllReadForUserUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * markAllReadForUser
     */
    markAllReadForUserUsingDELETE(requestParameters: MarkAllReadForUserUsingDELETERequest): Promise<void>;
    /**
     * markCaseNotificationsAsUnread
     */
    markCaseNotificationsAsUnreadUsingPUTRaw(requestParameters: MarkCaseNotificationsAsUnreadUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * markCaseNotificationsAsUnread
     */
    markCaseNotificationsAsUnreadUsingPUT(requestParameters: MarkCaseNotificationsAsUnreadUsingPUTRequest): Promise<void>;
    /**
     * markPageTypesAsRead
     */
    markPageTypesAsReadUsingDELETERaw(requestParameters: MarkPageTypesAsReadUsingDELETERequest): Promise<runtime.ApiResponse<NotificationEvents>>;
    /**
     * markPageTypesAsRead
     */
    markPageTypesAsReadUsingDELETE(requestParameters: MarkPageTypesAsReadUsingDELETERequest): Promise<NotificationEvents>;
    /**
     * markRead
     */
    markReadUsingDELETERaw(requestParameters: MarkReadUsingDELETERequest): Promise<runtime.ApiResponse<NotificationEvents>>;
    /**
     * markRead
     */
    markReadUsingDELETE(requestParameters: MarkReadUsingDELETERequest): Promise<NotificationEvents>;
    /**
     * pushCaseMessage
     */
    pushCaseMessageUsingPOSTRaw(requestParameters: PushCaseMessageUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * pushCaseMessage
     */
    pushCaseMessageUsingPOST(requestParameters: PushCaseMessageUsingPOSTRequest): Promise<object>;
    /**
     * pushNotificationToUser
     */
    pushNotificationToUserUsingPOSTRaw(requestParameters: PushNotificationToUserUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * pushNotificationToUser
     */
    pushNotificationToUserUsingPOST(requestParameters: PushNotificationToUserUsingPOSTRequest): Promise<object>;
    /**
     * register
     */
    registerUsingPOSTRaw(requestParameters: RegisterUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * register
     */
    registerUsingPOST(requestParameters: RegisterUsingPOSTRequest): Promise<object>;
}
