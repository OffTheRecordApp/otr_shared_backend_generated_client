/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { GenerateTemplateRequestToJSON, GetEmailTemplateResponseFromJSON, GetOutgoingContactsResponseFromJSON, ReplyToTicketRequestToJSON, SendBookingReceiptRequestToJSON, SendConsolidatedEmailToUserToJSON, SendEmailToUserRequestToJSON, SendEmailToUsersRequestToJSON, } from '../models';
/**
 *
 */
export class CrmControllerApi extends runtime.BaseAPI {
    /**
     * generateTemplate
     */
    generateTemplateUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling generateTemplateUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/crm/generate-template`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: GenerateTemplateRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetEmailTemplateResponseFromJSON(jsonValue));
        });
    }
    /**
     * generateTemplate
     */
    generateTemplateUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.generateTemplateUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getOutgoingContacts
     */
    getOutgoingContactsUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.recipientEmailAddress === null || requestParameters.recipientEmailAddress === undefined) {
                throw new runtime.RequiredError('recipientEmailAddress', 'Required parameter requestParameters.recipientEmailAddress was null or undefined when calling getOutgoingContactsUsingGET.');
            }
            const queryParameters = {};
            if (requestParameters.recipientEmailAddress !== undefined) {
                queryParameters['recipientEmailAddress'] = requestParameters.recipientEmailAddress;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/crm/contacts`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response, (jsonValue) => GetOutgoingContactsResponseFromJSON(jsonValue));
        });
    }
    /**
     * getOutgoingContacts
     */
    getOutgoingContactsUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getOutgoingContactsUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * getTemplates
     */
    getTemplatesUsingGETRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.category !== undefined) {
                queryParameters['category'] = requestParameters.category;
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/api/v1/crm/templates`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * getTemplates
     */
    getTemplatesUsingGET(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getTemplatesUsingGETRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * replyToTicket
     */
    replyToTicketUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.ticketId === null || requestParameters.ticketId === undefined) {
                throw new runtime.RequiredError('ticketId', 'Required parameter requestParameters.ticketId was null or undefined when calling replyToTicketUsingPOST.');
            }
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling replyToTicketUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/crm/ticket/{ticketId}/reply`.replace(`{${"ticketId"}}`, encodeURIComponent(String(requestParameters.ticketId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ReplyToTicketRequestToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * replyToTicket
     */
    replyToTicketUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.replyToTicketUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * sendBookingReceipt
     */
    sendBookingReceiptUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling sendBookingReceiptUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/crm/booking-receipt`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SendBookingReceiptRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * sendBookingReceipt
     */
    sendBookingReceiptUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.sendBookingReceiptUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * sendConsolidatedEmailToUser
     */
    sendConsolidatedEmailToUserUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling sendConsolidatedEmailToUserUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/crm/user/consolidate-email`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SendConsolidatedEmailToUserToJSON(requestParameters.request),
            });
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * sendConsolidatedEmailToUser
     */
    sendConsolidatedEmailToUserUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.sendConsolidatedEmailToUserUsingPOSTRaw(requestParameters);
            return yield response.value();
        });
    }
    /**
     * sendEmailToUser
     */
    sendEmailToUserUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling sendEmailToUserUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/crm/user/email`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SendEmailToUserRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * sendEmailToUser
     */
    sendEmailToUserUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.sendEmailToUserUsingPOSTRaw(requestParameters);
        });
    }
    /**
     * sendEmailToUsers
     */
    sendEmailToUsersUsingPOSTRaw(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.request === null || requestParameters.request === undefined) {
                throw new runtime.RequiredError('request', 'Required parameter requestParameters.request was null or undefined when calling sendEmailToUsersUsingPOST.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/api/v1/crm/users/email`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SendEmailToUsersRequestToJSON(requestParameters.request),
            });
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * sendEmailToUsers
     */
    sendEmailToUsersUsingPOST(requestParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.sendEmailToUsersUsingPOSTRaw(requestParameters);
        });
    }
}
