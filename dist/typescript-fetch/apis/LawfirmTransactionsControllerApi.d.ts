/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ChargeFeeToLawfirmRequest, ChargeFeeToLawfirmResponse, GetLawfirmFeesResponse, GetLawfirmFinancialTransactionsResponse, GetLawfirmPayoutReversalsResponse, GetLawfirmPayoutsResponse, GetLawfirmTransactionsForCaseResponse, ListLawfirmBankPayoutsResponse, RefundLawfirmFeeRequest, ReverseLawfirmPayoutRequest, SendPayoutToLawfirmRequest, SendPayoutToLawfirmResponse, UpdateLawfirmFeeRequest, UpdateLawfirmFeeResponse, UpdateLawfirmPayoutRequest, UpdateLawfirmPayoutResponse } from '../models';
export interface ChargeFeeToLawfirmUsingPOSTRequest {
    lawfirmId: number;
    request: ChargeFeeToLawfirmRequest;
}
export interface DebitLawfirmFeeUsingPOSTRequest {
    lawfirmFeeId: string;
}
export interface DeleteLawfirmFeeRecordUsingDELETERequest {
    lawfirmFeeId: string;
}
export interface DeleteLawfirmPayoutRecordUsingDELETERequest {
    lawfirmPayoutId: string;
}
export interface ExecuteLawfirmPayoutUsingPOSTRequest {
    lawfirmPayoutId: string;
}
export interface GetLawfirmFeesUsingGETRequest {
    caseId: string;
}
export interface GetLawfirmFinancialTransactionsUsingGETRequest {
    lawfirmId: number;
    length?: number;
    page?: number;
}
export interface GetLawfirmPayoutReversalsUsingGETRequest {
    caseId: string;
}
export interface GetLawfirmPayoutsUsingGETRequest {
    caseId: string;
}
export interface GetLawfirmTransactionsForCaseUsingGETRequest {
    caseId: string;
}
export interface ListLawfirmBankPayoutsUsingGETRequest {
    includeTransactions: boolean;
    index: number;
    lawfirmId: number;
    size?: number;
}
export interface RefundLawfirmFeeUsingPOSTRequest {
    lawfirmFeeId: string;
    request: RefundLawfirmFeeRequest;
}
export interface ReverseLawfirmPayoutUsingPOSTRequest {
    lawfirmPayoutId: string;
    request: ReverseLawfirmPayoutRequest;
}
export interface SendPayoutToLawfirmUsingPOSTRequest {
    lawfirmId: number;
    request: SendPayoutToLawfirmRequest;
}
export interface UpdateLawfirmFeeUsingPUTRequest {
    lawfirmFeeId: string;
    request: UpdateLawfirmFeeRequest;
}
export interface UpdateLawfirmPayoutUsingPUTRequest {
    lawfirmPayoutId: string;
    request: UpdateLawfirmPayoutRequest;
}
/**
 *
 */
export declare class LawfirmTransactionsControllerApi extends runtime.BaseAPI {
    /**
     * chargeFeeToLawfirm
     */
    chargeFeeToLawfirmUsingPOSTRaw(requestParameters: ChargeFeeToLawfirmUsingPOSTRequest): Promise<runtime.ApiResponse<ChargeFeeToLawfirmResponse>>;
    /**
     * chargeFeeToLawfirm
     */
    chargeFeeToLawfirmUsingPOST(requestParameters: ChargeFeeToLawfirmUsingPOSTRequest): Promise<ChargeFeeToLawfirmResponse>;
    /**
     * debitLawfirmFee
     */
    debitLawfirmFeeUsingPOSTRaw(requestParameters: DebitLawfirmFeeUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * debitLawfirmFee
     */
    debitLawfirmFeeUsingPOST(requestParameters: DebitLawfirmFeeUsingPOSTRequest): Promise<void>;
    /**
     * deleteLawfirmFeeRecord
     */
    deleteLawfirmFeeRecordUsingDELETERaw(requestParameters: DeleteLawfirmFeeRecordUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * deleteLawfirmFeeRecord
     */
    deleteLawfirmFeeRecordUsingDELETE(requestParameters: DeleteLawfirmFeeRecordUsingDELETERequest): Promise<void>;
    /**
     * deleteLawfirmPayoutRecord
     */
    deleteLawfirmPayoutRecordUsingDELETERaw(requestParameters: DeleteLawfirmPayoutRecordUsingDELETERequest): Promise<runtime.ApiResponse<void>>;
    /**
     * deleteLawfirmPayoutRecord
     */
    deleteLawfirmPayoutRecordUsingDELETE(requestParameters: DeleteLawfirmPayoutRecordUsingDELETERequest): Promise<void>;
    /**
     * executeLawfirmPayout
     */
    executeLawfirmPayoutUsingPOSTRaw(requestParameters: ExecuteLawfirmPayoutUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * executeLawfirmPayout
     */
    executeLawfirmPayoutUsingPOST(requestParameters: ExecuteLawfirmPayoutUsingPOSTRequest): Promise<void>;
    /**
     * getLawfirmFees
     */
    getLawfirmFeesUsingGETRaw(requestParameters: GetLawfirmFeesUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmFeesResponse>>;
    /**
     * getLawfirmFees
     */
    getLawfirmFeesUsingGET(requestParameters: GetLawfirmFeesUsingGETRequest): Promise<GetLawfirmFeesResponse>;
    /**
     * getLawfirmFinancialTransactions
     */
    getLawfirmFinancialTransactionsUsingGETRaw(requestParameters: GetLawfirmFinancialTransactionsUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmFinancialTransactionsResponse>>;
    /**
     * getLawfirmFinancialTransactions
     */
    getLawfirmFinancialTransactionsUsingGET(requestParameters: GetLawfirmFinancialTransactionsUsingGETRequest): Promise<GetLawfirmFinancialTransactionsResponse>;
    /**
     * getLawfirmPayoutReversals
     */
    getLawfirmPayoutReversalsUsingGETRaw(requestParameters: GetLawfirmPayoutReversalsUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmPayoutReversalsResponse>>;
    /**
     * getLawfirmPayoutReversals
     */
    getLawfirmPayoutReversalsUsingGET(requestParameters: GetLawfirmPayoutReversalsUsingGETRequest): Promise<GetLawfirmPayoutReversalsResponse>;
    /**
     * getLawfirmPayouts
     */
    getLawfirmPayoutsUsingGETRaw(requestParameters: GetLawfirmPayoutsUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmPayoutsResponse>>;
    /**
     * getLawfirmPayouts
     */
    getLawfirmPayoutsUsingGET(requestParameters: GetLawfirmPayoutsUsingGETRequest): Promise<GetLawfirmPayoutsResponse>;
    /**
     * getLawfirmTransactionsForCase
     */
    getLawfirmTransactionsForCaseUsingGETRaw(requestParameters: GetLawfirmTransactionsForCaseUsingGETRequest): Promise<runtime.ApiResponse<GetLawfirmTransactionsForCaseResponse>>;
    /**
     * getLawfirmTransactionsForCase
     */
    getLawfirmTransactionsForCaseUsingGET(requestParameters: GetLawfirmTransactionsForCaseUsingGETRequest): Promise<GetLawfirmTransactionsForCaseResponse>;
    /**
     * listLawfirmBankPayouts
     */
    listLawfirmBankPayoutsUsingGETRaw(requestParameters: ListLawfirmBankPayoutsUsingGETRequest): Promise<runtime.ApiResponse<ListLawfirmBankPayoutsResponse>>;
    /**
     * listLawfirmBankPayouts
     */
    listLawfirmBankPayoutsUsingGET(requestParameters: ListLawfirmBankPayoutsUsingGETRequest): Promise<ListLawfirmBankPayoutsResponse>;
    /**
     * refundLawfirmFee
     */
    refundLawfirmFeeUsingPOSTRaw(requestParameters: RefundLawfirmFeeUsingPOSTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * refundLawfirmFee
     */
    refundLawfirmFeeUsingPOST(requestParameters: RefundLawfirmFeeUsingPOSTRequest): Promise<void>;
    /**
     * reverseLawfirmPayout
     */
    reverseLawfirmPayoutUsingPOSTRaw(requestParameters: ReverseLawfirmPayoutUsingPOSTRequest): Promise<runtime.ApiResponse<object>>;
    /**
     * reverseLawfirmPayout
     */
    reverseLawfirmPayoutUsingPOST(requestParameters: ReverseLawfirmPayoutUsingPOSTRequest): Promise<object>;
    /**
     * sendPayoutToLawfirm
     */
    sendPayoutToLawfirmUsingPOSTRaw(requestParameters: SendPayoutToLawfirmUsingPOSTRequest): Promise<runtime.ApiResponse<SendPayoutToLawfirmResponse>>;
    /**
     * sendPayoutToLawfirm
     */
    sendPayoutToLawfirmUsingPOST(requestParameters: SendPayoutToLawfirmUsingPOSTRequest): Promise<SendPayoutToLawfirmResponse>;
    /**
     * updateLawfirmFee
     */
    updateLawfirmFeeUsingPUTRaw(requestParameters: UpdateLawfirmFeeUsingPUTRequest): Promise<runtime.ApiResponse<UpdateLawfirmFeeResponse>>;
    /**
     * updateLawfirmFee
     */
    updateLawfirmFeeUsingPUT(requestParameters: UpdateLawfirmFeeUsingPUTRequest): Promise<UpdateLawfirmFeeResponse>;
    /**
     * updateLawfirmPayout
     */
    updateLawfirmPayoutUsingPUTRaw(requestParameters: UpdateLawfirmPayoutUsingPUTRequest): Promise<runtime.ApiResponse<UpdateLawfirmPayoutResponse>>;
    /**
     * updateLawfirmPayout
     */
    updateLawfirmPayoutUsingPUT(requestParameters: UpdateLawfirmPayoutUsingPUTRequest): Promise<UpdateLawfirmPayoutResponse>;
}
