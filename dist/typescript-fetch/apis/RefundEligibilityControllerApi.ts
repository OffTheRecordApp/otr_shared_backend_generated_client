/* tslint:disable */
/* eslint-disable */
/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    IsRefundEligibleResponse,
    IsRefundEligibleResponseFromJSON,
    IsRefundEligibleResponseToJSON,
} from '../models';

export interface IsRefundEligibleUsingGETRequest {
    caseId: string;
}

/**
 * 
 */
export class RefundEligibilityControllerApi extends runtime.BaseAPI {

    /**
     * isRefundEligible
     */
    async isRefundEligibleUsingGETRaw(requestParameters: IsRefundEligibleUsingGETRequest): Promise<runtime.ApiResponse<IsRefundEligibleResponse>> {
        if (requestParameters.caseId === null || requestParameters.caseId === undefined) {
            throw new runtime.RequiredError('caseId','Required parameter requestParameters.caseId was null or undefined when calling isRefundEligibleUsingGET.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/cases/{caseId}/refund/eligibility`.replace(`{${"caseId"}}`, encodeURIComponent(String(requestParameters.caseId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => IsRefundEligibleResponseFromJSON(jsonValue));
    }

    /**
     * isRefundEligible
     */
    async isRefundEligibleUsingGET(requestParameters: IsRefundEligibleUsingGETRequest): Promise<IsRefundEligibleResponse> {
        const response = await this.isRefundEligibleUsingGETRaw(requestParameters);
        return await response.value();
    }

}
