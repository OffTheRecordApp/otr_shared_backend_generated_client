/**
 * OffTheRecord Rest Service API - Devo
 * A service to handle your traffic tickets
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AcceptCaseCounterRequest, DeclineCaseCounterRequest, GetCaseCounterOptionsResponse, GetCounterOfferResponse, InitiateCaseCounterRequest, InitiateCaseCounterResponse } from '../models';
export interface AcceptCaseCounterUsingPUTRequest {
    caseId: string;
    counterId: number;
    request?: AcceptCaseCounterRequest;
}
export interface DeclineCaseCounterUsingPUTRequest {
    caseId: string;
    counterId: number;
    request: DeclineCaseCounterRequest;
}
export interface GetCounterOfferByCounterIdUsingGETRequest {
    caseId: string;
    counterId: number;
}
export interface GetCounterOfferUsingGETRequest {
    caseId: string;
}
export interface InitiateCaseCounterUsingPOSTRequest {
    caseId: string;
    request: InitiateCaseCounterRequest;
}
export interface WithdrawCaseCounterUsingPUTRequest {
    caseId: string;
    counterId: number;
}
/**
 *
 */
export declare class CaseCounterOfferControllerApi extends runtime.BaseAPI {
    /**
     * acceptCaseCounter
     */
    acceptCaseCounterUsingPUTRaw(requestParameters: AcceptCaseCounterUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * acceptCaseCounter
     */
    acceptCaseCounterUsingPUT(requestParameters: AcceptCaseCounterUsingPUTRequest): Promise<void>;
    /**
     * declineCaseCounter
     */
    declineCaseCounterUsingPUTRaw(requestParameters: DeclineCaseCounterUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * declineCaseCounter
     */
    declineCaseCounterUsingPUT(requestParameters: DeclineCaseCounterUsingPUTRequest): Promise<void>;
    /**
     * getCaseCounterOptions
     */
    getCaseCounterOptionsUsingGETRaw(): Promise<runtime.ApiResponse<GetCaseCounterOptionsResponse>>;
    /**
     * getCaseCounterOptions
     */
    getCaseCounterOptionsUsingGET(): Promise<GetCaseCounterOptionsResponse>;
    /**
     * getCounterOfferByCounterId
     */
    getCounterOfferByCounterIdUsingGETRaw(requestParameters: GetCounterOfferByCounterIdUsingGETRequest): Promise<runtime.ApiResponse<GetCounterOfferResponse>>;
    /**
     * getCounterOfferByCounterId
     */
    getCounterOfferByCounterIdUsingGET(requestParameters: GetCounterOfferByCounterIdUsingGETRequest): Promise<GetCounterOfferResponse>;
    /**
     * getCounterOffer
     */
    getCounterOfferUsingGETRaw(requestParameters: GetCounterOfferUsingGETRequest): Promise<runtime.ApiResponse<GetCounterOfferResponse>>;
    /**
     * getCounterOffer
     */
    getCounterOfferUsingGET(requestParameters: GetCounterOfferUsingGETRequest): Promise<GetCounterOfferResponse>;
    /**
     * initiateCaseCounter
     */
    initiateCaseCounterUsingPOSTRaw(requestParameters: InitiateCaseCounterUsingPOSTRequest): Promise<runtime.ApiResponse<InitiateCaseCounterResponse>>;
    /**
     * initiateCaseCounter
     */
    initiateCaseCounterUsingPOST(requestParameters: InitiateCaseCounterUsingPOSTRequest): Promise<InitiateCaseCounterResponse>;
    /**
     * withdrawCaseCounter
     */
    withdrawCaseCounterUsingPUTRaw(requestParameters: WithdrawCaseCounterUsingPUTRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * withdrawCaseCounter
     */
    withdrawCaseCounterUsingPUT(requestParameters: WithdrawCaseCounterUsingPUTRequest): Promise<void>;
}
